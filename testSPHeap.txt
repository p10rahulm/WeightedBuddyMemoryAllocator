Hello, World!
sizeof(int)=4

a+0:000000000066FCB4
a+1:000000000066FCB8
a+2:000000000066FCBC
b+0:000000000066FCB4
b+1:000000000066FCB5
b+2:000000000066FCB6heapSizeInMB= 0, logHeapSize=-2147483648
heapSizeInMB= 1, logHeapSize=0
heapSizeInMB= 2, logHeapSize=1
heapSizeInMB= 3, logHeapSize=2
heapSizeInMB= 4, logHeapSize=2
heapSizeInMB= 5, logHeapSize=3
heapSizeInMB= 6, logHeapSize=3
heapSizeInMB= 7, logHeapSize=3
heapSizeInMB= 8, logHeapSize=3
heapSizeInMB= 9, logHeapSize=4
heapSizeInMB= 10, logHeapSize=4
heapSizeInMB= 11, logHeapSize=4
heapSizeInMB= 12, logHeapSize=4
heapSizeInMB= 13, logHeapSize=4
heapSizeInMB= 14, logHeapSize=4
heapSizeInMB= 15, logHeapSize=4
heapSizeInMB= 16, logHeapSize=4
heapSizeInMB= 17, logHeapSize=5
heapSizeInMB= 18, logHeapSize=5
heapSizeInMB= 19, logHeapSize=5
heapSizeInMB= 20, logHeapSize=5
heapSizeInMB= 21, logHeapSize=5
heapSizeInMB= 22, logHeapSize=5
heapSizeInMB= 23, logHeapSize=5
heapSizeInMB= 24, logHeapSize=5
heapSizeInMB= 25, logHeapSize=5
heapSizeInMB= 26, logHeapSize=5
heapSizeInMB= 27, logHeapSize=5
heapSizeInMB= 28, logHeapSize=5
heapSizeInMB= 29, logHeapSize=5
heapSizeInMB= 30, logHeapSize=5
heapSizeInMB= 31, logHeapSize=5
heapSizeInMB= 32, logHeapSize=5
heapSizeInMB= 33, logHeapSize=6
heapSizeInMB= 34, logHeapSize=6
heapSizeInMB= 35, logHeapSize=6
heapSizeInMB= 36, logHeapSize=6
heapSizeInMB= 37, logHeapSize=6
heapSizeInMB= 38, logHeapSize=6
heapSizeInMB= 39, logHeapSize=6
heapSizeInMB= 40, logHeapSize=6
heapSizeInMB= 41, logHeapSize=6
heapSizeInMB= 42, logHeapSize=6
heapSizeInMB= 43, logHeapSize=6
heapSizeInMB= 44, logHeapSize=6
heapSizeInMB= 45, logHeapSize=6
heapSizeInMB= 46, logHeapSize=6
heapSizeInMB= 47, logHeapSize=6
heapSizeInMB= 48, logHeapSize=6
heapSizeInMB= 49, logHeapSize=6
heapSizeInMB= 50, logHeapSize=6
heapSizeInMB= 51, logHeapSize=6
heapSizeInMB= 52, logHeapSize=6
heapSizeInMB= 53, logHeapSize=6
heapSizeInMB= 54, logHeapSize=6
heapSizeInMB= 55, logHeapSize=6
heapSizeInMB= 56, logHeapSize=6
heapSizeInMB= 57, logHeapSize=6
heapSizeInMB= 58, logHeapSize=6
heapSizeInMB= 59, logHeapSize=6
heapSizeInMB= 60, logHeapSize=6
heapSizeInMB= 61, logHeapSize=6
heapSizeInMB= 62, logHeapSize=6
heapSizeInMB= 63, logHeapSize=6
heapSizeInMB= 64, logHeapSize=6
heapSizeInMB= 65, logHeapSize=7
heapSizeInMB= 66, logHeapSize=7
heapSizeInMB= 67, logHeapSize=7
heapSizeInMB= 68, logHeapSize=7
heapSizeInMB= 69, logHeapSize=7
heapSizeInMB= 70, logHeapSize=7
heapSizeInMB= 71, logHeapSize=7
heapSizeInMB= 72, logHeapSize=7
heapSizeInMB= 73, logHeapSize=7
heapSizeInMB= 74, logHeapSize=7
heapSizeInMB= 75, logHeapSize=7
heapSizeInMB= 76, logHeapSize=7
heapSizeInMB= 77, logHeapSize=7
heapSizeInMB= 78, logHeapSize=7
heapSizeInMB= 79, logHeapSize=7
heapSizeInMB= 80, logHeapSize=7
heapSizeInMB= 81, logHeapSize=7
heapSizeInMB= 82, logHeapSize=7
heapSizeInMB= 83, logHeapSize=7
heapSizeInMB= 84, logHeapSize=7
heapSizeInMB= 85, logHeapSize=7
heapSizeInMB= 86, logHeapSize=7
heapSizeInMB= 87, logHeapSize=7
heapSizeInMB= 88, logHeapSize=7
heapSizeInMB= 89, logHeapSize=7
heapSizeInMB= 90, logHeapSize=7
heapSizeInMB= 91, logHeapSize=7
heapSizeInMB= 92, logHeapSize=7
heapSizeInMB= 93, logHeapSize=7
heapSizeInMB= 94, logHeapSize=7
heapSizeInMB= 95, logHeapSize=7
heapSizeInMB= 96, logHeapSize=7
heapSizeInMB= 97, logHeapSize=7
heapSizeInMB= 98, logHeapSize=7
heapSizeInMB= 99, logHeapSize=7
heapSizeInMB= 100, logHeapSize=7
heapSizeInMB= 101, logHeapSize=7
heapSizeInMB= 102, logHeapSize=7
heapSizeInMB= 103, logHeapSize=7
heapSizeInMB= 104, logHeapSize=7
heapSizeInMB= 105, logHeapSize=7
heapSizeInMB= 106, logHeapSize=7
heapSizeInMB= 107, logHeapSize=7
heapSizeInMB= 108, logHeapSize=7
heapSizeInMB= 109, logHeapSize=7
heapSizeInMB= 110, logHeapSize=7
heapSizeInMB= 111, logHeapSize=7
heapSizeInMB= 112, logHeapSize=7
heapSizeInMB= 113, logHeapSize=7
heapSizeInMB= 114, logHeapSize=7
heapSizeInMB= 115, logHeapSize=7
heapSizeInMB= 116, logHeapSize=7
heapSizeInMB= 117, logHeapSize=7
heapSizeInMB= 118, logHeapSize=7
heapSizeInMB= 119, logHeapSize=7
heapSizeInMB= 120, logHeapSize=7
heapSizeInMB= 121, logHeapSize=7
heapSizeInMB= 122, logHeapSize=7
heapSizeInMB= 123, logHeapSize=7
heapSizeInMB= 124, logHeapSize=7
heapSizeInMB= 125, logHeapSize=7
heapSizeInMB= 126, logHeapSize=7
heapSizeInMB= 127, logHeapSize=7
heapSizeInMB= 128, logHeapSize=7
heapSizeInMB= 129, logHeapSize=8
heapSizeInMB= 130, logHeapSize=8
heapSizeInMB= 131, logHeapSize=8
heapSizeInMB= 132, logHeapSize=8
heapSizeInMB= 133, logHeapSize=8
heapSizeInMB= 134, logHeapSize=8
heapSizeInMB= 135, logHeapSize=8
heapSizeInMB= 136, logHeapSize=8
heapSizeInMB= 137, logHeapSize=8
heapSizeInMB= 138, logHeapSize=8
heapSizeInMB= 139, logHeapSize=8
heapSizeInMB= 140, logHeapSize=8
heapSizeInMB= 141, logHeapSize=8
heapSizeInMB= 142, logHeapSize=8
heapSizeInMB= 143, logHeapSize=8
heapSizeInMB= 144, logHeapSize=8
heapSizeInMB= 145, logHeapSize=8
heapSizeInMB= 146, logHeapSize=8
heapSizeInMB= 147, logHeapSize=8
heapSizeInMB= 148, logHeapSize=8
heapSizeInMB= 149, logHeapSize=8
heapSizeInMB= 150, logHeapSize=8
heapSizeInMB= 151, logHeapSize=8
heapSizeInMB= 152, logHeapSize=8
heapSizeInMB= 153, logHeapSize=8
heapSizeInMB= 154, logHeapSize=8
heapSizeInMB= 155, logHeapSize=8
heapSizeInMB= 156, logHeapSize=8
heapSizeInMB= 157, logHeapSize=8
heapSizeInMB= 158, logHeapSize=8
heapSizeInMB= 159, logHeapSize=8
heapSizeInMB= 160, logHeapSize=8
heapSizeInMB= 161, logHeapSize=8
heapSizeInMB= 162, logHeapSize=8
heapSizeInMB= 163, logHeapSize=8
heapSizeInMB= 164, logHeapSize=8
heapSizeInMB= 165, logHeapSize=8
heapSizeInMB= 166, logHeapSize=8
heapSizeInMB= 167, logHeapSize=8
heapSizeInMB= 168, logHeapSize=8
heapSizeInMB= 169, logHeapSize=8
heapSizeInMB= 170, logHeapSize=8
heapSizeInMB= 171, logHeapSize=8
heapSizeInMB= 172, logHeapSize=8
heapSizeInMB= 173, logHeapSize=8
heapSizeInMB= 174, logHeapSize=8
heapSizeInMB= 175, logHeapSize=8
heapSizeInMB= 176, logHeapSize=8
heapSizeInMB= 177, logHeapSize=8
heapSizeInMB= 178, logHeapSize=8
heapSizeInMB= 179, logHeapSize=8
heapSizeInMB= 180, logHeapSize=8
heapSizeInMB= 181, logHeapSize=8
heapSizeInMB= 182, logHeapSize=8
heapSizeInMB= 183, logHeapSize=8
heapSizeInMB= 184, logHeapSize=8
heapSizeInMB= 185, logHeapSize=8
heapSizeInMB= 186, logHeapSize=8
heapSizeInMB= 187, logHeapSize=8
heapSizeInMB= 188, logHeapSize=8
heapSizeInMB= 189, logHeapSize=8
heapSizeInMB= 190, logHeapSize=8
heapSizeInMB= 191, logHeapSize=8
heapSizeInMB= 192, logHeapSize=8
heapSizeInMB= 193, logHeapSize=8
heapSizeInMB= 194, logHeapSize=8
heapSizeInMB= 195, logHeapSize=8
heapSizeInMB= 196, logHeapSize=8
heapSizeInMB= 197, logHeapSize=8
heapSizeInMB= 198, logHeapSize=8
heapSizeInMB= 199, logHeapSize=8
heapSizeInMB= 200, logHeapSize=8
heapSizeInMB= 201, logHeapSize=8
heapSizeInMB= 202, logHeapSize=8
heapSizeInMB= 203, logHeapSize=8
heapSizeInMB= 204, logHeapSize=8
heapSizeInMB= 205, logHeapSize=8
heapSizeInMB= 206, logHeapSize=8
heapSizeInMB= 207, logHeapSize=8
heapSizeInMB= 208, logHeapSize=8
heapSizeInMB= 209, logHeapSize=8
heapSizeInMB= 210, logHeapSize=8
heapSizeInMB= 211, logHeapSize=8
heapSizeInMB= 212, logHeapSize=8
heapSizeInMB= 213, logHeapSize=8
heapSizeInMB= 214, logHeapSize=8
heapSizeInMB= 215, logHeapSize=8
heapSizeInMB= 216, logHeapSize=8
heapSizeInMB= 217, logHeapSize=8
heapSizeInMB= 218, logHeapSize=8
heapSizeInMB= 219, logHeapSize=8
heapSizeInMB= 220, logHeapSize=8
heapSizeInMB= 221, logHeapSize=8
heapSizeInMB= 222, logHeapSize=8
heapSizeInMB= 223, logHeapSize=8
heapSizeInMB= 224, logHeapSize=8
heapSizeInMB= 225, logHeapSize=8
heapSizeInMB= 226, logHeapSize=8
heapSizeInMB= 227, logHeapSize=8
heapSizeInMB= 228, logHeapSize=8
heapSizeInMB= 229, logHeapSize=8
heapSizeInMB= 230, logHeapSize=8
heapSizeInMB= 231, logHeapSize=8
heapSizeInMB= 232, logHeapSize=8
heapSizeInMB= 233, logHeapSize=8
heapSizeInMB= 234, logHeapSize=8
heapSizeInMB= 235, logHeapSize=8
heapSizeInMB= 236, logHeapSize=8
heapSizeInMB= 237, logHeapSize=8
heapSizeInMB= 238, logHeapSize=8
heapSizeInMB= 239, logHeapSize=8
heapSizeInMB= 240, logHeapSize=8
heapSizeInMB= 241, logHeapSize=8
heapSizeInMB= 242, logHeapSize=8
heapSizeInMB= 243, logHeapSize=8
heapSizeInMB= 244, logHeapSize=8
heapSizeInMB= 245, logHeapSize=8
heapSizeInMB= 246, logHeapSize=8
heapSizeInMB= 247, logHeapSize=8
heapSizeInMB= 248, logHeapSize=8
heapSizeInMB= 249, logHeapSize=8
heapSizeInMB= 250, logHeapSize=8
heapSizeInMB= 251, logHeapSize=8
heapSizeInMB= 252, logHeapSize=8
heapSizeInMB= 253, logHeapSize=8
heapSizeInMB= 254, logHeapSize=8
heapSizeInMB= 255, logHeapSize=8
heapSizeInMB= 256, logHeapSize=8
memory_request= 0, correct_size=0
memory_request= 1, correct_size=1
memory_request= 2, correct_size=2
memory_request= 3, correct_size=3
memory_request= 4, correct_size=4
memory_request= 5, correct_size=6
memory_request= 6, correct_size=6
memory_request= 7, correct_size=8
memory_request= 8, correct_size=8
memory_request= 9, correct_size=12
memory_request= 10, correct_size=12
memory_request= 11, correct_size=12
memory_request= 12, correct_size=12
memory_request= 13, correct_size=16
memory_request= 14, correct_size=16
memory_request= 15, correct_size=16
memory_request= 16, correct_size=16
memory_request= 17, correct_size=24
memory_request= 18, correct_size=24
memory_request= 19, correct_size=24
memory_request= 20, correct_size=24
memory_request= 21, correct_size=24
memory_request= 22, correct_size=24
memory_request= 23, correct_size=24
memory_request= 24, correct_size=24
memory_request= 25, correct_size=32
memory_request= 26, correct_size=32
memory_request= 27, correct_size=32
memory_request= 28, correct_size=32
memory_request= 29, correct_size=32
memory_request= 30, correct_size=32
memory_request= 31, correct_size=32
memory_request= 32, correct_size=32
memory_request= 33, correct_size=48
memory_request= 34, correct_size=48
memory_request= 35, correct_size=48
memory_request= 36, correct_size=48
memory_request= 37, correct_size=48
memory_request= 38, correct_size=48
memory_request= 39, correct_size=48
memory_request= 40, correct_size=48
memory_request= 41, correct_size=48
memory_request= 42, correct_size=48
memory_request= 43, correct_size=48
memory_request= 44, correct_size=48
memory_request= 45, correct_size=48
memory_request= 46, correct_size=48
memory_request= 47, correct_size=48
memory_request= 48, correct_size=48
memory_request= 49, correct_size=64
memory_request= 50, correct_size=64
memory_request= 51, correct_size=64
memory_request= 52, correct_size=64
memory_request= 53, correct_size=64
memory_request= 54, correct_size=64
memory_request= 55, correct_size=64
memory_request= 56, correct_size=64
memory_request= 57, correct_size=64
memory_request= 58, correct_size=64
memory_request= 59, correct_size=64
memory_request= 60, correct_size=64
memory_request= 61, correct_size=64
memory_request= 62, correct_size=64
memory_request= 63, correct_size=64
memory_request= 64, correct_size=64
memory_request= 65, correct_size=96
memory_request= 66, correct_size=96
memory_request= 67, correct_size=96
memory_request= 68, correct_size=96
memory_request= 69, correct_size=96
memory_request= 70, correct_size=96
memory_request= 71, correct_size=96
memory_request= 72, correct_size=96
memory_request= 73, correct_size=96
memory_request= 74, correct_size=96
memory_request= 75, correct_size=96
memory_request= 76, correct_size=96
memory_request= 77, correct_size=96
memory_request= 78, correct_size=96
memory_request= 79, correct_size=96
memory_request= 80, correct_size=96
memory_request= 81, correct_size=96
memory_request= 82, correct_size=96
memory_request= 83, correct_size=96
memory_request= 84, correct_size=96
memory_request= 85, correct_size=96
memory_request= 86, correct_size=96
memory_request= 87, correct_size=96
memory_request= 88, correct_size=96
memory_request= 89, correct_size=96
memory_request= 90, correct_size=96
memory_request= 91, correct_size=96
memory_request= 92, correct_size=96
memory_request= 93, correct_size=96
memory_request= 94, correct_size=96
memory_request= 95, correct_size=96
memory_request= 96, correct_size=96
memory_request= 97, correct_size=128
memory_request= 98, correct_size=128
memory_request= 99, correct_size=128
memory_request= 100, correct_size=128
memory_request= 101, correct_size=128
memory_request= 102, correct_size=128
memory_request= 103, correct_size=128
memory_request= 104, correct_size=128
memory_request= 105, correct_size=128
memory_request= 106, correct_size=128
memory_request= 107, correct_size=128
memory_request= 108, correct_size=128
memory_request= 109, correct_size=128
memory_request= 110, correct_size=128
memory_request= 111, correct_size=128
memory_request= 112, correct_size=128
memory_request= 113, correct_size=128
memory_request= 114, correct_size=128
memory_request= 115, correct_size=128
memory_request= 116, correct_size=128
memory_request= 117, correct_size=128
memory_request= 118, correct_size=128
memory_request= 119, correct_size=128
memory_request= 120, correct_size=128
memory_request= 121, correct_size=128
memory_request= 122, correct_size=128
memory_request= 123, correct_size=128
memory_request= 124, correct_size=128
memory_request= 125, correct_size=128
memory_request= 126, correct_size=128
memory_request= 127, correct_size=128
memory_request= 128, correct_size=128
memory_request= 129, correct_size=192
memory_request= 130, correct_size=192
memory_request= 131, correct_size=192
memory_request= 132, correct_size=192
memory_request= 133, correct_size=192
memory_request= 134, correct_size=192
memory_request= 135, correct_size=192
memory_request= 136, correct_size=192
memory_request= 137, correct_size=192
memory_request= 138, correct_size=192
memory_request= 139, correct_size=192
memory_request= 140, correct_size=192
memory_request= 141, correct_size=192
memory_request= 142, correct_size=192
memory_request= 143, correct_size=192
memory_request= 144, correct_size=192
memory_request= 145, correct_size=192
memory_request= 146, correct_size=192
memory_request= 147, correct_size=192
memory_request= 148, correct_size=192
memory_request= 149, correct_size=192
memory_request= 150, correct_size=192
memory_request= 151, correct_size=192
memory_request= 152, correct_size=192
memory_request= 153, correct_size=192
memory_request= 154, correct_size=192
memory_request= 155, correct_size=192
memory_request= 156, correct_size=192
memory_request= 157, correct_size=192
memory_request= 158, correct_size=192
memory_request= 159, correct_size=192
memory_request= 160, correct_size=192
memory_request= 161, correct_size=192
memory_request= 162, correct_size=192
memory_request= 163, correct_size=192
memory_request= 164, correct_size=192
memory_request= 165, correct_size=192
memory_request= 166, correct_size=192
memory_request= 167, correct_size=192
memory_request= 168, correct_size=192
memory_request= 169, correct_size=192
memory_request= 170, correct_size=192
memory_request= 171, correct_size=192
memory_request= 172, correct_size=192
memory_request= 173, correct_size=192
memory_request= 174, correct_size=192
memory_request= 175, correct_size=192
memory_request= 176, correct_size=192
memory_request= 177, correct_size=192
memory_request= 178, correct_size=192
memory_request= 179, correct_size=192
memory_request= 180, correct_size=192
memory_request= 181, correct_size=192
memory_request= 182, correct_size=192
memory_request= 183, correct_size=192
memory_request= 184, correct_size=192
memory_request= 185, correct_size=192
memory_request= 186, correct_size=192
memory_request= 187, correct_size=192
memory_request= 188, correct_size=192
memory_request= 189, correct_size=192
memory_request= 190, correct_size=192
memory_request= 191, correct_size=192
memory_request= 192, correct_size=192
memory_request= 193, correct_size=256
memory_request= 194, correct_size=256
memory_request= 195, correct_size=256
memory_request= 196, correct_size=256
memory_request= 197, correct_size=256
memory_request= 198, correct_size=256
memory_request= 199, correct_size=256
memory_request= 200, correct_size=256
memory_request= 201, correct_size=256
memory_request= 202, correct_size=256
memory_request= 203, correct_size=256
memory_request= 204, correct_size=256
memory_request= 205, correct_size=256
memory_request= 206, correct_size=256
memory_request= 207, correct_size=256
memory_request= 208, correct_size=256
memory_request= 209, correct_size=256
memory_request= 210, correct_size=256
memory_request= 211, correct_size=256
memory_request= 212, correct_size=256
memory_request= 213, correct_size=256
memory_request= 214, correct_size=256
memory_request= 215, correct_size=256
memory_request= 216, correct_size=256
memory_request= 217, correct_size=256
memory_request= 218, correct_size=256
memory_request= 219, correct_size=256
memory_request= 220, correct_size=256
memory_request= 221, correct_size=256
memory_request= 222, correct_size=256
memory_request= 223, correct_size=256
memory_request= 224, correct_size=256
memory_request= 225, correct_size=256
memory_request= 226, correct_size=256
memory_request= 227, correct_size=256
memory_request= 228, correct_size=256
memory_request= 229, correct_size=256
memory_request= 230, correct_size=256
memory_request= 231, correct_size=256
memory_request= 232, correct_size=256
memory_request= 233, correct_size=256
memory_request= 234, correct_size=256
memory_request= 235, correct_size=256
memory_request= 236, correct_size=256
memory_request= 237, correct_size=256
memory_request= 238, correct_size=256
memory_request= 239, correct_size=256
memory_request= 240, correct_size=256
memory_request= 241, correct_size=256
memory_request= 242, correct_size=256
memory_request= 243, correct_size=256
memory_request= 244, correct_size=256
memory_request= 245, correct_size=256
memory_request= 246, correct_size=256
memory_request= 247, correct_size=256
memory_request= 248, correct_size=256
memory_request= 249, correct_size=256
memory_request= 250, correct_size=256
memory_request= 251, correct_size=256
memory_request= 252, correct_size=256
memory_request= 253, correct_size=256
memory_request= 254, correct_size=256
memory_request= 255, correct_size=256
memory_request= 256, correct_size=256
The size required is too small
memory_request= 0, correct_size=0, bucket_num = -1,
The size required is too small
memory_request= 1, correct_size=1, bucket_num = -1,
The size required is too small
memory_request= 2, correct_size=2, bucket_num = -1,
The size required is too small
memory_request= 3, correct_size=3, bucket_num = -1,
memory_request= 4, correct_size=4, bucket_num = 0,
memory_request= 5, correct_size=6, bucket_num = 1,
memory_request= 6, correct_size=6, bucket_num = 1,
memory_request= 7, correct_size=8, bucket_num = 2,
memory_request= 8, correct_size=8, bucket_num = 2,
memory_request= 9, correct_size=12, bucket_num = 3,
memory_request= 10, correct_size=12, bucket_num = 3,
memory_request= 11, correct_size=12, bucket_num = 3,
memory_request= 12, correct_size=12, bucket_num = 3,
memory_request= 13, correct_size=16, bucket_num = 4,
memory_request= 14, correct_size=16, bucket_num = 4,
memory_request= 15, correct_size=16, bucket_num = 4,
memory_request= 16, correct_size=16, bucket_num = 4,
memory_request= 17, correct_size=24, bucket_num = 5,
memory_request= 18, correct_size=24, bucket_num = 5,
memory_request= 19, correct_size=24, bucket_num = 5,
memory_request= 20, correct_size=24, bucket_num = 5,
memory_request= 21, correct_size=24, bucket_num = 5,
memory_request= 22, correct_size=24, bucket_num = 5,
memory_request= 23, correct_size=24, bucket_num = 5,
memory_request= 24, correct_size=24, bucket_num = 5,
memory_request= 25, correct_size=32, bucket_num = 6,
memory_request= 26, correct_size=32, bucket_num = 6,
memory_request= 27, correct_size=32, bucket_num = 6,
memory_request= 28, correct_size=32, bucket_num = 6,
memory_request= 29, correct_size=32, bucket_num = 6,
memory_request= 30, correct_size=32, bucket_num = 6,
memory_request= 31, correct_size=32, bucket_num = 6,
memory_request= 32, correct_size=32, bucket_num = 6,
memory_request= 33, correct_size=48, bucket_num = 7,
memory_request= 34, correct_size=48, bucket_num = 7,
memory_request= 35, correct_size=48, bucket_num = 7,
memory_request= 36, correct_size=48, bucket_num = 7,
memory_request= 37, correct_size=48, bucket_num = 7,
memory_request= 38, correct_size=48, bucket_num = 7,
memory_request= 39, correct_size=48, bucket_num = 7,
memory_request= 40, correct_size=48, bucket_num = 7,
memory_request= 41, correct_size=48, bucket_num = 7,
memory_request= 42, correct_size=48, bucket_num = 7,
memory_request= 43, correct_size=48, bucket_num = 7,
memory_request= 44, correct_size=48, bucket_num = 7,
memory_request= 45, correct_size=48, bucket_num = 7,
memory_request= 46, correct_size=48, bucket_num = 7,
memory_request= 47, correct_size=48, bucket_num = 7,
memory_request= 48, correct_size=48, bucket_num = 7,
memory_request= 49, correct_size=64, bucket_num = 8,
memory_request= 50, correct_size=64, bucket_num = 8,
memory_request= 51, correct_size=64, bucket_num = 8,
memory_request= 52, correct_size=64, bucket_num = 8,
memory_request= 53, correct_size=64, bucket_num = 8,
memory_request= 54, correct_size=64, bucket_num = 8,
memory_request= 55, correct_size=64, bucket_num = 8,
memory_request= 56, correct_size=64, bucket_num = 8,
memory_request= 57, correct_size=64, bucket_num = 8,
memory_request= 58, correct_size=64, bucket_num = 8,
memory_request= 59, correct_size=64, bucket_num = 8,
memory_request= 60, correct_size=64, bucket_num = 8,
memory_request= 61, correct_size=64, bucket_num = 8,
memory_request= 62, correct_size=64, bucket_num = 8,
memory_request= 63, correct_size=64, bucket_num = 8,
memory_request= 64, correct_size=64, bucket_num = 8,
memory_request= 65, correct_size=96, bucket_num = 9,
memory_request= 66, correct_size=96, bucket_num = 9,
memory_request= 67, correct_size=96, bucket_num = 9,
memory_request= 68, correct_size=96, bucket_num = 9,
memory_request= 69, correct_size=96, bucket_num = 9,
memory_request= 70, correct_size=96, bucket_num = 9,
memory_request= 71, correct_size=96, bucket_num = 9,
memory_request= 72, correct_size=96, bucket_num = 9,
memory_request= 73, correct_size=96, bucket_num = 9,
memory_request= 74, correct_size=96, bucket_num = 9,
memory_request= 75, correct_size=96, bucket_num = 9,
memory_request= 76, correct_size=96, bucket_num = 9,
memory_request= 77, correct_size=96, bucket_num = 9,
memory_request= 78, correct_size=96, bucket_num = 9,
memory_request= 79, correct_size=96, bucket_num = 9,
memory_request= 80, correct_size=96, bucket_num = 9,
memory_request= 81, correct_size=96, bucket_num = 9,
memory_request= 82, correct_size=96, bucket_num = 9,
memory_request= 83, correct_size=96, bucket_num = 9,
memory_request= 84, correct_size=96, bucket_num = 9,
memory_request= 85, correct_size=96, bucket_num = 9,
memory_request= 86, correct_size=96, bucket_num = 9,
memory_request= 87, correct_size=96, bucket_num = 9,
memory_request= 88, correct_size=96, bucket_num = 9,
memory_request= 89, correct_size=96, bucket_num = 9,
memory_request= 90, correct_size=96, bucket_num = 9,
memory_request= 91, correct_size=96, bucket_num = 9,
memory_request= 92, correct_size=96, bucket_num = 9,
memory_request= 93, correct_size=96, bucket_num = 9,
memory_request= 94, correct_size=96, bucket_num = 9,
memory_request= 95, correct_size=96, bucket_num = 9,
memory_request= 96, correct_size=96, bucket_num = 9,
memory_request= 97, correct_size=128, bucket_num = 10,
memory_request= 98, correct_size=128, bucket_num = 10,
memory_request= 99, correct_size=128, bucket_num = 10,
memory_request= 100, correct_size=128, bucket_num = 10,
memory_request= 101, correct_size=128, bucket_num = 10,
memory_request= 102, correct_size=128, bucket_num = 10,
memory_request= 103, correct_size=128, bucket_num = 10,
memory_request= 104, correct_size=128, bucket_num = 10,
memory_request= 105, correct_size=128, bucket_num = 10,
memory_request= 106, correct_size=128, bucket_num = 10,
memory_request= 107, correct_size=128, bucket_num = 10,
memory_request= 108, correct_size=128, bucket_num = 10,
memory_request= 109, correct_size=128, bucket_num = 10,
memory_request= 110, correct_size=128, bucket_num = 10,
memory_request= 111, correct_size=128, bucket_num = 10,
memory_request= 112, correct_size=128, bucket_num = 10,
memory_request= 113, correct_size=128, bucket_num = 10,
memory_request= 114, correct_size=128, bucket_num = 10,
memory_request= 115, correct_size=128, bucket_num = 10,
memory_request= 116, correct_size=128, bucket_num = 10,
memory_request= 117, correct_size=128, bucket_num = 10,
memory_request= 118, correct_size=128, bucket_num = 10,
memory_request= 119, correct_size=128, bucket_num = 10,
memory_request= 120, correct_size=128, bucket_num = 10,
memory_request= 121, correct_size=128, bucket_num = 10,
memory_request= 122, correct_size=128, bucket_num = 10,
memory_request= 123, correct_size=128, bucket_num = 10,
memory_request= 124, correct_size=128, bucket_num = 10,
memory_request= 125, correct_size=128, bucket_num = 10,
memory_request= 126, correct_size=128, bucket_num = 10,
memory_request= 127, correct_size=128, bucket_num = 10,
memory_request= 128, correct_size=128, bucket_num = 10,
memory_request= 129, correct_size=192, bucket_num = 11,
memory_request= 130, correct_size=192, bucket_num = 11,
memory_request= 131, correct_size=192, bucket_num = 11,
memory_request= 132, correct_size=192, bucket_num = 11,
memory_request= 133, correct_size=192, bucket_num = 11,
memory_request= 134, correct_size=192, bucket_num = 11,
memory_request= 135, correct_size=192, bucket_num = 11,
memory_request= 136, correct_size=192, bucket_num = 11,
memory_request= 137, correct_size=192, bucket_num = 11,
memory_request= 138, correct_size=192, bucket_num = 11,
memory_request= 139, correct_size=192, bucket_num = 11,
memory_request= 140, correct_size=192, bucket_num = 11,
memory_request= 141, correct_size=192, bucket_num = 11,
memory_request= 142, correct_size=192, bucket_num = 11,
memory_request= 143, correct_size=192, bucket_num = 11,
memory_request= 144, correct_size=192, bucket_num = 11,
memory_request= 145, correct_size=192, bucket_num = 11,
memory_request= 146, correct_size=192, bucket_num = 11,
memory_request= 147, correct_size=192, bucket_num = 11,
memory_request= 148, correct_size=192, bucket_num = 11,
memory_request= 149, correct_size=192, bucket_num = 11,
memory_request= 150, correct_size=192, bucket_num = 11,
memory_request= 151, correct_size=192, bucket_num = 11,
memory_request= 152, correct_size=192, bucket_num = 11,
memory_request= 153, correct_size=192, bucket_num = 11,
memory_request= 154, correct_size=192, bucket_num = 11,
memory_request= 155, correct_size=192, bucket_num = 11,
memory_request= 156, correct_size=192, bucket_num = 11,
memory_request= 157, correct_size=192, bucket_num = 11,
memory_request= 158, correct_size=192, bucket_num = 11,
memory_request= 159, correct_size=192, bucket_num = 11,
memory_request= 160, correct_size=192, bucket_num = 11,
memory_request= 161, correct_size=192, bucket_num = 11,
memory_request= 162, correct_size=192, bucket_num = 11,
memory_request= 163, correct_size=192, bucket_num = 11,
memory_request= 164, correct_size=192, bucket_num = 11,
memory_request= 165, correct_size=192, bucket_num = 11,
memory_request= 166, correct_size=192, bucket_num = 11,
memory_request= 167, correct_size=192, bucket_num = 11,
memory_request= 168, correct_size=192, bucket_num = 11,
memory_request= 169, correct_size=192, bucket_num = 11,
memory_request= 170, correct_size=192, bucket_num = 11,
memory_request= 171, correct_size=192, bucket_num = 11,
memory_request= 172, correct_size=192, bucket_num = 11,
memory_request= 173, correct_size=192, bucket_num = 11,
memory_request= 174, correct_size=192, bucket_num = 11,
memory_request= 175, correct_size=192, bucket_num = 11,
memory_request= 176, correct_size=192, bucket_num = 11,
memory_request= 177, correct_size=192, bucket_num = 11,
memory_request= 178, correct_size=192, bucket_num = 11,
memory_request= 179, correct_size=192, bucket_num = 11,
memory_request= 180, correct_size=192, bucket_num = 11,
memory_request= 181, correct_size=192, bucket_num = 11,
memory_request= 182, correct_size=192, bucket_num = 11,
memory_request= 183, correct_size=192, bucket_num = 11,
memory_request= 184, correct_size=192, bucket_num = 11,
memory_request= 185, correct_size=192, bucket_num = 11,
memory_request= 186, correct_size=192, bucket_num = 11,
memory_request= 187, correct_size=192, bucket_num = 11,
memory_request= 188, correct_size=192, bucket_num = 11,
memory_request= 189, correct_size=192, bucket_num = 11,
memory_request= 190, correct_size=192, bucket_num = 11,
memory_request= 191, correct_size=192, bucket_num = 11,
memory_request= 192, correct_size=192, bucket_num = 11,
memory_request= 193, correct_size=256, bucket_num = 12,
memory_request= 194, correct_size=256, bucket_num = 12,
memory_request= 195, correct_size=256, bucket_num = 12,
memory_request= 196, correct_size=256, bucket_num = 12,
memory_request= 197, correct_size=256, bucket_num = 12,
memory_request= 198, correct_size=256, bucket_num = 12,
memory_request= 199, correct_size=256, bucket_num = 12,
memory_request= 200, correct_size=256, bucket_num = 12,
memory_request= 201, correct_size=256, bucket_num = 12,
memory_request= 202, correct_size=256, bucket_num = 12,
memory_request= 203, correct_size=256, bucket_num = 12,
memory_request= 204, correct_size=256, bucket_num = 12,
memory_request= 205, correct_size=256, bucket_num = 12,
memory_request= 206, correct_size=256, bucket_num = 12,
memory_request= 207, correct_size=256, bucket_num = 12,
memory_request= 208, correct_size=256, bucket_num = 12,
memory_request= 209, correct_size=256, bucket_num = 12,
memory_request= 210, correct_size=256, bucket_num = 12,
memory_request= 211, correct_size=256, bucket_num = 12,
memory_request= 212, correct_size=256, bucket_num = 12,
memory_request= 213, correct_size=256, bucket_num = 12,
memory_request= 214, correct_size=256, bucket_num = 12,
memory_request= 215, correct_size=256, bucket_num = 12,
memory_request= 216, correct_size=256, bucket_num = 12,
memory_request= 217, correct_size=256, bucket_num = 12,
memory_request= 218, correct_size=256, bucket_num = 12,
memory_request= 219, correct_size=256, bucket_num = 12,
memory_request= 220, correct_size=256, bucket_num = 12,
memory_request= 221, correct_size=256, bucket_num = 12,
memory_request= 222, correct_size=256, bucket_num = 12,
memory_request= 223, correct_size=256, bucket_num = 12,
memory_request= 224, correct_size=256, bucket_num = 12,
memory_request= 225, correct_size=256, bucket_num = 12,
memory_request= 226, correct_size=256, bucket_num = 12,
memory_request= 227, correct_size=256, bucket_num = 12,
memory_request= 228, correct_size=256, bucket_num = 12,
memory_request= 229, correct_size=256, bucket_num = 12,
memory_request= 230, correct_size=256, bucket_num = 12,
memory_request= 231, correct_size=256, bucket_num = 12,
memory_request= 232, correct_size=256, bucket_num = 12,
memory_request= 233, correct_size=256, bucket_num = 12,
memory_request= 234, correct_size=256, bucket_num = 12,
memory_request= 235, correct_size=256, bucket_num = 12,
memory_request= 236, correct_size=256, bucket_num = 12,
memory_request= 237, correct_size=256, bucket_num = 12,
memory_request= 238, correct_size=256, bucket_num = 12,
memory_request= 239, correct_size=256, bucket_num = 12,
memory_request= 240, correct_size=256, bucket_num = 12,
memory_request= 241, correct_size=256, bucket_num = 12,
memory_request= 242, correct_size=256, bucket_num = 12,
memory_request= 243, correct_size=256, bucket_num = 12,
memory_request= 244, correct_size=256, bucket_num = 12,
memory_request= 245, correct_size=256, bucket_num = 12,
memory_request= 246, correct_size=256, bucket_num = 12,
memory_request= 247, correct_size=256, bucket_num = 12,
memory_request= 248, correct_size=256, bucket_num = 12,
memory_request= 249, correct_size=256, bucket_num = 12,
memory_request= 250, correct_size=256, bucket_num = 12,
memory_request= 251, correct_size=256, bucket_num = 12,
memory_request= 252, correct_size=256, bucket_num = 12,
memory_request= 253, correct_size=256, bucket_num = 12,
memory_request= 254, correct_size=256, bucket_num = 12,
memory_request= 255, correct_size=256, bucket_num = 12,
memory_request= 256, correct_size=256, bucket_num = 12,
bucket_num= 0, bucket_sizeInB=4
bucket_num= 1, bucket_sizeInB=6
bucket_num= 2, bucket_sizeInB=8
bucket_num= 3, bucket_sizeInB=12
bucket_num= 4, bucket_sizeInB=16
bucket_num= 5, bucket_sizeInB=24
bucket_num= 6, bucket_sizeInB=32
bucket_num= 7, bucket_sizeInB=48
bucket_num= 8, bucket_sizeInB=64
bucket_num= 9, bucket_sizeInB=96
bucket_num= 10, bucket_sizeInB=128
bucket_num= 11, bucket_sizeInB=192
bucket_num= 12, bucket_sizeInB=256
bucket_num= 13, bucket_sizeInB=384
bucket_num= 14, bucket_sizeInB=512
bucket_num= 15, bucket_sizeInB=768
bucket_num= 16, bucket_sizeInB=1024
bucket_num= 17, bucket_sizeInB=1536
bucket_num= 18, bucket_sizeInB=2048
bucket_num= 19, bucket_sizeInB=3072
bucket_num= 20, bucket_sizeInB=4096
bucket_num= 21, bucket_sizeInB=6144
bucket_num= 22, bucket_sizeInB=8192
bucket_num= 23, bucket_sizeInB=12288
bucket_num= 24, bucket_sizeInB=16384
bucket_num= 25, bucket_sizeInB=24576
bucket_num= 26, bucket_sizeInB=32768
bucket_num= 27, bucket_sizeInB=49152
bucket_num= 28, bucket_sizeInB=65536
bucket_num= 29, bucket_sizeInB=98304
bucket_num= 30, bucket_sizeInB=131072
bucket_num= 31, bucket_sizeInB=196608
bucket_num= 32, bucket_sizeInB=262144
bucket_num= 33, bucket_sizeInB=393216
bucket_num= 34, bucket_sizeInB=524288
bucket_num= 35, bucket_sizeInB=786432
bucket_num= 36, bucket_sizeInB=1048576
bucket_num= 37, bucket_sizeInB=1572864
bucket_num= 38, bucket_sizeInB=2097152
bucket_num= 39, bucket_sizeInB=3145728
bucket_num= 40, bucket_sizeInB=4194304
bucket_num= 41, bucket_sizeInB=6291456
bucket_num= 42, bucket_sizeInB=8388608
bucket_num= 43, bucket_sizeInB=12582912
bucket_num= 44, bucket_sizeInB=16777216
bucket_num= 45, bucket_sizeInB=25165824
bucket_num= 46, bucket_sizeInB=33554432
bucket_num= 47, bucket_sizeInB=50331648
bucket_num= 48, bucket_sizeInB=67108864
bucket_num= 49, bucket_sizeInB=100663296
bucket_num= 50, bucket_sizeInB=134217728
bucket_num= 51, bucket_sizeInB=201326592
bucket_num= 52, bucket_sizeInB=268435456
bucket_num= 53, bucket_sizeInB=402653184
bucket_num= 54, bucket_sizeInB=536870912
bucket_num= 55, bucket_sizeInB=805306368

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 4
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 12

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7590, (kval = 3,tag = 0,type = 0)]
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		0
Number of De-allocation Requests: 	0
Number of Splits: 					0
Number of Recombines: 				0
Total Size of Heap: 				12
Total Size Requested: 				0
Total Size Allocated: 				0
Internal Fragmentation: 			0.00%
Percentage Full: 					0.00%
------------------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 11
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 128

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7760, (kval = 10,tag = 0,type = 0)]
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		0
Number of De-allocation Requests: 	0
Number of Splits: 					0
Number of Recombines: 				0
Total Size of Heap: 				128
Total Size Requested: 				0
Total Size Allocated: 				0
Internal Fragmentation: 			0.00%
Percentage Full: 					0.00%
------------------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 16,tag = 0,type = 0)]
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		0
Number of De-allocation Requests: 	0
Number of Splits: 					0
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				0
Total Size Allocated: 				0
Internal Fragmentation: 			0.00%
Percentage Full: 					0.00%
------------------------------------------
Please check the space required:-10 that you have input
Requested -10 bytes. Space is not available in Heap2
Please check the space required:-9 that you have input
Requested -9 bytes. Space is not available in Heap2
Please check the space required:-8 that you have input
Requested -8 bytes. Space is not available in Heap2
Please check the space required:-7 that you have input
Requested -7 bytes. Space is not available in Heap2
Please check the space required:-6 that you have input
Requested -6 bytes. Space is not available in Heap2
Please check the space required:-5 that you have input
Requested -5 bytes. Space is not available in Heap2
Please check the space required:-4 that you have input
Requested -4 bytes. Space is not available in Heap2
Please check the space required:-3 that you have input
Requested -3 bytes. Space is not available in Heap2
Please check the space required:-2 that you have input
Requested -2 bytes. Space is not available in Heap2
Please check the space required:-1 that you have input
Requested -1 bytes. Space is not available in Heap2
The space requested:0 is too low. Please request atleast 4 bytes
Requested 0 bytes. Space is not available in Heap2
The space requested:1 is too low. Please request atleast 4 bytes
Requested 1 bytes. Space is not available in Heap2
The space requested:2 is too low. Please request atleast 4 bytes
Requested 2 bytes. Space is not available in Heap2
The space requested:3 is too low. Please request atleast 4 bytes
Requested 3 bytes. Space is not available in Heap2
Requested 4 bytes. Space is available in bucket 10 of Heap 2
Requested 5 bytes. Space is available in bucket 10 of Heap 2
Requested 6 bytes. Space is available in bucket 10 of Heap 2
Requested 7 bytes. Space is available in bucket 10 of Heap 2
Requested 8 bytes. Space is available in bucket 10 of Heap 2
Requested 9 bytes. Space is available in bucket 10 of Heap 2
Requested 10 bytes. Space is available in bucket 10 of Heap 2
Requested 11 bytes. Space is available in bucket 10 of Heap 2
Requested 12 bytes. Space is available in bucket 10 of Heap 2
Requested 13 bytes. Space is available in bucket 10 of Heap 2
Requested 14 bytes. Space is available in bucket 10 of Heap 2
Requested 15 bytes. Space is available in bucket 10 of Heap 2
Requested 16 bytes. Space is available in bucket 10 of Heap 2
Requested 17 bytes. Space is available in bucket 10 of Heap 2
Requested 18 bytes. Space is available in bucket 10 of Heap 2
Requested 19 bytes. Space is available in bucket 10 of Heap 2
Requested 20 bytes. Space is available in bucket 10 of Heap 2
Requested 21 bytes. Space is available in bucket 10 of Heap 2
Requested 22 bytes. Space is available in bucket 10 of Heap 2
Requested 23 bytes. Space is available in bucket 10 of Heap 2
Requested 24 bytes. Space is available in bucket 10 of Heap 2
Requested 25 bytes. Space is available in bucket 10 of Heap 2
Requested 26 bytes. Space is available in bucket 10 of Heap 2
Requested 27 bytes. Space is available in bucket 10 of Heap 2
Requested 28 bytes. Space is available in bucket 10 of Heap 2
Requested 29 bytes. Space is available in bucket 10 of Heap 2
Requested 30 bytes. Space is available in bucket 10 of Heap 2
Requested 31 bytes. Space is available in bucket 10 of Heap 2
Requested 32 bytes. Space is available in bucket 10 of Heap 2
Requested 33 bytes. Space is available in bucket 10 of Heap 2
Requested 34 bytes. Space is available in bucket 10 of Heap 2
Requested 35 bytes. Space is available in bucket 10 of Heap 2
Requested 36 bytes. Space is available in bucket 10 of Heap 2
Requested 37 bytes. Space is available in bucket 10 of Heap 2
Requested 38 bytes. Space is available in bucket 10 of Heap 2
Requested 39 bytes. Space is available in bucket 10 of Heap 2
Requested 40 bytes. Space is available in bucket 10 of Heap 2
Requested 41 bytes. Space is available in bucket 10 of Heap 2
Requested 42 bytes. Space is available in bucket 10 of Heap 2
Requested 43 bytes. Space is available in bucket 10 of Heap 2
Requested 44 bytes. Space is available in bucket 10 of Heap 2
Requested 45 bytes. Space is available in bucket 10 of Heap 2
Requested 46 bytes. Space is available in bucket 10 of Heap 2
Requested 47 bytes. Space is available in bucket 10 of Heap 2
Requested 48 bytes. Space is available in bucket 10 of Heap 2
Requested 49 bytes. Space is available in bucket 10 of Heap 2
Requested 50 bytes. Space is available in bucket 10 of Heap 2
Requested 51 bytes. Space is available in bucket 10 of Heap 2
Requested 52 bytes. Space is available in bucket 10 of Heap 2
Requested 53 bytes. Space is available in bucket 10 of Heap 2
Requested 54 bytes. Space is available in bucket 10 of Heap 2
Requested 55 bytes. Space is available in bucket 10 of Heap 2
Requested 56 bytes. Space is available in bucket 10 of Heap 2
Requested 57 bytes. Space is available in bucket 10 of Heap 2
Requested 58 bytes. Space is available in bucket 10 of Heap 2
Requested 59 bytes. Space is available in bucket 10 of Heap 2
Requested 60 bytes. Space is available in bucket 10 of Heap 2
Requested 61 bytes. Space is available in bucket 10 of Heap 2
Requested 62 bytes. Space is available in bucket 10 of Heap 2
Requested 63 bytes. Space is available in bucket 10 of Heap 2
Requested 64 bytes. Space is available in bucket 10 of Heap 2
Requested 65 bytes. Space is available in bucket 10 of Heap 2
Requested 66 bytes. Space is available in bucket 10 of Heap 2
Requested 67 bytes. Space is available in bucket 10 of Heap 2
Requested 68 bytes. Space is available in bucket 10 of Heap 2
Requested 69 bytes. Space is available in bucket 10 of Heap 2
Requested 70 bytes. Space is available in bucket 10 of Heap 2
Requested 71 bytes. Space is available in bucket 10 of Heap 2
Requested 72 bytes. Space is available in bucket 10 of Heap 2
Requested 73 bytes. Space is available in bucket 10 of Heap 2
Requested 74 bytes. Space is available in bucket 10 of Heap 2
Requested 75 bytes. Space is available in bucket 10 of Heap 2
Requested 76 bytes. Space is available in bucket 10 of Heap 2
Requested 77 bytes. Space is available in bucket 10 of Heap 2
Requested 78 bytes. Space is available in bucket 10 of Heap 2
Requested 79 bytes. Space is available in bucket 10 of Heap 2
Requested 80 bytes. Space is available in bucket 10 of Heap 2
Requested 81 bytes. Space is available in bucket 10 of Heap 2
Requested 82 bytes. Space is available in bucket 10 of Heap 2
Requested 83 bytes. Space is available in bucket 10 of Heap 2
Requested 84 bytes. Space is available in bucket 10 of Heap 2
Requested 85 bytes. Space is available in bucket 10 of Heap 2
Requested 86 bytes. Space is available in bucket 10 of Heap 2
Requested 87 bytes. Space is available in bucket 10 of Heap 2
Requested 88 bytes. Space is available in bucket 10 of Heap 2
Requested 89 bytes. Space is available in bucket 10 of Heap 2
Requested 90 bytes. Space is available in bucket 10 of Heap 2
Requested 91 bytes. Space is available in bucket 10 of Heap 2
Requested 92 bytes. Space is available in bucket 10 of Heap 2
Requested 93 bytes. Space is available in bucket 10 of Heap 2
Requested 94 bytes. Space is available in bucket 10 of Heap 2
Requested 95 bytes. Space is available in bucket 10 of Heap 2
Requested 96 bytes. Space is available in bucket 10 of Heap 2
Requested 97 bytes. Space is available in bucket 10 of Heap 2
Requested 98 bytes. Space is available in bucket 10 of Heap 2
Requested 99 bytes. Space is available in bucket 10 of Heap 2
Requested 100 bytes. Space is available in bucket 10 of Heap 2
Requested 101 bytes. Space is available in bucket 10 of Heap 2
Requested 102 bytes. Space is available in bucket 10 of Heap 2
Requested 103 bytes. Space is available in bucket 10 of Heap 2
Requested 104 bytes. Space is available in bucket 10 of Heap 2
Requested 105 bytes. Space is available in bucket 10 of Heap 2
Requested 106 bytes. Space is available in bucket 10 of Heap 2
Requested 107 bytes. Space is available in bucket 10 of Heap 2
Requested 108 bytes. Space is available in bucket 10 of Heap 2
Requested 109 bytes. Space is available in bucket 10 of Heap 2
Requested 110 bytes. Space is available in bucket 10 of Heap 2
Requested 111 bytes. Space is available in bucket 10 of Heap 2
Requested 112 bytes. Space is available in bucket 10 of Heap 2
Requested 113 bytes. Space is available in bucket 10 of Heap 2
Requested 114 bytes. Space is available in bucket 10 of Heap 2
Requested 115 bytes. Space is available in bucket 10 of Heap 2
Requested 116 bytes. Space is available in bucket 10 of Heap 2
Requested 117 bytes. Space is available in bucket 10 of Heap 2
Requested 118 bytes. Space is available in bucket 10 of Heap 2
Requested 119 bytes. Space is available in bucket 10 of Heap 2
Requested 120 bytes. Space is available in bucket 10 of Heap 2
Requested 121 bytes. Space is available in bucket 10 of Heap 2
Requested 122 bytes. Space is available in bucket 10 of Heap 2
Requested 123 bytes. Space is available in bucket 10 of Heap 2
Requested 124 bytes. Space is available in bucket 10 of Heap 2
Requested 125 bytes. Space is available in bucket 10 of Heap 2
Requested 126 bytes. Space is available in bucket 10 of Heap 2
Requested 127 bytes. Space is available in bucket 10 of Heap 2
Requested 128 bytes. Space is available in bucket 10 of Heap 2
The space requested:129 is too high. Please reinitialize a larger Heap
Requested 129 bytes. Space is not available in Heap2
The space requested:130 is too high. Please reinitialize a larger Heap
Requested 130 bytes. Space is not available in Heap2
The space requested:131 is too high. Please reinitialize a larger Heap
Requested 131 bytes. Space is not available in Heap2
The space requested:132 is too high. Please reinitialize a larger Heap
Requested 132 bytes. Space is not available in Heap2
The space requested:133 is too high. Please reinitialize a larger Heap
Requested 133 bytes. Space is not available in Heap2
The space requested:134 is too high. Please reinitialize a larger Heap
Requested 134 bytes. Space is not available in Heap2
The space requested:135 is too high. Please reinitialize a larger Heap
Requested 135 bytes. Space is not available in Heap2
The space requested:136 is too high. Please reinitialize a larger Heap
Requested 136 bytes. Space is not available in Heap2
The space requested:137 is too high. Please reinitialize a larger Heap
Requested 137 bytes. Space is not available in Heap2
The space requested:138 is too high. Please reinitialize a larger Heap
Requested 138 bytes. Space is not available in Heap2
The space requested:139 is too high. Please reinitialize a larger Heap
Requested 139 bytes. Space is not available in Heap2
The space requested:140 is too high. Please reinitialize a larger Heap
Requested 140 bytes. Space is not available in Heap2
The space requested:141 is too high. Please reinitialize a larger Heap
Requested 141 bytes. Space is not available in Heap2
The space requested:142 is too high. Please reinitialize a larger Heap
Requested 142 bytes. Space is not available in Heap2
The space requested:143 is too high. Please reinitialize a larger Heap
Requested 143 bytes. Space is not available in Heap2
The space requested:144 is too high. Please reinitialize a larger Heap
Requested 144 bytes. Space is not available in Heap2
The space requested:145 is too high. Please reinitialize a larger Heap
Requested 145 bytes. Space is not available in Heap2
The space requested:146 is too high. Please reinitialize a larger Heap
Requested 146 bytes. Space is not available in Heap2
The space requested:147 is too high. Please reinitialize a larger Heap
Requested 147 bytes. Space is not available in Heap2
The space requested:148 is too high. Please reinitialize a larger Heap
Requested 148 bytes. Space is not available in Heap2
The space requested:149 is too high. Please reinitialize a larger Heap
Requested 149 bytes. Space is not available in Heap2
The space you requested: -10 is too small
The space you requested: -9 is too small
The space you requested: -8 is too small
The space you requested: -7 is too small
The space you requested: -6 is too small
The space you requested: -5 is too small
The space you requested: -4 is too small
The space you requested: -3 is too small
The space you requested: -2 is too small
The space you requested: -1 is too small
The space you requested: 0 is too small
The space you requested: 1 is too small
The space you requested: 2 is too small
The space you requested: 3 is too small


Requested Memory Size = 4, obtained Pointer = 00000000001B77D8
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 11
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 128

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B77D8, (kval = 2,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B77C0, (kval = 5,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7760, (kval = 9,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		2
Number of De-allocation Requests: 	0
Number of Splits: 					2
Number of Recombines: 				0
Total Size of Heap: 				128
Total Size Requested: 				4
Total Size Allocated: 				8
Internal Fragmentation: 			100.00%
Percentage Full: 					6.25%
------------------------------------------


Requested Memory Size = 5, obtained Pointer = 00000000001B77D0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 11
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 128

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001B77D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B77D0, (kval = 2,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B77C0, (kval = 4,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7760, (kval = 9,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		4
Number of De-allocation Requests: 	0
Number of Splits: 					3
Number of Recombines: 				0
Total Size of Heap: 				128
Total Size Requested: 				9
Total Size Allocated: 				16
Internal Fragmentation: 			77.78%
Percentage Full: 					12.50%
------------------------------------------


Requested Memory Size = 6, obtained Pointer = 00000000001B77C0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 11
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 128

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001B77CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B77C8, (kval = 0,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001B77D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B77D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B77C0, (kval = 2,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7760, (kval = 9,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		6
Number of De-allocation Requests: 	0
Number of Splits: 					5
Number of Recombines: 				0
Total Size of Heap: 				128
Total Size Requested: 				15
Total Size Allocated: 				24
Internal Fragmentation: 			60.00%
Percentage Full: 					18.75%
------------------------------------------


Requested Memory Size = 7, obtained Pointer = 00000000001B77B8
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 11
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 128

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001B77CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B77C8, (kval = 0,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B77D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B77D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B77C0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B77B8, (kval = 2,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B77A0, (kval = 5,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7760, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		8
Number of De-allocation Requests: 	0
Number of Splits: 					7
Number of Recombines: 				0
Total Size of Heap: 				128
Total Size Requested: 				22
Total Size Allocated: 				32
Internal Fragmentation: 			45.45%
Percentage Full: 					25.00%
------------------------------------------


Requested Memory Size = 8, obtained Pointer = 00000000001B77B0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 11
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 128

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001B77CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B77C8, (kval = 0,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 5
-->	[addr = 00000000001B77D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B77D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B77C0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B77B8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B77B0, (kval = 2,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B77A0, (kval = 4,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7760, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		10
Number of De-allocation Requests: 	0
Number of Splits: 					8
Number of Recombines: 				0
Total Size of Heap: 				128
Total Size Requested: 				30
Total Size Allocated: 				40
Internal Fragmentation: 			33.33%
Percentage Full: 					31.25%
------------------------------------------


Requested Memory Size = 9, obtained Pointer = 00000000001B77A0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 11
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 128

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001B77CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B77C8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B77AC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 5
-->	[addr = 00000000001B77D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B77D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B77C0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B77B8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B77B0, (kval = 2,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B77A0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7760, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		12
Number of De-allocation Requests: 	0
Number of Splits: 					9
Number of Recombines: 				0
Total Size of Heap: 				128
Total Size Requested: 				39
Total Size Allocated: 				52
Internal Fragmentation: 			33.33%
Percentage Full: 					40.63%
------------------------------------------


Requested Memory Size = 10, obtained Pointer = 00000000001B7790
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 11
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 128

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B77CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B77C8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B77AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B779C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 5
-->	[addr = 00000000001B77D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B77D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B77C0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B77B8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B77B0, (kval = 2,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001B77A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7790, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7760, (kval = 7,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		14
Number of De-allocation Requests: 	0
Number of Splits: 					11
Number of Recombines: 				0
Total Size of Heap: 				128
Total Size Requested: 				49
Total Size Allocated: 				64
Internal Fragmentation: 			30.61%
Percentage Full: 					50.00%
------------------------------------------


Requested Memory Size = 11, obtained Pointer = 00000000001B7780
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 11
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 128

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 5
-->	[addr = 00000000001B77CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B77C8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B77AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B779C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B778C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 5
-->	[addr = 00000000001B77D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B77D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B77C0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B77B8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B77B0, (kval = 2,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001B77A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7790, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7780, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7760, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		16
Number of De-allocation Requests: 	0
Number of Splits: 					13
Number of Recombines: 				0
Total Size of Heap: 				128
Total Size Requested: 				60
Total Size Allocated: 				76
Internal Fragmentation: 			26.67%
Percentage Full: 					59.38%
------------------------------------------


Requested Memory Size = 12, obtained Pointer = 00000000001B7760
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 11
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 128

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 6
-->	[addr = 00000000001B77CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B77C8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B77AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B779C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B778C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B776C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001B77D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B77D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B77C0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B77B8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B77B0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7778, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7770, (kval = 2,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B77A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7790, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7780, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7760, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		18
Number of De-allocation Requests: 	0
Number of Splits: 					16
Number of Recombines: 				0
Total Size of Heap: 				128
Total Size Requested: 				72
Total Size Allocated: 				88
Internal Fragmentation: 			22.22%
Percentage Full: 					68.75%
------------------------------------------
The space you requested: 13 is not available. Sorry!
(13,0.69)The space you requested: 14 is not available. Sorry!
(14,0.69)The space you requested: 15 is not available. Sorry!
(15,0.69)The space you requested: 16 is not available. Sorry!
(16,0.69)The space you requested: 17 is not available. Sorry!
(17,0.69)The space you requested: 18 is not available. Sorry!
(18,0.69)The space you requested: 19 is not available. Sorry!
(19,0.69)The space you requested: 0 is too small
The space you requested: 1 is too small
The space you requested: 2 is too small
The space you requested: 3 is too small


Requested Memory Size = 4, obtained Pointer = 00000000001B7E2C
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7E20, (kval = 3,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7DF0, (kval = 7,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D30, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		2
Number of De-allocation Requests: 	0
Number of Splits: 					4
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				4
Total Size Allocated: 				4
Internal Fragmentation: 			0.00%
Percentage Full: 					0.39%
------------------------------------------


Requested Memory Size = 5, obtained Pointer = 00000000001B7E20
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7DF0, (kval = 7,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D30, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		4
Number of De-allocation Requests: 	0
Number of Splits: 					5
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				9
Total Size Allocated: 				12
Internal Fragmentation: 			33.33%
Percentage Full: 					1.17%
------------------------------------------


Requested Memory Size = 6, obtained Pointer = 00000000001B7E10
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7DF0, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D30, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		6
Number of De-allocation Requests: 	0
Number of Splits: 					8
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				15
Total Size Allocated: 				20
Internal Fragmentation: 			33.33%
Percentage Full: 					1.95%
------------------------------------------


Requested Memory Size = 7, obtained Pointer = 00000000001B7E08
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7DF0, (kval = 5,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D30, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		8
Number of De-allocation Requests: 	0
Number of Splits: 					9
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				22
Total Size Allocated: 				28
Internal Fragmentation: 			27.27%
Percentage Full: 					2.73%
------------------------------------------


Requested Memory Size = 8, obtained Pointer = 00000000001B7E00
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7DF0, (kval = 4,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D30, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		10
Number of De-allocation Requests: 	0
Number of Splits: 					10
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				30
Total Size Allocated: 				36
Internal Fragmentation: 			20.00%
Percentage Full: 					3.52%
------------------------------------------


Requested Memory Size = 9, obtained Pointer = 00000000001B7DF0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 5
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D30, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		12
Number of De-allocation Requests: 	0
Number of Splits: 					11
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				39
Total Size Allocated: 				48
Internal Fragmentation: 			23.08%
Percentage Full: 					4.69%
------------------------------------------


Requested Memory Size = 10, obtained Pointer = 00000000001B7DE0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 6
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7DB0, (kval = 7,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D30, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		14
Number of De-allocation Requests: 	0
Number of Splits: 					14
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				49
Total Size Allocated: 				60
Internal Fragmentation: 			22.45%
Percentage Full: 					5.86%
------------------------------------------


Requested Memory Size = 11, obtained Pointer = 00000000001B7DD0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7DB0, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D30, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		16
Number of De-allocation Requests: 	0
Number of Splits: 					16
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				60
Total Size Allocated: 				72
Internal Fragmentation: 			20.00%
Percentage Full: 					7.03%
------------------------------------------


Requested Memory Size = 12, obtained Pointer = 00000000001B7DB0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 6
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D30, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		18
Number of De-allocation Requests: 	0
Number of Splits: 					19
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				72
Total Size Allocated: 				84
Internal Fragmentation: 			16.67%
Percentage Full: 					8.20%
------------------------------------------


Requested Memory Size = 13, obtained Pointer = 00000000001B7D90
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D30, (kval = 9,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		20
Number of De-allocation Requests: 	0
Number of Splits: 					22
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				85
Total Size Allocated: 				100
Internal Fragmentation: 			17.65%
Percentage Full: 					9.77%
------------------------------------------


Requested Memory Size = 14, obtained Pointer = 00000000001B7D70
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D30, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		22
Number of De-allocation Requests: 	0
Number of Splits: 					25
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				99
Total Size Allocated: 				116
Internal Fragmentation: 			17.17%
Percentage Full: 					11.33%
------------------------------------------


Requested Memory Size = 15, obtained Pointer = 00000000001B7D60
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D30, (kval = 7,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		24
Number of De-allocation Requests: 	0
Number of Splits: 					26
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				114
Total Size Allocated: 				132
Internal Fragmentation: 			15.79%
Percentage Full: 					12.89%
------------------------------------------


Requested Memory Size = 16, obtained Pointer = 00000000001B7D50
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D30, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		26
Number of De-allocation Requests: 	0
Number of Splits: 					27
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				130
Total Size Allocated: 				148
Internal Fragmentation: 			13.85%
Percentage Full: 					14.45%
------------------------------------------


Requested Memory Size = 17, obtained Pointer = 00000000001B7D30
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 11
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		28
Number of De-allocation Requests: 	0
Number of Splits: 					28
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				147
Total Size Allocated: 				172
Internal Fragmentation: 			17.01%
Percentage Full: 					16.80%
------------------------------------------


Requested Memory Size = 18, obtained Pointer = 00000000001B7CF0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 12
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 6
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7C30, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 14,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		30
Number of De-allocation Requests: 	0
Number of Splits: 					33
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				165
Total Size Allocated: 				196
Internal Fragmentation: 			18.79%
Percentage Full: 					19.14%
------------------------------------------


Requested Memory Size = 19, obtained Pointer = 00000000001B7CB0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 13
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7C30, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 14,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		32
Number of De-allocation Requests: 	0
Number of Splits: 					37
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				184
Total Size Allocated: 				220
Internal Fragmentation: 			19.57%
Percentage Full: 					21.48%
------------------------------------------


Requested Memory Size = 20, obtained Pointer = 00000000001B7C90
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 14
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CA8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C90, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7C30, (kval = 9,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 14,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		34
Number of De-allocation Requests: 	0
Number of Splits: 					39
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				204
Total Size Allocated: 				244
Internal Fragmentation: 			19.61%
Percentage Full: 					23.83%
------------------------------------------


Requested Memory Size = 21, obtained Pointer = 00000000001B7C70
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 15
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C88, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 5
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C90, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C70, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7C30, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 14,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		36
Number of De-allocation Requests: 	0
Number of Splits: 					41
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				225
Total Size Allocated: 				268
Internal Fragmentation: 			19.11%
Percentage Full: 					26.17%
------------------------------------------


Requested Memory Size = 22, obtained Pointer = 00000000001B7C30
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 16
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C48, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7C60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7C50, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 6
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C90, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C70, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C30, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 14,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		38
Number of De-allocation Requests: 	0
Number of Splits: 					44
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				247
Total Size Allocated: 				292
Internal Fragmentation: 			18.22%
Percentage Full: 					28.52%
------------------------------------------


Requested Memory Size = 23, obtained Pointer = 00000000001B7C10
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 17
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C28, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7C60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7C50, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C90, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C70, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C10, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7BB0, (kval = 9,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 13,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		40
Number of De-allocation Requests: 	0
Number of Splits: 					47
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				270
Total Size Allocated: 				316
Internal Fragmentation: 			17.04%
Percentage Full: 					30.86%
------------------------------------------


Requested Memory Size = 24, obtained Pointer = 00000000001B7BF0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C28, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C08, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7C60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7C50, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C90, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C70, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C10, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7BF0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7BB0, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 13,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		42
Number of De-allocation Requests: 	0
Number of Splits: 					49
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				294
Total Size Allocated: 				340
Internal Fragmentation: 			15.65%
Percentage Full: 					33.20%
------------------------------------------


Requested Memory Size = 25, obtained Pointer = 00000000001B7BB0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C28, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C08, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 12
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7C60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7C50, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7BE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7BD0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C90, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C70, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C10, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7BF0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7BB0, (kval = 6,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 13,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		44
Number of De-allocation Requests: 	0
Number of Splits: 					51
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				319
Total Size Allocated: 				372
Internal Fragmentation: 			16.61%
Percentage Full: 					36.33%
------------------------------------------


Requested Memory Size = 26, obtained Pointer = 00000000001B7B90
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C28, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C08, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 12
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7C60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7C50, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7BE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7BD0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C90, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C70, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C10, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7BF0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001B7BB0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7B90, (kval = 6,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7B30, (kval = 9,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		46
Number of De-allocation Requests: 	0
Number of Splits: 					53
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				345
Total Size Allocated: 				404
Internal Fragmentation: 			17.10%
Percentage Full: 					39.45%
------------------------------------------


Requested Memory Size = 27, obtained Pointer = 00000000001B7B70
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C28, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C08, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 12
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7C60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7C50, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7BE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7BD0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C90, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C70, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C10, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7BF0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001B7BB0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7B90, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001B7B70, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7B30, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		48
Number of De-allocation Requests: 	0
Number of Splits: 					54
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				372
Total Size Allocated: 				436
Internal Fragmentation: 			17.20%
Percentage Full: 					42.58%
------------------------------------------


Requested Memory Size = 28, obtained Pointer = 00000000001B7B30
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C28, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C08, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 14
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7C60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7C50, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7BE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7BD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7B60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7B50, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C90, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C70, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C10, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7BF0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7BB0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7B90, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001B7B70, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001B7B30, (kval = 6,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		50
Number of De-allocation Requests: 	0
Number of Splits: 					56
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				400
Total Size Allocated: 				468
Internal Fragmentation: 			17.00%
Percentage Full: 					45.70%
------------------------------------------


Requested Memory Size = 29, obtained Pointer = 00000000001B7AF0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C28, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C08, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 16
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7C60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7C50, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7BE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7BD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7B60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7B50, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7B20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7B10, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C90, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C70, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C10, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7BF0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 5
-->	[addr = 00000000001B7BB0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7B90, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001B7B70, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001B7B30, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7AF0, (kval = 6,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		52
Number of De-allocation Requests: 	0
Number of Splits: 					59
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				429
Total Size Allocated: 				500
Internal Fragmentation: 			16.55%
Percentage Full: 					48.83%
------------------------------------------


Requested Memory Size = 30, obtained Pointer = 00000000001B7AB0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C28, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C08, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7C60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7C50, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7BE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7BD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7B60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7B50, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7B20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7B10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7AE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7AD0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C90, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C70, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C10, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7BF0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 6
-->	[addr = 00000000001B7BB0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7B90, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001B7B70, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001B7B30, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7AF0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7AB0, (kval = 6,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		54
Number of De-allocation Requests: 	0
Number of Splits: 					62
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				459
Total Size Allocated: 				532
Internal Fragmentation: 			15.90%
Percentage Full: 					51.95%
------------------------------------------


Requested Memory Size = 31, obtained Pointer = 00000000001B7A90
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C28, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C08, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7C60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7C50, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7BE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7BD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7B60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7B50, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7B20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7B10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7AE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7AD0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C90, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C70, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C10, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7BF0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001B7BB0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7B90, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001B7B70, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001B7B30, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7AF0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7AB0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7A90, (kval = 6,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 9,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		56
Number of De-allocation Requests: 	0
Number of Splits: 					63
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				490
Total Size Allocated: 				564
Internal Fragmentation: 			15.10%
Percentage Full: 					55.08%
------------------------------------------


Requested Memory Size = 32, obtained Pointer = 00000000001B7A70
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C28, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C08, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7C60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7C50, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7BE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7BD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7B60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7B50, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7B20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7B10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7AE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7AD0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C90, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C70, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C10, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7BF0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7BB0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7B90, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001B7B70, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001B7B30, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7AF0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7AB0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7A90, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001B7A70, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		58
Number of De-allocation Requests: 	0
Number of Splits: 					64
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				522
Total Size Allocated: 				596
Internal Fragmentation: 			14.18%
Percentage Full: 					58.20%
------------------------------------------


Requested Memory Size = 33, obtained Pointer = 00000000001B7A30
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7E2C, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001B7E28, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7E1C, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7E18, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001B7DFC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DEC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DDC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001B7DBC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001B7E20, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E10, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001B7E08, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001B7E00, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001B7DC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DC0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7DA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7DA0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D80, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001B7D48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7D08, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CC8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7CA8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C88, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C48, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C28, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001B7C08, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001B7DF0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DE0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DD0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001B7DB0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 19
-->	[addr = 00000000001B7D90, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D70, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001B7D60, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001B7D50, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001B7D20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7D10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7CE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7CD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7C60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7C50, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7BE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7BD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7B60, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7B50, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7B20, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7B10, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7AE0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001B7AD0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001B7A60, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7D30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CF0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7CB0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C90, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C70, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C30, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7C10, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001B7BF0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001B7BB0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7B90, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001B7B70, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001B7B30, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7AF0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7AB0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001B7A90, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001B7A70, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001B7A30, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	0
Number of Splits: 					65
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				555
Total Size Allocated: 				644
Internal Fragmentation: 			16.04%
Percentage Full: 					62.89%
------------------------------------------
The space you requested: 34 is not available. Sorry!
(34,0.63)The space you requested: 35 is not available. Sorry!
(35,0.63)The space you requested: 36 is not available. Sorry!
(36,0.63)The space you requested: 37 is not available. Sorry!
(37,0.63)The space you requested: 38 is not available. Sorry!
(38,0.63)The space you requested: 39 is not available. Sorry!
(39,0.63)
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 16,tag = 0,type = 0)]
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		0
Number of De-allocation Requests: 	0
Number of Splits: 					0
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				0
Total Size Allocated: 				0
Internal Fragmentation: 			0.00%
Percentage Full: 					0.00%
------------------------------------------
The space you requested: 0 is too small
The space you requested: 1 is too small
The space you requested: 2 is too small
The space you requested: 3 is too small


Requested Memory Size = 4, obtained Pointer = 00000000001BB5FC
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB5F0, (kval = 3,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB5C0, (kval = 7,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		2
Number of De-allocation Requests: 	0
Number of Splits: 					4
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				4
Total Size Allocated: 				4
Internal Fragmentation: 			0.00%
Percentage Full: 					0.39%
------------------------------------------


Requested Memory Size = 5, obtained Pointer = 00000000001BB5F0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB5C0, (kval = 7,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		4
Number of De-allocation Requests: 	0
Number of Splits: 					5
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				9
Total Size Allocated: 				12
Internal Fragmentation: 			33.33%
Percentage Full: 					1.17%
------------------------------------------


Requested Memory Size = 6, obtained Pointer = 00000000001BB5E0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB5C0, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		6
Number of De-allocation Requests: 	0
Number of Splits: 					8
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				15
Total Size Allocated: 				20
Internal Fragmentation: 			33.33%
Percentage Full: 					1.95%
------------------------------------------


Requested Memory Size = 7, obtained Pointer = 00000000001BB5D8
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB5C0, (kval = 5,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		8
Number of De-allocation Requests: 	0
Number of Splits: 					9
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				22
Total Size Allocated: 				28
Internal Fragmentation: 			27.27%
Percentage Full: 					2.73%
------------------------------------------


Requested Memory Size = 8, obtained Pointer = 00000000001BB5D0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB5C0, (kval = 4,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		10
Number of De-allocation Requests: 	0
Number of Splits: 					10
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				30
Total Size Allocated: 				36
Internal Fragmentation: 			20.00%
Percentage Full: 					3.52%
------------------------------------------


Requested Memory Size = 9, obtained Pointer = 00000000001BB5C0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 5
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		12
Number of De-allocation Requests: 	0
Number of Splits: 					11
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				39
Total Size Allocated: 				48
Internal Fragmentation: 			23.08%
Percentage Full: 					4.69%
------------------------------------------


Requested Memory Size = 10, obtained Pointer = 00000000001BB5B0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 6
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB580, (kval = 7,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		14
Number of De-allocation Requests: 	0
Number of Splits: 					14
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				49
Total Size Allocated: 				60
Internal Fragmentation: 			22.45%
Percentage Full: 					5.86%
------------------------------------------


Requested Memory Size = 11, obtained Pointer = 00000000001BB5A0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB580, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		16
Number of De-allocation Requests: 	0
Number of Splits: 					16
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				60
Total Size Allocated: 				72
Internal Fragmentation: 			20.00%
Percentage Full: 					7.03%
------------------------------------------


Requested Memory Size = 12, obtained Pointer = 00000000001BB580
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 6
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		18
Number of De-allocation Requests: 	0
Number of Splits: 					19
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				72
Total Size Allocated: 				84
Internal Fragmentation: 			16.67%
Percentage Full: 					8.20%
------------------------------------------


Requested Memory Size = 13, obtained Pointer = 00000000001BB560
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 9,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		20
Number of De-allocation Requests: 	0
Number of Splits: 					22
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				85
Total Size Allocated: 				100
Internal Fragmentation: 			17.65%
Percentage Full: 					9.77%
------------------------------------------


Requested Memory Size = 14, obtained Pointer = 00000000001BB540
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		22
Number of De-allocation Requests: 	0
Number of Splits: 					25
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				99
Total Size Allocated: 				116
Internal Fragmentation: 			17.17%
Percentage Full: 					11.33%
------------------------------------------


Requested Memory Size = 15, obtained Pointer = 00000000001BB530
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 7,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		24
Number of De-allocation Requests: 	0
Number of Splits: 					26
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				114
Total Size Allocated: 				132
Internal Fragmentation: 			15.79%
Percentage Full: 					12.89%
------------------------------------------


Requested Memory Size = 16, obtained Pointer = 00000000001BB520
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		26
Number of De-allocation Requests: 	0
Number of Splits: 					27
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				130
Total Size Allocated: 				148
Internal Fragmentation: 			13.85%
Percentage Full: 					14.45%
------------------------------------------


Requested Memory Size = 17, obtained Pointer = 00000000001BB500
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 11
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 15,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		28
Number of De-allocation Requests: 	0
Number of Splits: 					28
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				147
Total Size Allocated: 				172
Internal Fragmentation: 			17.01%
Percentage Full: 					16.80%
------------------------------------------


Requested Memory Size = 18, obtained Pointer = 00000000001BB4C0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 12
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 6
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB400, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 14,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		30
Number of De-allocation Requests: 	0
Number of Splits: 					33
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				165
Total Size Allocated: 				196
Internal Fragmentation: 			18.79%
Percentage Full: 					19.14%
------------------------------------------


Requested Memory Size = 19, obtained Pointer = 00000000001BB480
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 13
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB400, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 14,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		32
Number of De-allocation Requests: 	0
Number of Splits: 					37
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				184
Total Size Allocated: 				220
Internal Fragmentation: 			19.57%
Percentage Full: 					21.48%
------------------------------------------


Requested Memory Size = 20, obtained Pointer = 00000000001BB460
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 14
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB400, (kval = 9,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 14,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		34
Number of De-allocation Requests: 	0
Number of Splits: 					39
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				204
Total Size Allocated: 				244
Internal Fragmentation: 			19.61%
Percentage Full: 					23.83%
------------------------------------------


Requested Memory Size = 21, obtained Pointer = 00000000001BB440
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 15
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 5
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB400, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 14,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		36
Number of De-allocation Requests: 	0
Number of Splits: 					41
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				225
Total Size Allocated: 				268
Internal Fragmentation: 			19.11%
Percentage Full: 					26.17%
------------------------------------------


Requested Memory Size = 22, obtained Pointer = 00000000001BB400
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 16
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 6
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 14,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		38
Number of De-allocation Requests: 	0
Number of Splits: 					44
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				247
Total Size Allocated: 				292
Internal Fragmentation: 			18.22%
Percentage Full: 					28.52%
------------------------------------------


Requested Memory Size = 23, obtained Pointer = 00000000001BB3E0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 17
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB380, (kval = 9,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 13,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		40
Number of De-allocation Requests: 	0
Number of Splits: 					47
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				270
Total Size Allocated: 				316
Internal Fragmentation: 			17.04%
Percentage Full: 					30.86%
------------------------------------------


Requested Memory Size = 24, obtained Pointer = 00000000001BB3C0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB380, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 13,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		42
Number of De-allocation Requests: 	0
Number of Splits: 					49
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				294
Total Size Allocated: 				340
Internal Fragmentation: 			15.65%
Percentage Full: 					33.20%
------------------------------------------


Requested Memory Size = 25, obtained Pointer = 00000000001BB380
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 12
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 13,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		44
Number of De-allocation Requests: 	0
Number of Splits: 					51
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				319
Total Size Allocated: 				372
Internal Fragmentation: 			16.61%
Percentage Full: 					36.33%
------------------------------------------


Requested Memory Size = 26, obtained Pointer = 00000000001BB360
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 12
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB300, (kval = 9,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		46
Number of De-allocation Requests: 	0
Number of Splits: 					53
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				345
Total Size Allocated: 				404
Internal Fragmentation: 			17.10%
Percentage Full: 					39.45%
------------------------------------------


Requested Memory Size = 27, obtained Pointer = 00000000001BB340
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 12
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB300, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		48
Number of De-allocation Requests: 	0
Number of Splits: 					54
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				372
Total Size Allocated: 				436
Internal Fragmentation: 			17.20%
Percentage Full: 					42.58%
------------------------------------------


Requested Memory Size = 28, obtained Pointer = 00000000001BB300
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 14
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		50
Number of De-allocation Requests: 	0
Number of Splits: 					56
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				400
Total Size Allocated: 				468
Internal Fragmentation: 			17.00%
Percentage Full: 					45.70%
------------------------------------------


Requested Memory Size = 29, obtained Pointer = 00000000001BB2C0
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 16
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 5
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 11,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		52
Number of De-allocation Requests: 	0
Number of Splits: 					59
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				429
Total Size Allocated: 				500
Internal Fragmentation: 			16.55%
Percentage Full: 					48.83%
------------------------------------------


Requested Memory Size = 30, obtained Pointer = 00000000001BB280
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 6
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		54
Number of De-allocation Requests: 	0
Number of Splits: 					62
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				459
Total Size Allocated: 				532
Internal Fragmentation: 			15.90%
Percentage Full: 					51.95%
------------------------------------------


Requested Memory Size = 31, obtained Pointer = 00000000001BB260
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 9,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		56
Number of De-allocation Requests: 	0
Number of Splits: 					63
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				490
Total Size Allocated: 				564
Internal Fragmentation: 			15.10%
Percentage Full: 					55.08%
------------------------------------------


Requested Memory Size = 32, obtained Pointer = 00000000001BB240
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		58
Number of De-allocation Requests: 	0
Number of Splits: 					64
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				522
Total Size Allocated: 				596
Internal Fragmentation: 			14.18%
Percentage Full: 					58.20%
------------------------------------------


Requested Memory Size = 33, obtained Pointer = 00000000001BB200
---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 19
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	0
Number of Splits: 					65
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				555
Total Size Allocated: 				644
Internal Fragmentation: 			16.04%
Percentage Full: 					62.89%
------------------------------------------
The space you requested: 34 is not available. Sorry!
(34,0.63)The space you requested: 35 is not available. Sorry!
(35,0.63)The space you requested: 36 is not available. Sorry!
(36,0.63)The space you requested: 37 is not available. Sorry!
(37,0.63)The space you requested: 38 is not available. Sorry!
(38,0.63)The space you requested: 39 is not available. Sorry!
(39,0.63)The space you requested: 40 is not available. Sorry!
(40,0.63)The space you requested: 41 is not available. Sorry!
(41,0.63)The space you requested: 42 is not available. Sorry!
(42,0.63)The space you requested: 43 is not available. Sorry!
(43,0.63)The space you requested: 44 is not available. Sorry!
(44,0.63)Sorry the bucket: 0 has not been allocated
Sorry the bucket: 1 has not been allocated
Sorry the bucket: 2 has not been allocated
Sorry the bucket: 3 has not been allocated
---------------------------------
The Block 4 to be freed is as below
[addr = 00000000001BB5FC, (kval = 0,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB5FC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5F8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 19
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	1
Number of Splits: 					65
Number of Recombines: 				0
Total Size of Heap: 				1024
Total Size Requested: 				551
Total Size Allocated: 				640
Internal Fragmentation: 			16.15%
Percentage Full: 					62.50%
------------------------------------------
---------------------------------
The Block 5 to be freed is as below
[addr = 00000000001BB5F0, (kval = 2,tag = 1,type = 2)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 6
-->	[addr = 00000000001BB5EC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5E8, (kval = 0,tag = 0,type = 1)]
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 17
-->	[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 20
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB5F0, (kval = 4,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	2
Number of Splits: 					65
Number of Recombines: 				2
Total Size of Heap: 				1024
Total Size Requested: 				546
Total Size Allocated: 				632
Internal Fragmentation: 			15.75%
Percentage Full: 					61.72%
------------------------------------------
---------------------------------
The Block 6 to be freed is as below
[addr = 00000000001BB5E0, (kval = 2,tag = 1,type = 2)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 16
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 21
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB5F0, (kval = 4,tag = 0,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 4,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	3
Number of Splits: 					65
Number of Recombines: 				4
Total Size of Heap: 				1024
Total Size Requested: 				540
Total Size Allocated: 				624
Internal Fragmentation: 			15.56%
Percentage Full: 					60.94%
------------------------------------------
---------------------------------
The Block 7 to be freed is as below
[addr = 00000000001BB5D8, (kval = 2,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 16
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 21
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB5F0, (kval = 4,tag = 0,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 4,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	4
Number of Splits: 					65
Number of Recombines: 				4
Total Size of Heap: 				1024
Total Size Requested: 				533
Total Size Allocated: 				616
Internal Fragmentation: 			15.57%
Percentage Full: 					60.16%
------------------------------------------
---------------------------------
The Block 8 to be freed is as below
[addr = 00000000001BB5D0, (kval = 2,tag = 1,type = 1)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5CC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 16
-->	[addr = 00000000001BB5D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB5D0, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 21
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB5F0, (kval = 4,tag = 0,type = 2)]
-->	[addr = 00000000001BB5E0, (kval = 4,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	5
Number of Splits: 					65
Number of Recombines: 				4
Total Size of Heap: 				1024
Total Size Requested: 				525
Total Size Allocated: 				608
Internal Fragmentation: 			15.81%
Percentage Full: 					59.38%
------------------------------------------
---------------------------------
The Block 9 to be freed is as below
[addr = 00000000001BB5C0, (kval = 3,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001BB5BC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 14
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 19
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB5C0, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	6
Number of Splits: 					65
Number of Recombines: 				9
Total Size of Heap: 				1024
Total Size Requested: 				516
Total Size Allocated: 				596
Internal Fragmentation: 			15.50%
Percentage Full: 					58.20%
------------------------------------------
---------------------------------
The Block 10 to be freed is as below
[addr = 00000000001BB5B0, (kval = 3,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB5AC, (kval = 0,tag = 0,type = 3)]
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 14
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 20
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 4,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB5C0, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	7
Number of Splits: 					65
Number of Recombines: 				10
Total Size of Heap: 				1024
Total Size Requested: 				506
Total Size Allocated: 				584
Internal Fragmentation: 			15.42%
Percentage Full: 					57.03%
------------------------------------------
---------------------------------
The Block 11 to be freed is as below
[addr = 00000000001BB5A0, (kval = 3,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB58C, (kval = 0,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 14
-->	[addr = 00000000001BB598, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB590, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 21
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB5B0, (kval = 4,tag = 0,type = 2)]
-->	[addr = 00000000001BB5A0, (kval = 4,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB5C0, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	8
Number of Splits: 					65
Number of Recombines: 				11
Total Size of Heap: 				1024
Total Size Requested: 				495
Total Size Allocated: 				572
Internal Fragmentation: 			15.56%
Percentage Full: 					55.86%
------------------------------------------
---------------------------------
The Block 12 to be freed is as below
[addr = 00000000001BB580, (kval = 3,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 12
-->	[addr = 00000000001BB578, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB570, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 19
-->	[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB5C0, (kval = 8,tag = 0,type = 2)]
-->	[addr = 00000000001BB580, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	9
Number of Splits: 					65
Number of Recombines: 				16
Total Size of Heap: 				1024
Total Size Requested: 				483
Total Size Allocated: 				560
Internal Fragmentation: 			15.94%
Percentage Full: 					54.69%
------------------------------------------
---------------------------------
The Block 13 to be freed is as below
[addr = 00000000001BB560, (kval = 4,tag = 1,type = 2)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001BB558, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB550, (kval = 2,tag = 0,type = 1)]
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 18
-->	[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 9
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB560, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB5C0, (kval = 8,tag = 0,type = 2)]
-->	[addr = 00000000001BB580, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	10
Number of Splits: 					65
Number of Recombines: 				18
Total Size of Heap: 				1024
Total Size Requested: 				470
Total Size Allocated: 				544
Internal Fragmentation: 			15.74%
Percentage Full: 					53.13%
------------------------------------------
---------------------------------
The Block 14 to be freed is as below
[addr = 00000000001BB540, (kval = 4,tag = 1,type = 2)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 17
-->	[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB560, (kval = 6,tag = 0,type = 2)]
-->	[addr = 00000000001BB540, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB5C0, (kval = 8,tag = 0,type = 2)]
-->	[addr = 00000000001BB580, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	11
Number of Splits: 					65
Number of Recombines: 				20
Total Size of Heap: 				1024
Total Size Requested: 				456
Total Size Allocated: 				528
Internal Fragmentation: 			15.79%
Percentage Full: 					51.56%
------------------------------------------
---------------------------------
The Block 15 to be freed is as below
[addr = 00000000001BB530, (kval = 4,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 17
-->	[addr = 00000000001BB530, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB560, (kval = 6,tag = 0,type = 2)]
-->	[addr = 00000000001BB540, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB5C0, (kval = 8,tag = 0,type = 2)]
-->	[addr = 00000000001BB580, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	12
Number of Splits: 					65
Number of Recombines: 				20
Total Size of Heap: 				1024
Total Size Requested: 				441
Total Size Allocated: 				512
Internal Fragmentation: 			16.10%
Percentage Full: 					50.00%
------------------------------------------
---------------------------------
The Block 16 to be freed is as below
[addr = 00000000001BB520, (kval = 4,tag = 1,type = 1)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB518, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 17
-->	[addr = 00000000001BB530, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB520, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB560, (kval = 6,tag = 0,type = 2)]
-->	[addr = 00000000001BB540, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB5C0, (kval = 8,tag = 0,type = 2)]
-->	[addr = 00000000001BB580, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	13
Number of Splits: 					65
Number of Recombines: 				20
Total Size of Heap: 				1024
Total Size Requested: 				425
Total Size Allocated: 				496
Internal Fragmentation: 			16.71%
Percentage Full: 					48.44%
------------------------------------------
---------------------------------
The Block 17 to be freed is as below
[addr = 00000000001BB500, (kval = 5,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001BB4D8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 15
-->	[addr = 00000000001BB4F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	14
Number of Splits: 					65
Number of Recombines: 				27
Total Size of Heap: 				1024
Total Size Requested: 				408
Total Size Allocated: 				472
Internal Fragmentation: 			15.69%
Percentage Full: 					46.09%
------------------------------------------
---------------------------------
The Block 18 to be freed is as below
[addr = 00000000001BB4C0, (kval = 5,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 6
-->	[addr = 00000000001BB498, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 13
-->	[addr = 00000000001BB4B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB4A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 6
-->	[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB4C0, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	15
Number of Splits: 					65
Number of Recombines: 				30
Total Size of Heap: 				1024
Total Size Requested: 				390
Total Size Allocated: 				448
Internal Fragmentation: 			14.87%
Percentage Full: 					43.75%
------------------------------------------
---------------------------------
The Block 19 to be freed is as below
[addr = 00000000001BB480, (kval = 5,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 5
-->	[addr = 00000000001BB478, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 11
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 5
-->	[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB4C0, (kval = 8,tag = 0,type = 2)]
-->	[addr = 00000000001BB480, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	16
Number of Splits: 					65
Number of Recombines: 				33
Total Size of Heap: 				1024
Total Size Requested: 				371
Total Size Allocated: 				424
Internal Fragmentation: 			14.29%
Percentage Full: 					41.41%
------------------------------------------
---------------------------------
The Block 20 to be freed is as below
[addr = 00000000001BB460, (kval = 5,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB458, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 11
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 9
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB460, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB4C0, (kval = 8,tag = 0,type = 2)]
-->	[addr = 00000000001BB480, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	17
Number of Splits: 					65
Number of Recombines: 				34
Total Size of Heap: 				1024
Total Size Requested: 				351
Total Size Allocated: 				400
Internal Fragmentation: 			13.96%
Percentage Full: 					39.06%
------------------------------------------
---------------------------------
The Block 21 to be freed is as below
[addr = 00000000001BB440, (kval = 5,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001BB418, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 11
-->	[addr = 00000000001BB430, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB420, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB460, (kval = 6,tag = 0,type = 2)]
-->	[addr = 00000000001BB440, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB4C0, (kval = 8,tag = 0,type = 2)]
-->	[addr = 00000000001BB480, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	18
Number of Splits: 					65
Number of Recombines: 				35
Total Size of Heap: 				1024
Total Size Requested: 				330
Total Size Allocated: 				376
Internal Fragmentation: 			13.94%
Percentage Full: 					36.72%
------------------------------------------
---------------------------------
The Block 22 to be freed is as below
[addr = 00000000001BB400, (kval = 5,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB3F8, (kval = 2,tag = 0,type = 3)]
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 9
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 8
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
-->	[addr = 00000000001BB400, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	19
Number of Splits: 					65
Number of Recombines: 				42
Total Size of Heap: 				1024
Total Size Requested: 				308
Total Size Allocated: 				352
Internal Fragmentation: 			14.29%
Percentage Full: 					34.38%
------------------------------------------
---------------------------------
The Block 23 to be freed is as below
[addr = 00000000001BB3E0, (kval = 5,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB3D8, (kval = 2,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 9
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 9
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB3E0, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
-->	[addr = 00000000001BB400, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	20
Number of Splits: 					65
Number of Recombines: 				43
Total Size of Heap: 				1024
Total Size Requested: 				285
Total Size Allocated: 				328
Internal Fragmentation: 			15.09%
Percentage Full: 					32.03%
------------------------------------------
---------------------------------
The Block 24 to be freed is as below
[addr = 00000000001BB3C0, (kval = 5,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 9
-->	[addr = 00000000001BB3B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB3A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 10
-->	[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB3E0, (kval = 6,tag = 0,type = 2)]
-->	[addr = 00000000001BB3C0, (kval = 6,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
-->	[addr = 00000000001BB400, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	21
Number of Splits: 					65
Number of Recombines: 				44
Total Size of Heap: 				1024
Total Size Requested: 				261
Total Size Allocated: 				304
Internal Fragmentation: 			16.48%
Percentage Full: 					29.69%
------------------------------------------
---------------------------------
The Block 25 to be freed is as below
[addr = 00000000001BB380, (kval = 6,tag = 1,type = 2)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB380, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
-->	[addr = 00000000001BB400, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	22
Number of Splits: 					65
Number of Recombines: 				48
Total Size of Heap: 				1024
Total Size Requested: 				236
Total Size Allocated: 				272
Internal Fragmentation: 			15.25%
Percentage Full: 					26.56%
------------------------------------------
---------------------------------
The Block 26 to be freed is as below
[addr = 00000000001BB360, (kval = 6,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001BB360, (kval = 6,tag = 0,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB380, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
-->	[addr = 00000000001BB400, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	23
Number of Splits: 					65
Number of Recombines: 				48
Total Size of Heap: 				1024
Total Size Requested: 				210
Total Size Allocated: 				240
Internal Fragmentation: 			14.29%
Percentage Full: 					23.44%
------------------------------------------
---------------------------------
The Block 27 to be freed is as below
[addr = 00000000001BB340, (kval = 6,tag = 1,type = 1)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001BB330, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB320, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 7
-->	[addr = 00000000001BB360, (kval = 6,tag = 0,type = 3)]
-->	[addr = 00000000001BB340, (kval = 6,tag = 0,type = 1)]
-->	[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB380, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
-->	[addr = 00000000001BB400, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	24
Number of Splits: 					65
Number of Recombines: 				48
Total Size of Heap: 				1024
Total Size Requested: 				183
Total Size Allocated: 				208
Internal Fragmentation: 			13.66%
Percentage Full: 					20.31%
------------------------------------------
---------------------------------
The Block 28 to be freed is as below
[addr = 00000000001BB300, (kval = 6,tag = 1,type = 2)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 5
-->	[addr = 00000000001BB2F0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2E0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 4
-->	[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB380, (kval = 10,tag = 0,type = 2)]
-->	[addr = 00000000001BB300, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
-->	[addr = 00000000001BB400, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	25
Number of Splits: 					65
Number of Recombines: 				52
Total Size of Heap: 				1024
Total Size Requested: 				155
Total Size Allocated: 				176
Internal Fragmentation: 			13.55%
Percentage Full: 					17.19%
------------------------------------------
---------------------------------
The Block 29 to be freed is as below
[addr = 00000000001BB2C0, (kval = 6,tag = 1,type = 2)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001BB2B0, (kval = 4,tag = 0,type = 3)]
-->	[addr = 00000000001BB2A0, (kval = 4,tag = 0,type = 1)]
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 3
-->	[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB2C0, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB380, (kval = 10,tag = 0,type = 2)]
-->	[addr = 00000000001BB300, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
-->	[addr = 00000000001BB400, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	26
Number of Splits: 					65
Number of Recombines: 				54
Total Size of Heap: 				1024
Total Size Requested: 				126
Total Size Allocated: 				144
Internal Fragmentation: 			14.29%
Percentage Full: 					14.06%
------------------------------------------
---------------------------------
The Block 30 to be freed is as below
[addr = 00000000001BB280, (kval = 6,tag = 1,type = 2)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB2C0, (kval = 8,tag = 0,type = 2)]
-->	[addr = 00000000001BB280, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB380, (kval = 10,tag = 0,type = 2)]
-->	[addr = 00000000001BB300, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
-->	[addr = 00000000001BB400, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	27
Number of Splits: 					65
Number of Recombines: 				56
Total Size of Heap: 				1024
Total Size Requested: 				96
Total Size Allocated: 				112
Internal Fragmentation: 			16.67%
Percentage Full: 					10.94%
------------------------------------------
---------------------------------
The Block 31 to be freed is as below
[addr = 00000000001BB260, (kval = 6,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB260, (kval = 6,tag = 0,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB2C0, (kval = 8,tag = 0,type = 2)]
-->	[addr = 00000000001BB280, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB380, (kval = 10,tag = 0,type = 2)]
-->	[addr = 00000000001BB300, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
-->	[addr = 00000000001BB400, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	28
Number of Splits: 					65
Number of Recombines: 				56
Total Size of Heap: 				1024
Total Size Requested: 				65
Total Size Allocated: 				80
Internal Fragmentation: 			23.08%
Percentage Full: 					7.81%
------------------------------------------
---------------------------------
The Block 32 to be freed is as below
[addr = 00000000001BB240, (kval = 6,tag = 1,type = 1)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB230, (kval = 4,tag = 0,type = 3)]
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB260, (kval = 6,tag = 0,type = 3)]
-->	[addr = 00000000001BB240, (kval = 6,tag = 0,type = 1)]
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB2C0, (kval = 8,tag = 0,type = 2)]
-->	[addr = 00000000001BB280, (kval = 8,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB380, (kval = 10,tag = 0,type = 2)]
-->	[addr = 00000000001BB300, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 2
-->	[addr = 00000000001BB500, (kval = 12,tag = 0,type = 2)]
-->	[addr = 00000000001BB400, (kval = 12,tag = 0,type = 2)]
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 0
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	29
Number of Splits: 					65
Number of Recombines: 				56
Total Size of Heap: 				1024
Total Size Requested: 				33
Total Size Allocated: 				48
Internal Fragmentation: 			45.45%
Percentage Full: 					4.69%
------------------------------------------
---------------------------------
The Block 33 to be freed is as below
[addr = 00000000001BB200, (kval = 7,tag = 1,type = 3)]
---------------------------------

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 17
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 1024

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 11	Bucket Size in Bytes = 192
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 12	Bucket Size in Bytes = 256
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 13	Bucket Size in Bytes = 384
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 14	Bucket Size in Bytes = 512
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 15	Bucket Size in Bytes = 768
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 16	Bucket Size in Bytes = 1024
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BB200, (kval = 16,tag = 0,type = 2)]
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		60
Number of De-allocation Requests: 	30
Number of Splits: 					65
Number of Recombines: 				65
Total Size of Heap: 				1024
Total Size Requested: 				0
Total Size Allocated: 				0
Internal Fragmentation: 			0.00%
Percentage Full: 					0.00%
------------------------------------------
Sorry the bucket: 34 has not been allocated
Sorry the bucket: 35 has not been allocated
Sorry the bucket: 36 has not been allocated
Sorry the bucket: 37 has not been allocated
Sorry the bucket: 38 has not been allocated
Sorry the bucket: 39 has not been allocated
Sorry the bucket: 40 has not been allocated
Sorry the bucket: 41 has not been allocated
Sorry the bucket: 42 has not been allocated
Sorry the bucket: 43 has not been allocated
Sorry the bucket: 44 has not been allocated

ss->a=5,ss->f = 2.20

ss2->a=10,ss2->f = 4.40

---------------------------------------------------------------------------------------------
DETAILED STUDY OF HEAP THROUGH THE SP HEAP ALLOCATION
---------------------------------------------------------------------------------------------
Number of Buckets in Heap = 11
Smallest Bucket Size in Heap = 4
Largest Bucket Size in Heap = 128

Now Printing the Buckets
------------------------------------------------------
Bucket No: 0	Bucket Size in Bytes = 4
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 1	Bucket Size in Bytes = 6
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 2	Bucket Size in Bytes = 8
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 3	Bucket Size in Bytes = 12
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 4	Bucket Size in Bytes = 16
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 5	Bucket Size in Bytes = 24
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 6	Bucket Size in Bytes = 32
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 7	Bucket Size in Bytes = 48
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 8	Bucket Size in Bytes = 64
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 9	Bucket Size in Bytes = 96
Number of Memory Blocks in this bucket = 0
------------------------------------------------------
Bucket No: 10	Bucket Size in Bytes = 128
Number of Memory Blocks in this bucket = 1
-->	[addr = 00000000001BD8F0, (kval = 10,tag = 0,type = 2)]
------------------------------------------------------

------------------------------------------
STATISTICS FOR SPHEAP
Number of Allocation Requests: 		4
Number of De-allocation Requests: 	2
Number of Splits: 					3
Number of Recombines: 				3
Total Size of Heap: 				128
Total Size Requested: 				0
Total Size Allocated: 				0
Internal Fragmentation: 			0.00%
Percentage Full: 					0.00%
------------------------------------------

------------------------------------------------------------------------
------------------------------------------------------------------------
		Starting the experiment for spHeap
------------------------------------------------------------------------
------------------------------------------------------------------------
	MemSize	||	  Bin	||	Cnt	||	IntFrag	||	ExtFrag		||	TimeTaken
      32B	||	   24	||	  1	||	 0.00%	||	 100.00 %	||	0ms
      32B	||	   24	||	  2	||	 0.00%	||	 100.00 %	||	0ms
      32B	||	   24	||	  3	||	 0.00%	||	 100.00 %	||	0ms
      32B	||	   24	||	  4	||	 0.00%	||	 100.00 %	||	0ms
      32B	||	   24	||	  5	||	 0.00%	||	 100.00 %	||	0ms
      32B	||	   28	||	  1	||	 0.00%	||	 100.00 %	||	0ms
      32B	||	   28	||	  2	||	 0.00%	||	 100.00 %	||	0ms
      32B	||	   28	||	  3	||	 0.00%	||	 100.00 %	||	0ms
      32B	||	   28	||	  4	||	 0.00%	||	 100.00 %	||	0ms
      32B	||	   28	||	  5	||	 0.00%	||	 100.00 %	||	0ms
      32B	||	   32	||	  1	||	 0.00%	||	 100.00 %	||	0ms
      32B	||	   32	||	  2	||	 0.00%	||	 100.00 %	||	0ms
      32B	||	   32	||	  3	||	 0.00%	||	 100.00 %	||	0ms
      32B	||	   32	||	  4	||	 0.00%	||	 100.00 %	||	0ms
      32B	||	   32	||	  5	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   24	||	  1	||	 0.00%	||	 62.50 %	||	0ms
      64B	||	   24	||	  2	||	 0.00%	||	 62.50 %	||	0ms
      64B	||	   24	||	  3	||	 0.00%	||	 62.50 %	||	0ms
      64B	||	   24	||	  4	||	 0.00%	||	 62.50 %	||	0ms
      64B	||	   24	||	  5	||	 0.00%	||	 62.50 %	||	0ms
      64B	||	   28	||	  1	||	14.29%	||	 50.00 %	||	0ms
      64B	||	   28	||	  2	||	14.29%	||	 50.00 %	||	0ms
      64B	||	   28	||	  3	||	14.29%	||	 50.00 %	||	0ms
      64B	||	   28	||	  4	||	14.29%	||	 50.00 %	||	0ms
      64B	||	   28	||	  5	||	14.29%	||	 50.00 %	||	0ms
      64B	||	   32	||	  1	||	 0.00%	||	 50.00 %	||	0ms
      64B	||	   32	||	  2	||	 0.00%	||	 50.00 %	||	0ms
      64B	||	   32	||	  3	||	 0.00%	||	 50.00 %	||	0ms
      64B	||	   32	||	  4	||	 0.00%	||	 50.00 %	||	0ms
      64B	||	   32	||	  5	||	 0.00%	||	 50.00 %	||	0ms
      64B	||	   36	||	  1	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   36	||	  2	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   36	||	  3	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   36	||	  4	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   36	||	  5	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   40	||	  1	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   40	||	  2	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   40	||	  3	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   40	||	  4	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   40	||	  5	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   44	||	  1	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   44	||	  2	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   44	||	  3	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   44	||	  4	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   44	||	  5	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   48	||	  1	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   48	||	  2	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   48	||	  3	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   48	||	  4	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   48	||	  5	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   52	||	  1	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   52	||	  2	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   52	||	  3	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   52	||	  4	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   52	||	  5	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   56	||	  1	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   56	||	  2	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   56	||	  3	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   56	||	  4	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   56	||	  5	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   60	||	  1	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   60	||	  2	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   60	||	  3	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   60	||	  4	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   60	||	  5	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   64	||	  1	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   64	||	  2	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   64	||	  3	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   64	||	  4	||	 0.00%	||	 100.00 %	||	0ms
      64B	||	   64	||	  5	||	 0.00%	||	 100.00 %	||	0ms
     128B	||	   24	||	  1	||	 0.00%	||	 43.75 %	||	0ms
     128B	||	   24	||	  2	||	 0.00%	||	 43.75 %	||	0ms
     128B	||	   24	||	  3	||	 0.00%	||	 43.75 %	||	0ms
     128B	||	   24	||	  4	||	 0.00%	||	 43.75 %	||	0ms
     128B	||	   24	||	  5	||	 0.00%	||	 43.75 %	||	0ms
     128B	||	   28	||	  1	||	14.29%	||	 25.00 %	||	0ms
     128B	||	   28	||	  2	||	14.29%	||	 25.00 %	||	0ms
     128B	||	   28	||	  3	||	14.29%	||	 25.00 %	||	0ms
     128B	||	   28	||	  4	||	14.29%	||	 25.00 %	||	0ms
     128B	||	   28	||	  5	||	14.29%	||	 25.00 %	||	0ms
     128B	||	   32	||	  1	||	 0.00%	||	 25.00 %	||	0ms
     128B	||	   32	||	  2	||	 0.00%	||	 25.00 %	||	0ms
     128B	||	   32	||	  3	||	 0.00%	||	 25.00 %	||	0ms
     128B	||	   32	||	  4	||	 0.00%	||	 25.00 %	||	0ms
     128B	||	   32	||	  5	||	 0.00%	||	 25.00 %	||	0ms
     128B	||	   36	||	  1	||	33.33%	||	 62.50 %	||	0ms
     128B	||	   36	||	  2	||	33.33%	||	 62.50 %	||	0ms
     128B	||	   36	||	  3	||	33.33%	||	 62.50 %	||	0ms
     128B	||	   36	||	  4	||	33.33%	||	 62.50 %	||	0ms
     128B	||	   36	||	  5	||	33.33%	||	 62.50 %	||	0ms
     128B	||	   40	||	  1	||	20.00%	||	 62.50 %	||	0ms
     128B	||	   40	||	  2	||	20.00%	||	 62.50 %	||	0ms
     128B	||	   40	||	  3	||	20.00%	||	 62.50 %	||	0ms
     128B	||	   40	||	  4	||	20.00%	||	 62.50 %	||	0ms
     128B	||	   40	||	  5	||	20.00%	||	 62.50 %	||	0ms
     128B	||	   44	||	  1	||	 9.09%	||	 62.50 %	||	0ms
     128B	||	   44	||	  2	||	 9.09%	||	 62.50 %	||	0ms
     128B	||	   44	||	  3	||	 9.09%	||	 62.50 %	||	0ms
     128B	||	   44	||	  4	||	 9.09%	||	 62.50 %	||	0ms
     128B	||	   44	||	  5	||	 9.09%	||	 62.50 %	||	0ms
     128B	||	   48	||	  1	||	 0.00%	||	 62.50 %	||	0ms
     128B	||	   48	||	  2	||	 0.00%	||	 62.50 %	||	0ms
     128B	||	   48	||	  3	||	 0.00%	||	 62.50 %	||	0ms
     128B	||	   48	||	  4	||	 0.00%	||	 62.50 %	||	0ms
     128B	||	   48	||	  5	||	 0.00%	||	 62.50 %	||	0ms
     128B	||	   52	||	  1	||	23.08%	||	 50.00 %	||	0ms
     128B	||	   52	||	  2	||	23.08%	||	 50.00 %	||	0ms
     128B	||	   52	||	  3	||	23.08%	||	 50.00 %	||	0ms
     128B	||	   52	||	  4	||	23.08%	||	 50.00 %	||	0ms
     128B	||	   52	||	  5	||	23.08%	||	 50.00 %	||	0ms
     128B	||	   56	||	  1	||	14.29%	||	 50.00 %	||	0ms
     128B	||	   56	||	  2	||	14.29%	||	 50.00 %	||	0ms
     128B	||	   56	||	  3	||	14.29%	||	 50.00 %	||	0ms
     128B	||	   56	||	  4	||	14.29%	||	 50.00 %	||	0ms
     128B	||	   56	||	  5	||	14.29%	||	 50.00 %	||	0ms
     128B	||	   60	||	  1	||	 6.67%	||	 50.00 %	||	0ms
     128B	||	   60	||	  2	||	 6.67%	||	 50.00 %	||	0ms
     128B	||	   60	||	  3	||	 6.67%	||	 50.00 %	||	0ms
     128B	||	   60	||	  4	||	 6.67%	||	 50.00 %	||	0ms
     128B	||	   60	||	  5	||	 6.67%	||	 50.00 %	||	0ms
     128B	||	   64	||	  1	||	 0.00%	||	 50.00 %	||	0ms
     128B	||	   64	||	  2	||	 0.00%	||	 50.00 %	||	0ms
     128B	||	   64	||	  3	||	 0.00%	||	 50.00 %	||	0ms
     128B	||	   64	||	  4	||	 0.00%	||	 50.00 %	||	0ms
     128B	||	   64	||	  5	||	 0.00%	||	 50.00 %	||	0ms
     256B	||	   24	||	  1	||	 0.00%	||	 53.13 %	||	0ms
     256B	||	   24	||	  2	||	 0.00%	||	 53.13 %	||	0ms
     256B	||	   24	||	  3	||	 0.00%	||	 53.13 %	||	0ms
     256B	||	   24	||	  4	||	 0.00%	||	 53.13 %	||	0ms
     256B	||	   24	||	  5	||	 0.00%	||	 53.13 %	||	0ms
     256B	||	   28	||	  1	||	14.29%	||	 37.50 %	||	0ms
     256B	||	   28	||	  2	||	14.29%	||	 37.50 %	||	0ms
     256B	||	   28	||	  3	||	14.29%	||	 37.50 %	||	0ms
     256B	||	   28	||	  4	||	14.29%	||	 37.50 %	||	0ms
     256B	||	   28	||	  5	||	14.29%	||	 37.50 %	||	0ms
     256B	||	   32	||	  1	||	 0.00%	||	 37.50 %	||	0ms
     256B	||	   32	||	  2	||	 0.00%	||	 37.50 %	||	0ms
     256B	||	   32	||	  3	||	 0.00%	||	 37.50 %	||	0ms
     256B	||	   32	||	  4	||	 0.00%	||	 37.50 %	||	0ms
     256B	||	   32	||	  5	||	 0.00%	||	 37.50 %	||	0ms
     256B	||	   36	||	  1	||	33.33%	||	 43.75 %	||	0ms
     256B	||	   36	||	  2	||	33.33%	||	 43.75 %	||	0ms
     256B	||	   36	||	  3	||	33.33%	||	 43.75 %	||	0ms
     256B	||	   36	||	  4	||	33.33%	||	 43.75 %	||	0ms
     256B	||	   36	||	  5	||	33.33%	||	 43.75 %	||	0ms
     256B	||	   40	||	  1	||	20.00%	||	 43.75 %	||	0ms
     256B	||	   40	||	  2	||	20.00%	||	 43.75 %	||	0ms
     256B	||	   40	||	  3	||	20.00%	||	 43.75 %	||	0ms
     256B	||	   40	||	  4	||	20.00%	||	 43.75 %	||	0ms
     256B	||	   40	||	  5	||	20.00%	||	 43.75 %	||	0ms
     256B	||	   44	||	  1	||	 9.09%	||	 43.75 %	||	0ms
     256B	||	   44	||	  2	||	 9.09%	||	 43.75 %	||	0ms
     256B	||	   44	||	  3	||	 9.09%	||	 43.75 %	||	0ms
     256B	||	   44	||	  4	||	 9.09%	||	 43.75 %	||	0ms
     256B	||	   44	||	  5	||	 9.09%	||	 43.75 %	||	0ms
     256B	||	   48	||	  1	||	 0.00%	||	 43.75 %	||	0ms
     256B	||	   48	||	  2	||	 0.00%	||	 43.75 %	||	0ms
     256B	||	   48	||	  3	||	 0.00%	||	 43.75 %	||	0ms
     256B	||	   48	||	  4	||	 0.00%	||	 43.75 %	||	0ms
     256B	||	   48	||	  5	||	 0.00%	||	 43.75 %	||	0ms
     256B	||	   52	||	  1	||	23.08%	||	 25.00 %	||	0ms
     256B	||	   52	||	  2	||	23.08%	||	 25.00 %	||	0ms
     256B	||	   52	||	  3	||	23.08%	||	 25.00 %	||	0ms
     256B	||	   52	||	  4	||	23.08%	||	 25.00 %	||	0ms
     256B	||	   52	||	  5	||	23.08%	||	 25.00 %	||	0ms
     256B	||	   56	||	  1	||	14.29%	||	 25.00 %	||	0ms
     256B	||	   56	||	  2	||	14.29%	||	 25.00 %	||	0ms
     256B	||	   56	||	  3	||	14.29%	||	 25.00 %	||	0ms
     256B	||	   56	||	  4	||	14.29%	||	 25.00 %	||	0ms
     256B	||	   56	||	  5	||	14.29%	||	 25.00 %	||	0ms
     256B	||	   60	||	  1	||	 6.67%	||	 25.00 %	||	0ms
     256B	||	   60	||	  2	||	 6.67%	||	 25.00 %	||	0ms
     256B	||	   60	||	  3	||	 6.67%	||	 25.00 %	||	0ms
     256B	||	   60	||	  4	||	 6.67%	||	 25.00 %	||	0ms
     256B	||	   60	||	  5	||	 6.67%	||	 25.00 %	||	0ms
     256B	||	   64	||	  1	||	 0.00%	||	 25.00 %	||	0ms
     256B	||	   64	||	  2	||	 0.00%	||	 25.00 %	||	0ms
     256B	||	   64	||	  3	||	 0.00%	||	 25.00 %	||	0ms
     256B	||	   64	||	  4	||	 0.00%	||	 25.00 %	||	0ms
     256B	||	   64	||	  5	||	 0.00%	||	 25.00 %	||	0ms
     512B	||	   24	||	  1	||	 0.00%	||	 48.44 %	||	1ms
     512B	||	   24	||	  2	||	 0.00%	||	 48.44 %	||	0ms
     512B	||	   24	||	  3	||	 0.00%	||	 48.44 %	||	0ms
     512B	||	   24	||	  4	||	 0.00%	||	 48.44 %	||	0ms
     512B	||	   24	||	  5	||	 0.00%	||	 48.44 %	||	0ms
     512B	||	   28	||	  1	||	14.29%	||	 31.25 %	||	0ms
     512B	||	   28	||	  2	||	14.29%	||	 31.25 %	||	0ms
     512B	||	   28	||	  3	||	14.29%	||	 31.25 %	||	0ms
     512B	||	   28	||	  4	||	14.29%	||	 31.25 %	||	0ms
     512B	||	   28	||	  5	||	14.29%	||	 31.25 %	||	0ms
     512B	||	   32	||	  1	||	 0.00%	||	 31.25 %	||	0ms
     512B	||	   32	||	  2	||	 0.00%	||	 31.25 %	||	0ms
     512B	||	   32	||	  3	||	 0.00%	||	 31.25 %	||	0ms
     512B	||	   32	||	  4	||	 0.00%	||	 31.25 %	||	0ms
     512B	||	   32	||	  5	||	 0.00%	||	 31.25 %	||	0ms
     512B	||	   36	||	  1	||	33.33%	||	 53.13 %	||	0ms
     512B	||	   36	||	  2	||	33.33%	||	 53.13 %	||	0ms
     512B	||	   36	||	  3	||	33.33%	||	 53.13 %	||	0ms
     512B	||	   36	||	  4	||	33.33%	||	 53.13 %	||	0ms
     512B	||	   36	||	  5	||	33.33%	||	 53.13 %	||	0ms
     512B	||	   40	||	  1	||	20.00%	||	 53.13 %	||	0ms
     512B	||	   40	||	  2	||	20.00%	||	 53.13 %	||	0ms
     512B	||	   40	||	  3	||	20.00%	||	 53.13 %	||	0ms
     512B	||	   40	||	  4	||	20.00%	||	 53.13 %	||	0ms
     512B	||	   40	||	  5	||	20.00%	||	 53.13 %	||	0ms
     512B	||	   44	||	  1	||	 9.09%	||	 53.13 %	||	1ms
     512B	||	   44	||	  2	||	 9.09%	||	 53.13 %	||	0ms
     512B	||	   44	||	  3	||	 9.09%	||	 53.13 %	||	0ms
     512B	||	   44	||	  4	||	 9.09%	||	 53.13 %	||	0ms
     512B	||	   44	||	  5	||	 9.09%	||	 53.13 %	||	0ms
     512B	||	   48	||	  1	||	 0.00%	||	 53.13 %	||	0ms
     512B	||	   48	||	  2	||	 0.00%	||	 53.13 %	||	0ms
     512B	||	   48	||	  3	||	 0.00%	||	 53.13 %	||	0ms
     512B	||	   48	||	  4	||	 0.00%	||	 53.13 %	||	0ms
     512B	||	   48	||	  5	||	 0.00%	||	 53.13 %	||	0ms
     512B	||	   52	||	  1	||	23.08%	||	 37.50 %	||	0ms
     512B	||	   52	||	  2	||	23.08%	||	 37.50 %	||	0ms
     512B	||	   52	||	  3	||	23.08%	||	 37.50 %	||	0ms
     512B	||	   52	||	  4	||	23.08%	||	 37.50 %	||	0ms
     512B	||	   52	||	  5	||	23.08%	||	 37.50 %	||	0ms
     512B	||	   56	||	  1	||	14.29%	||	 37.50 %	||	0ms
     512B	||	   56	||	  2	||	14.29%	||	 37.50 %	||	0ms
     512B	||	   56	||	  3	||	14.29%	||	 37.50 %	||	0ms
     512B	||	   56	||	  4	||	14.29%	||	 37.50 %	||	0ms
     512B	||	   56	||	  5	||	14.29%	||	 37.50 %	||	0ms
     512B	||	   60	||	  1	||	 6.67%	||	 37.50 %	||	0ms
     512B	||	   60	||	  2	||	 6.67%	||	 37.50 %	||	0ms
     512B	||	   60	||	  3	||	 6.67%	||	 37.50 %	||	0ms
     512B	||	   60	||	  4	||	 6.67%	||	 37.50 %	||	0ms
     512B	||	   60	||	  5	||	 6.67%	||	 37.50 %	||	0ms
     512B	||	   64	||	  1	||	 0.00%	||	 37.50 %	||	0ms
     512B	||	   64	||	  2	||	 0.00%	||	 37.50 %	||	0ms
     512B	||	   64	||	  3	||	 0.00%	||	 37.50 %	||	0ms
     512B	||	   64	||	  4	||	 0.00%	||	 37.50 %	||	0ms
     512B	||	   64	||	  5	||	 0.00%	||	 37.50 %	||	0ms
    1024B	||	   24	||	  1	||	 0.00%	||	 50.78 %	||	0ms
    1024B	||	   24	||	  2	||	 0.00%	||	 50.78 %	||	0ms
    1024B	||	   24	||	  3	||	 0.00%	||	 50.78 %	||	1ms
    1024B	||	   24	||	  4	||	 0.00%	||	 50.78 %	||	0ms
    1024B	||	   24	||	  5	||	 0.00%	||	 50.78 %	||	0ms
    1024B	||	   28	||	  1	||	14.29%	||	 34.38 %	||	0ms
    1024B	||	   28	||	  2	||	14.29%	||	 34.38 %	||	0ms
    1024B	||	   28	||	  3	||	14.29%	||	 34.38 %	||	0ms
    1024B	||	   28	||	  4	||	14.29%	||	 34.38 %	||	0ms
    1024B	||	   28	||	  5	||	14.29%	||	 34.38 %	||	0ms
    1024B	||	   32	||	  1	||	 0.00%	||	 34.38 %	||	0ms
    1024B	||	   32	||	  2	||	 0.00%	||	 34.38 %	||	0ms
    1024B	||	   32	||	  3	||	 0.00%	||	 34.38 %	||	0ms
    1024B	||	   32	||	  4	||	 0.00%	||	 34.38 %	||	1ms
    1024B	||	   32	||	  5	||	 0.00%	||	 34.38 %	||	0ms
    1024B	||	   36	||	  1	||	33.33%	||	 48.44 %	||	0ms
    1024B	||	   36	||	  2	||	33.33%	||	 48.44 %	||	0ms
    1024B	||	   36	||	  3	||	33.33%	||	 48.44 %	||	0ms
    1024B	||	   36	||	  4	||	33.33%	||	 48.44 %	||	0ms
    1024B	||	   36	||	  5	||	33.33%	||	 48.44 %	||	0ms
    1024B	||	   40	||	  1	||	20.00%	||	 48.44 %	||	0ms
    1024B	||	   40	||	  2	||	20.00%	||	 48.44 %	||	0ms
    1024B	||	   40	||	  3	||	20.00%	||	 48.44 %	||	0ms
    1024B	||	   40	||	  4	||	20.00%	||	 48.44 %	||	0ms
    1024B	||	   40	||	  5	||	20.00%	||	 48.44 %	||	0ms
    1024B	||	   44	||	  1	||	 9.09%	||	 48.44 %	||	0ms
    1024B	||	   44	||	  2	||	 9.09%	||	 48.44 %	||	0ms
    1024B	||	   44	||	  3	||	 9.09%	||	 48.44 %	||	0ms
    1024B	||	   44	||	  4	||	 9.09%	||	 48.44 %	||	0ms
    1024B	||	   44	||	  5	||	 9.09%	||	 48.44 %	||	0ms
    1024B	||	   48	||	  1	||	 0.00%	||	 48.44 %	||	0ms
    1024B	||	   48	||	  2	||	 0.00%	||	 48.44 %	||	0ms
    1024B	||	   48	||	  3	||	 0.00%	||	 48.44 %	||	1ms
    1024B	||	   48	||	  4	||	 0.00%	||	 48.44 %	||	0ms
    1024B	||	   48	||	  5	||	 0.00%	||	 48.44 %	||	0ms
    1024B	||	   52	||	  1	||	23.08%	||	 31.25 %	||	0ms
    1024B	||	   52	||	  2	||	23.08%	||	 31.25 %	||	0ms
    1024B	||	   52	||	  3	||	23.08%	||	 31.25 %	||	0ms
    1024B	||	   52	||	  4	||	23.08%	||	 31.25 %	||	0ms
    1024B	||	   52	||	  5	||	23.08%	||	 31.25 %	||	0ms
    1024B	||	   56	||	  1	||	14.29%	||	 31.25 %	||	0ms
    1024B	||	   56	||	  2	||	14.29%	||	 31.25 %	||	0ms
    1024B	||	   56	||	  3	||	14.29%	||	 31.25 %	||	0ms
    1024B	||	   56	||	  4	||	14.29%	||	 31.25 %	||	0ms
    1024B	||	   56	||	  5	||	14.29%	||	 31.25 %	||	0ms
    1024B	||	   60	||	  1	||	 6.67%	||	 31.25 %	||	0ms
    1024B	||	   60	||	  2	||	 6.67%	||	 31.25 %	||	0ms
    1024B	||	   60	||	  3	||	 6.67%	||	 31.25 %	||	0ms
    1024B	||	   60	||	  4	||	 6.67%	||	 31.25 %	||	0ms
    1024B	||	   60	||	  5	||	 6.67%	||	 31.25 %	||	0ms
    1024B	||	   64	||	  1	||	 0.00%	||	 31.25 %	||	0ms
    1024B	||	   64	||	  2	||	 0.00%	||	 31.25 %	||	0ms
    1024B	||	   64	||	  3	||	 0.00%	||	 31.25 %	||	0ms
    1024B	||	   64	||	  4	||	 0.00%	||	 31.25 %	||	0ms
    1024B	||	   64	||	  5	||	 0.00%	||	 31.25 %	||	0ms
    2.00KB	||	   24	||	  1	||	 0.00%	||	 49.61 %	||	1ms
    2.00KB	||	   24	||	  2	||	 0.00%	||	 49.61 %	||	0ms
    2.00KB	||	   24	||	  3	||	 0.00%	||	 49.61 %	||	0ms
    2.00KB	||	   24	||	  4	||	 0.00%	||	 49.61 %	||	0ms
    2.00KB	||	   24	||	  5	||	 0.00%	||	 49.61 %	||	0ms
    2.00KB	||	   28	||	  1	||	14.29%	||	 32.81 %	||	1ms
    2.00KB	||	   28	||	  2	||	14.29%	||	 32.81 %	||	0ms
    2.00KB	||	   28	||	  3	||	14.29%	||	 32.81 %	||	0ms
    2.00KB	||	   28	||	  4	||	14.29%	||	 32.81 %	||	0ms
    2.00KB	||	   28	||	  5	||	14.29%	||	 32.81 %	||	0ms
    2.00KB	||	   32	||	  1	||	 0.00%	||	 32.81 %	||	0ms
    2.00KB	||	   32	||	  2	||	 0.00%	||	 32.81 %	||	0ms
    2.00KB	||	   32	||	  3	||	 0.00%	||	 32.81 %	||	1ms
    2.00KB	||	   32	||	  4	||	 0.00%	||	 32.81 %	||	0ms
    2.00KB	||	   32	||	  5	||	 0.00%	||	 32.81 %	||	0ms
    2.00KB	||	   36	||	  1	||	33.33%	||	 50.78 %	||	0ms
    2.00KB	||	   36	||	  2	||	33.33%	||	 50.78 %	||	0ms
    2.00KB	||	   36	||	  3	||	33.33%	||	 50.78 %	||	0ms
    2.00KB	||	   36	||	  4	||	33.33%	||	 50.78 %	||	0ms
    2.00KB	||	   36	||	  5	||	33.33%	||	 50.78 %	||	0ms
    2.00KB	||	   40	||	  1	||	20.00%	||	 50.78 %	||	0ms
    2.00KB	||	   40	||	  2	||	20.00%	||	 50.78 %	||	1ms
    2.00KB	||	   40	||	  3	||	20.00%	||	 50.78 %	||	0ms
    2.00KB	||	   40	||	  4	||	20.00%	||	 50.78 %	||	0ms
    2.00KB	||	   40	||	  5	||	20.00%	||	 50.78 %	||	0ms
    2.00KB	||	   44	||	  1	||	 9.09%	||	 50.78 %	||	0ms
    2.00KB	||	   44	||	  2	||	 9.09%	||	 50.78 %	||	0ms
    2.00KB	||	   44	||	  3	||	 9.09%	||	 50.78 %	||	0ms
    2.00KB	||	   44	||	  4	||	 9.09%	||	 50.78 %	||	0ms
    2.00KB	||	   44	||	  5	||	 9.09%	||	 50.78 %	||	0ms
    2.00KB	||	   48	||	  1	||	 0.00%	||	 50.78 %	||	1ms
    2.00KB	||	   48	||	  2	||	 0.00%	||	 50.78 %	||	0ms
    2.00KB	||	   48	||	  3	||	 0.00%	||	 50.78 %	||	0ms
    2.00KB	||	   48	||	  4	||	 0.00%	||	 50.78 %	||	0ms
    2.00KB	||	   48	||	  5	||	 0.00%	||	 50.78 %	||	0ms
    2.00KB	||	   52	||	  1	||	23.08%	||	 34.38 %	||	0ms
    2.00KB	||	   52	||	  2	||	23.08%	||	 34.38 %	||	0ms
    2.00KB	||	   52	||	  3	||	23.08%	||	 34.38 %	||	0ms
    2.00KB	||	   52	||	  4	||	23.08%	||	 34.38 %	||	0ms
    2.00KB	||	   52	||	  5	||	23.08%	||	 34.38 %	||	0ms
    2.00KB	||	   56	||	  1	||	14.29%	||	 34.38 %	||	0ms
    2.00KB	||	   56	||	  2	||	14.29%	||	 34.38 %	||	0ms
    2.00KB	||	   56	||	  3	||	14.29%	||	 34.38 %	||	1ms
    2.00KB	||	   56	||	  4	||	14.29%	||	 34.38 %	||	0ms
    2.00KB	||	   56	||	  5	||	14.29%	||	 34.38 %	||	0ms
    2.00KB	||	   60	||	  1	||	 6.67%	||	 34.38 %	||	0ms
    2.00KB	||	   60	||	  2	||	 6.67%	||	 34.38 %	||	0ms
    2.00KB	||	   60	||	  3	||	 6.67%	||	 34.38 %	||	0ms
    2.00KB	||	   60	||	  4	||	 6.67%	||	 34.38 %	||	0ms
    2.00KB	||	   60	||	  5	||	 6.67%	||	 34.38 %	||	0ms
    2.00KB	||	   64	||	  1	||	 0.00%	||	 34.38 %	||	0ms
    2.00KB	||	   64	||	  2	||	 0.00%	||	 34.38 %	||	0ms
    2.00KB	||	   64	||	  3	||	 0.00%	||	 34.38 %	||	0ms
    2.00KB	||	   64	||	  4	||	 0.00%	||	 34.38 %	||	0ms
    2.00KB	||	   64	||	  5	||	 0.00%	||	 34.38 %	||	0ms
    4.00KB	||	   24	||	  1	||	 0.00%	||	 50.20 %	||	1ms
    4.00KB	||	   24	||	  2	||	 0.00%	||	 50.20 %	||	0ms
    4.00KB	||	   24	||	  3	||	 0.00%	||	 50.20 %	||	1ms
    4.00KB	||	   24	||	  4	||	 0.00%	||	 50.20 %	||	0ms
    4.00KB	||	   24	||	  5	||	 0.00%	||	 50.20 %	||	1ms
    4.00KB	||	   28	||	  1	||	14.29%	||	 33.59 %	||	0ms
    4.00KB	||	   28	||	  2	||	14.29%	||	 33.59 %	||	0ms
    4.00KB	||	   28	||	  3	||	14.29%	||	 33.59 %	||	0ms
    4.00KB	||	   28	||	  4	||	14.29%	||	 33.59 %	||	1ms
    4.00KB	||	   28	||	  5	||	14.29%	||	 33.59 %	||	0ms
    4.00KB	||	   32	||	  1	||	 0.00%	||	 33.59 %	||	0ms
    4.00KB	||	   32	||	  2	||	 0.00%	||	 33.59 %	||	1ms
    4.00KB	||	   32	||	  3	||	 0.00%	||	 33.59 %	||	0ms
    4.00KB	||	   32	||	  4	||	 0.00%	||	 33.59 %	||	0ms
    4.00KB	||	   32	||	  5	||	 0.00%	||	 33.59 %	||	0ms
    4.00KB	||	   36	||	  1	||	33.33%	||	 49.61 %	||	1ms
    4.00KB	||	   36	||	  2	||	33.33%	||	 49.61 %	||	0ms
    4.00KB	||	   36	||	  3	||	33.33%	||	 49.61 %	||	0ms
    4.00KB	||	   36	||	  4	||	33.33%	||	 49.61 %	||	0ms
    4.00KB	||	   36	||	  5	||	33.33%	||	 49.61 %	||	0ms
    4.00KB	||	   40	||	  1	||	20.00%	||	 49.61 %	||	1ms
    4.00KB	||	   40	||	  2	||	20.00%	||	 49.61 %	||	0ms
    4.00KB	||	   40	||	  3	||	20.00%	||	 49.61 %	||	0ms
    4.00KB	||	   40	||	  4	||	20.00%	||	 49.61 %	||	0ms
    4.00KB	||	   40	||	  5	||	20.00%	||	 49.61 %	||	1ms
    4.00KB	||	   44	||	  1	||	 9.09%	||	 49.61 %	||	0ms
    4.00KB	||	   44	||	  2	||	 9.09%	||	 49.61 %	||	0ms
    4.00KB	||	   44	||	  3	||	 9.09%	||	 49.61 %	||	0ms
    4.00KB	||	   44	||	  4	||	 9.09%	||	 49.61 %	||	0ms
    4.00KB	||	   44	||	  5	||	 9.09%	||	 49.61 %	||	1ms
    4.00KB	||	   48	||	  1	||	 0.00%	||	 49.61 %	||	0ms
    4.00KB	||	   48	||	  2	||	 0.00%	||	 49.61 %	||	0ms
    4.00KB	||	   48	||	  3	||	 0.00%	||	 49.61 %	||	0ms
    4.00KB	||	   48	||	  4	||	 0.00%	||	 49.61 %	||	0ms
    4.00KB	||	   48	||	  5	||	 0.00%	||	 49.61 %	||	1ms
    4.00KB	||	   52	||	  1	||	23.08%	||	 32.81 %	||	0ms
    4.00KB	||	   52	||	  2	||	23.08%	||	 32.81 %	||	0ms
    4.00KB	||	   52	||	  3	||	23.08%	||	 32.81 %	||	0ms
    4.00KB	||	   52	||	  4	||	23.08%	||	 32.81 %	||	0ms
    4.00KB	||	   52	||	  5	||	23.08%	||	 32.81 %	||	0ms
    4.00KB	||	   56	||	  1	||	14.29%	||	 32.81 %	||	0ms
    4.00KB	||	   56	||	  2	||	14.29%	||	 32.81 %	||	1ms
    4.00KB	||	   56	||	  3	||	14.29%	||	 32.81 %	||	0ms
    4.00KB	||	   56	||	  4	||	14.29%	||	 32.81 %	||	0ms
    4.00KB	||	   56	||	  5	||	14.29%	||	 32.81 %	||	0ms
    4.00KB	||	   60	||	  1	||	 6.67%	||	 32.81 %	||	0ms
    4.00KB	||	   60	||	  2	||	 6.67%	||	 32.81 %	||	0ms
    4.00KB	||	   60	||	  3	||	 6.67%	||	 32.81 %	||	1ms
    4.00KB	||	   60	||	  4	||	 6.67%	||	 32.81 %	||	0ms
    4.00KB	||	   60	||	  5	||	 6.67%	||	 32.81 %	||	0ms
    4.00KB	||	   64	||	  1	||	 0.00%	||	 32.81 %	||	0ms
    4.00KB	||	   64	||	  2	||	 0.00%	||	 32.81 %	||	0ms
    4.00KB	||	   64	||	  3	||	 0.00%	||	 32.81 %	||	0ms
    4.00KB	||	   64	||	  4	||	 0.00%	||	 32.81 %	||	0ms
    4.00KB	||	   64	||	  5	||	 0.00%	||	 32.81 %	||	1ms
    8.00KB	||	   24	||	  1	||	 0.00%	||	 49.90 %	||	0ms
    8.00KB	||	   24	||	  2	||	 0.00%	||	 49.90 %	||	1ms
    8.00KB	||	   24	||	  3	||	 0.00%	||	 49.90 %	||	1ms
    8.00KB	||	   24	||	  4	||	 0.00%	||	 49.90 %	||	1ms
    8.00KB	||	   24	||	  5	||	 0.00%	||	 49.90 %	||	1ms
    8.00KB	||	   28	||	  1	||	14.29%	||	 33.20 %	||	0ms
    8.00KB	||	   28	||	  2	||	14.29%	||	 33.20 %	||	1ms
    8.00KB	||	   28	||	  3	||	14.29%	||	 33.20 %	||	1ms
    8.00KB	||	   28	||	  4	||	14.29%	||	 33.20 %	||	0ms
    8.00KB	||	   28	||	  5	||	14.29%	||	 33.20 %	||	1ms
    8.00KB	||	   32	||	  1	||	 0.00%	||	 33.20 %	||	1ms
    8.00KB	||	   32	||	  2	||	 0.00%	||	 33.20 %	||	0ms
    8.00KB	||	   32	||	  3	||	 0.00%	||	 33.20 %	||	1ms
    8.00KB	||	   32	||	  4	||	 0.00%	||	 33.20 %	||	0ms
    8.00KB	||	   32	||	  5	||	 0.00%	||	 33.20 %	||	1ms
    8.00KB	||	   36	||	  1	||	33.33%	||	 50.20 %	||	0ms
    8.00KB	||	   36	||	  2	||	33.33%	||	 50.20 %	||	1ms
    8.00KB	||	   36	||	  3	||	33.33%	||	 50.20 %	||	0ms
    8.00KB	||	   36	||	  4	||	33.33%	||	 50.20 %	||	1ms
    8.00KB	||	   36	||	  5	||	33.33%	||	 50.20 %	||	0ms
    8.00KB	||	   40	||	  1	||	20.00%	||	 50.20 %	||	1ms
    8.00KB	||	   40	||	  2	||	20.00%	||	 50.20 %	||	0ms
    8.00KB	||	   40	||	  3	||	20.00%	||	 50.20 %	||	0ms
    8.00KB	||	   40	||	  4	||	20.00%	||	 50.20 %	||	1ms
    8.00KB	||	   40	||	  5	||	20.00%	||	 50.20 %	||	0ms
    8.00KB	||	   44	||	  1	||	 9.09%	||	 50.20 %	||	1ms
    8.00KB	||	   44	||	  2	||	 9.09%	||	 50.20 %	||	0ms
    8.00KB	||	   44	||	  3	||	 9.09%	||	 50.20 %	||	1ms
    8.00KB	||	   44	||	  4	||	 9.09%	||	 50.20 %	||	0ms
    8.00KB	||	   44	||	  5	||	 9.09%	||	 50.20 %	||	0ms
    8.00KB	||	   48	||	  1	||	 0.00%	||	 50.20 %	||	1ms
    8.00KB	||	   48	||	  2	||	 0.00%	||	 50.20 %	||	0ms
    8.00KB	||	   48	||	  3	||	 0.00%	||	 50.20 %	||	1ms
    8.00KB	||	   48	||	  4	||	 0.00%	||	 50.20 %	||	0ms
    8.00KB	||	   48	||	  5	||	 0.00%	||	 50.20 %	||	0ms
    8.00KB	||	   52	||	  1	||	23.08%	||	 33.59 %	||	1ms
    8.00KB	||	   52	||	  2	||	23.08%	||	 33.59 %	||	0ms
    8.00KB	||	   52	||	  3	||	23.08%	||	 33.59 %	||	0ms
    8.00KB	||	   52	||	  4	||	23.08%	||	 33.59 %	||	1ms
    8.00KB	||	   52	||	  5	||	23.08%	||	 33.59 %	||	0ms
    8.00KB	||	   56	||	  1	||	14.29%	||	 33.59 %	||	0ms
    8.00KB	||	   56	||	  2	||	14.29%	||	 33.59 %	||	1ms
    8.00KB	||	   56	||	  3	||	14.29%	||	 33.59 %	||	0ms
    8.00KB	||	   56	||	  4	||	14.29%	||	 33.59 %	||	0ms
    8.00KB	||	   56	||	  5	||	14.29%	||	 33.59 %	||	0ms
    8.00KB	||	   60	||	  1	||	 6.67%	||	 33.59 %	||	1ms
    8.00KB	||	   60	||	  2	||	 6.67%	||	 33.59 %	||	0ms
    8.00KB	||	   60	||	  3	||	 6.67%	||	 33.59 %	||	0ms
    8.00KB	||	   60	||	  4	||	 6.67%	||	 33.59 %	||	1ms
    8.00KB	||	   60	||	  5	||	 6.67%	||	 33.59 %	||	0ms
    8.00KB	||	   64	||	  1	||	 0.00%	||	 33.59 %	||	0ms
    8.00KB	||	   64	||	  2	||	 0.00%	||	 33.59 %	||	0ms
    8.00KB	||	   64	||	  3	||	 0.00%	||	 33.59 %	||	1ms
    8.00KB	||	   64	||	  4	||	 0.00%	||	 33.59 %	||	0ms
    8.00KB	||	   64	||	  5	||	 0.00%	||	 33.59 %	||	0ms
   16.00KB	||	   24	||	  1	||	 0.00%	||	 50.05 %	||	2ms
   16.00KB	||	   24	||	  2	||	 0.00%	||	 50.05 %	||	2ms
   16.00KB	||	   24	||	  3	||	 0.00%	||	 50.05 %	||	2ms
   16.00KB	||	   24	||	  4	||	 0.00%	||	 50.05 %	||	2ms
   16.00KB	||	   24	||	  5	||	 0.00%	||	 50.05 %	||	2ms
   16.00KB	||	   28	||	  1	||	14.29%	||	 33.40 %	||	1ms
   16.00KB	||	   28	||	  2	||	14.29%	||	 33.40 %	||	1ms
   16.00KB	||	   28	||	  3	||	14.29%	||	 33.40 %	||	2ms
   16.00KB	||	   28	||	  4	||	14.29%	||	 33.40 %	||	1ms
   16.00KB	||	   28	||	  5	||	14.29%	||	 33.40 %	||	2ms
   16.00KB	||	   32	||	  1	||	 0.00%	||	 33.40 %	||	1ms
   16.00KB	||	   32	||	  2	||	 0.00%	||	 33.40 %	||	1ms
   16.00KB	||	   32	||	  3	||	 0.00%	||	 33.40 %	||	2ms
   16.00KB	||	   32	||	  4	||	 0.00%	||	 33.40 %	||	1ms
   16.00KB	||	   32	||	  5	||	 0.00%	||	 33.40 %	||	1ms
   16.00KB	||	   36	||	  1	||	33.33%	||	 49.90 %	||	1ms
   16.00KB	||	   36	||	  2	||	33.33%	||	 49.90 %	||	1ms
   16.00KB	||	   36	||	  3	||	33.33%	||	 49.90 %	||	1ms
   16.00KB	||	   36	||	  4	||	33.33%	||	 49.90 %	||	1ms
   16.00KB	||	   36	||	  5	||	33.33%	||	 49.90 %	||	1ms
   16.00KB	||	   40	||	  1	||	20.00%	||	 49.90 %	||	1ms
   16.00KB	||	   40	||	  2	||	20.00%	||	 49.90 %	||	0ms
   16.00KB	||	   40	||	  3	||	20.00%	||	 49.90 %	||	1ms
   16.00KB	||	   40	||	  4	||	20.00%	||	 49.90 %	||	1ms
   16.00KB	||	   40	||	  5	||	20.00%	||	 49.90 %	||	1ms
   16.00KB	||	   44	||	  1	||	 9.09%	||	 49.90 %	||	1ms
   16.00KB	||	   44	||	  2	||	 9.09%	||	 49.90 %	||	1ms
   16.00KB	||	   44	||	  3	||	 9.09%	||	 49.90 %	||	1ms
   16.00KB	||	   44	||	  4	||	 9.09%	||	 49.90 %	||	0ms
   16.00KB	||	   44	||	  5	||	 9.09%	||	 49.90 %	||	1ms
   16.00KB	||	   48	||	  1	||	 0.00%	||	 49.90 %	||	1ms
   16.00KB	||	   48	||	  2	||	 0.00%	||	 49.90 %	||	1ms
   16.00KB	||	   48	||	  3	||	 0.00%	||	 49.90 %	||	1ms
   16.00KB	||	   48	||	  4	||	 0.00%	||	 49.90 %	||	1ms
   16.00KB	||	   48	||	  5	||	 0.00%	||	 49.90 %	||	1ms
   16.00KB	||	   52	||	  1	||	23.08%	||	 33.20 %	||	0ms
   16.00KB	||	   52	||	  2	||	23.08%	||	 33.20 %	||	1ms
   16.00KB	||	   52	||	  3	||	23.08%	||	 33.20 %	||	1ms
   16.00KB	||	   52	||	  4	||	23.08%	||	 33.20 %	||	0ms
   16.00KB	||	   52	||	  5	||	23.08%	||	 33.20 %	||	1ms
   16.00KB	||	   56	||	  1	||	14.29%	||	 33.20 %	||	0ms
   16.00KB	||	   56	||	  2	||	14.29%	||	 33.20 %	||	1ms
   16.00KB	||	   56	||	  3	||	14.29%	||	 33.20 %	||	1ms
   16.00KB	||	   56	||	  4	||	14.29%	||	 33.20 %	||	0ms
   16.00KB	||	   56	||	  5	||	14.29%	||	 33.20 %	||	1ms
   16.00KB	||	   60	||	  1	||	 6.67%	||	 33.20 %	||	1ms
   16.00KB	||	   60	||	  2	||	 6.67%	||	 33.20 %	||	0ms
   16.00KB	||	   60	||	  3	||	 6.67%	||	 33.20 %	||	1ms
   16.00KB	||	   60	||	  4	||	 6.67%	||	 33.20 %	||	0ms
   16.00KB	||	   60	||	  5	||	 6.67%	||	 33.20 %	||	1ms
   16.00KB	||	   64	||	  1	||	 0.00%	||	 33.20 %	||	1ms
   16.00KB	||	   64	||	  2	||	 0.00%	||	 33.20 %	||	0ms
   16.00KB	||	   64	||	  3	||	 0.00%	||	 33.20 %	||	1ms
   16.00KB	||	   64	||	  4	||	 0.00%	||	 33.20 %	||	0ms
   16.00KB	||	   64	||	  5	||	 0.00%	||	 33.20 %	||	1ms
   32.00KB	||	   24	||	  1	||	 0.00%	||	 49.98 %	||	5ms
   32.00KB	||	   24	||	  2	||	 0.00%	||	 49.98 %	||	4ms
   32.00KB	||	   24	||	  3	||	 0.00%	||	 49.98 %	||	5ms
   32.00KB	||	   24	||	  4	||	 0.00%	||	 49.98 %	||	4ms
   32.00KB	||	   24	||	  5	||	 0.00%	||	 49.98 %	||	5ms
   32.00KB	||	   28	||	  1	||	14.29%	||	 33.30 %	||	3ms
   32.00KB	||	   28	||	  2	||	14.29%	||	 33.30 %	||	4ms
   32.00KB	||	   28	||	  3	||	14.29%	||	 33.30 %	||	3ms
   32.00KB	||	   28	||	  4	||	14.29%	||	 33.30 %	||	4ms
   32.00KB	||	   28	||	  5	||	14.29%	||	 33.30 %	||	3ms
   32.00KB	||	   32	||	  1	||	 0.00%	||	 33.30 %	||	4ms
   32.00KB	||	   32	||	  2	||	 0.00%	||	 33.30 %	||	3ms
   32.00KB	||	   32	||	  3	||	 0.00%	||	 33.30 %	||	4ms
   32.00KB	||	   32	||	  4	||	 0.00%	||	 33.30 %	||	3ms
   32.00KB	||	   32	||	  5	||	 0.00%	||	 33.30 %	||	4ms
   32.00KB	||	   36	||	  1	||	33.33%	||	 50.05 %	||	1ms
   32.00KB	||	   36	||	  2	||	33.33%	||	 50.05 %	||	2ms
   32.00KB	||	   36	||	  3	||	33.33%	||	 50.05 %	||	2ms
   32.00KB	||	   36	||	  4	||	33.33%	||	 50.05 %	||	2ms
   32.00KB	||	   36	||	  5	||	33.33%	||	 50.05 %	||	2ms
   32.00KB	||	   40	||	  1	||	20.00%	||	 50.05 %	||	2ms
   32.00KB	||	   40	||	  2	||	20.00%	||	 50.05 %	||	2ms
   32.00KB	||	   40	||	  3	||	20.00%	||	 50.05 %	||	1ms
   32.00KB	||	   40	||	  4	||	20.00%	||	 50.05 %	||	2ms
   32.00KB	||	   40	||	  5	||	20.00%	||	 50.05 %	||	2ms
   32.00KB	||	   44	||	  1	||	 9.09%	||	 50.05 %	||	2ms
   32.00KB	||	   44	||	  2	||	 9.09%	||	 50.05 %	||	2ms
   32.00KB	||	   44	||	  3	||	 9.09%	||	 50.05 %	||	2ms
   32.00KB	||	   44	||	  4	||	 9.09%	||	 50.05 %	||	2ms
   32.00KB	||	   44	||	  5	||	 9.09%	||	 50.05 %	||	1ms
   32.00KB	||	   48	||	  1	||	 0.00%	||	 50.05 %	||	2ms
   32.00KB	||	   48	||	  2	||	 0.00%	||	 50.05 %	||	2ms
   32.00KB	||	   48	||	  3	||	 0.00%	||	 50.05 %	||	2ms
   32.00KB	||	   48	||	  4	||	 0.00%	||	 50.05 %	||	2ms
   32.00KB	||	   48	||	  5	||	 0.00%	||	 50.05 %	||	2ms
   32.00KB	||	   52	||	  1	||	23.08%	||	 33.40 %	||	1ms
   32.00KB	||	   52	||	  2	||	23.08%	||	 33.40 %	||	1ms
   32.00KB	||	   52	||	  3	||	23.08%	||	 33.40 %	||	2ms
   32.00KB	||	   52	||	  4	||	23.08%	||	 33.40 %	||	1ms
   32.00KB	||	   52	||	  5	||	23.08%	||	 33.40 %	||	1ms
   32.00KB	||	   56	||	  1	||	14.29%	||	 33.40 %	||	2ms
   32.00KB	||	   56	||	  2	||	14.29%	||	 33.40 %	||	1ms
   32.00KB	||	   56	||	  3	||	14.29%	||	 33.40 %	||	2ms
   32.00KB	||	   56	||	  4	||	14.29%	||	 33.40 %	||	1ms
   32.00KB	||	   56	||	  5	||	14.29%	||	 33.40 %	||	1ms
   32.00KB	||	   60	||	  1	||	 6.67%	||	 33.40 %	||	2ms
   32.00KB	||	   60	||	  2	||	 6.67%	||	 33.40 %	||	1ms
   32.00KB	||	   60	||	  3	||	 6.67%	||	 33.40 %	||	1ms
   32.00KB	||	   60	||	  4	||	 6.67%	||	 33.40 %	||	2ms
   32.00KB	||	   60	||	  5	||	 6.67%	||	 33.40 %	||	1ms
   32.00KB	||	   64	||	  1	||	 0.00%	||	 33.40 %	||	2ms
   32.00KB	||	   64	||	  2	||	 0.00%	||	 33.40 %	||	1ms
   32.00KB	||	   64	||	  3	||	 0.00%	||	 33.40 %	||	1ms
   32.00KB	||	   64	||	  4	||	 0.00%	||	 33.40 %	||	2ms
   32.00KB	||	   64	||	  5	||	 0.00%	||	 33.40 %	||	1ms
   64.00KB	||	   24	||	  1	||	 0.00%	||	 50.01 %	||	12ms
   64.00KB	||	   24	||	  2	||	 0.00%	||	 50.01 %	||	13ms
   64.00KB	||	   24	||	  3	||	 0.00%	||	 50.01 %	||	12ms
   64.00KB	||	   24	||	  4	||	 0.00%	||	 50.01 %	||	12ms
   64.00KB	||	   24	||	  5	||	 0.00%	||	 50.01 %	||	12ms
   64.00KB	||	   28	||	  1	||	14.29%	||	 33.35 %	||	10ms
   64.00KB	||	   28	||	  2	||	14.29%	||	 33.35 %	||	10ms
   64.00KB	||	   28	||	  3	||	14.29%	||	 33.35 %	||	10ms
   64.00KB	||	   28	||	  4	||	14.29%	||	 33.35 %	||	10ms
   64.00KB	||	   28	||	  5	||	14.29%	||	 33.35 %	||	10ms
   64.00KB	||	   32	||	  1	||	 0.00%	||	 33.35 %	||	10ms
   64.00KB	||	   32	||	  2	||	 0.00%	||	 33.35 %	||	10ms
   64.00KB	||	   32	||	  3	||	 0.00%	||	 33.35 %	||	10ms
   64.00KB	||	   32	||	  4	||	 0.00%	||	 33.35 %	||	9ms
   64.00KB	||	   32	||	  5	||	 0.00%	||	 33.35 %	||	10ms
   64.00KB	||	   36	||	  1	||	33.33%	||	 49.98 %	||	4ms
   64.00KB	||	   36	||	  2	||	33.33%	||	 49.98 %	||	5ms
   64.00KB	||	   36	||	  3	||	33.33%	||	 49.98 %	||	4ms
   64.00KB	||	   36	||	  4	||	33.33%	||	 49.98 %	||	5ms
   64.00KB	||	   36	||	  5	||	33.33%	||	 49.98 %	||	5ms
   64.00KB	||	   40	||	  1	||	20.00%	||	 49.98 %	||	4ms
   64.00KB	||	   40	||	  2	||	20.00%	||	 49.98 %	||	5ms
   64.00KB	||	   40	||	  3	||	20.00%	||	 49.98 %	||	4ms
   64.00KB	||	   40	||	  4	||	20.00%	||	 49.98 %	||	5ms
   64.00KB	||	   40	||	  5	||	20.00%	||	 49.98 %	||	4ms
   64.00KB	||	   44	||	  1	||	 9.09%	||	 49.98 %	||	5ms
   64.00KB	||	   44	||	  2	||	 9.09%	||	 49.98 %	||	4ms
   64.00KB	||	   44	||	  3	||	 9.09%	||	 49.98 %	||	5ms
   64.00KB	||	   44	||	  4	||	 9.09%	||	 49.98 %	||	4ms
   64.00KB	||	   44	||	  5	||	 9.09%	||	 49.98 %	||	5ms
   64.00KB	||	   48	||	  1	||	 0.00%	||	 49.98 %	||	4ms
   64.00KB	||	   48	||	  2	||	 0.00%	||	 49.98 %	||	5ms
   64.00KB	||	   48	||	  3	||	 0.00%	||	 49.98 %	||	4ms
   64.00KB	||	   48	||	  4	||	 0.00%	||	 49.98 %	||	5ms
   64.00KB	||	   48	||	  5	||	 0.00%	||	 49.98 %	||	4ms
   64.00KB	||	   52	||	  1	||	23.08%	||	 33.30 %	||	4ms
   64.00KB	||	   52	||	  2	||	23.08%	||	 33.30 %	||	3ms
   64.00KB	||	   52	||	  3	||	23.08%	||	 33.30 %	||	4ms
   64.00KB	||	   52	||	  4	||	23.08%	||	 33.30 %	||	3ms
   64.00KB	||	   52	||	  5	||	23.08%	||	 33.30 %	||	4ms
   64.00KB	||	   56	||	  1	||	14.29%	||	 33.30 %	||	3ms
   64.00KB	||	   56	||	  2	||	14.29%	||	 33.30 %	||	4ms
   64.00KB	||	   56	||	  3	||	14.29%	||	 33.30 %	||	3ms
   64.00KB	||	   56	||	  4	||	14.29%	||	 33.30 %	||	4ms
   64.00KB	||	   56	||	  5	||	14.29%	||	 33.30 %	||	3ms
   64.00KB	||	   60	||	  1	||	 6.67%	||	 33.30 %	||	4ms
   64.00KB	||	   60	||	  2	||	 6.67%	||	 33.30 %	||	3ms
   64.00KB	||	   60	||	  3	||	 6.67%	||	 33.30 %	||	4ms
   64.00KB	||	   60	||	  4	||	 6.67%	||	 33.30 %	||	3ms
   64.00KB	||	   60	||	  5	||	 6.67%	||	 33.30 %	||	4ms
   64.00KB	||	   64	||	  1	||	 0.00%	||	 33.30 %	||	3ms
   64.00KB	||	   64	||	  2	||	 0.00%	||	 33.30 %	||	3ms
   64.00KB	||	   64	||	  3	||	 0.00%	||	 33.30 %	||	4ms
   64.00KB	||	   64	||	  4	||	 0.00%	||	 33.30 %	||	3ms
   64.00KB	||	   64	||	  5	||	 0.00%	||	 33.30 %	||	4ms
  128.00KB	||	   24	||	  1	||	 0.00%	||	 49.99 %	||	44ms
  128.00KB	||	   24	||	  2	||	 0.00%	||	 49.99 %	||	44ms
  128.00KB	||	   24	||	  3	||	 0.00%	||	 49.99 %	||	43ms
  128.00KB	||	   24	||	  4	||	 0.00%	||	 49.99 %	||	46ms
  128.00KB	||	   24	||	  5	||	 0.00%	||	 49.99 %	||	43ms
  128.00KB	||	   28	||	  1	||	14.29%	||	 33.33 %	||	35ms
  128.00KB	||	   28	||	  2	||	14.29%	||	 33.33 %	||	34ms
  128.00KB	||	   28	||	  3	||	14.29%	||	 33.33 %	||	35ms
  128.00KB	||	   28	||	  4	||	14.29%	||	 33.33 %	||	35ms
  128.00KB	||	   28	||	  5	||	14.29%	||	 33.33 %	||	35ms
  128.00KB	||	   32	||	  1	||	 0.00%	||	 33.33 %	||	35ms
  128.00KB	||	   32	||	  2	||	 0.00%	||	 33.33 %	||	35ms
  128.00KB	||	   32	||	  3	||	 0.00%	||	 33.33 %	||	36ms
  128.00KB	||	   32	||	  4	||	 0.00%	||	 33.33 %	||	35ms
  128.00KB	||	   32	||	  5	||	 0.00%	||	 33.33 %	||	35ms
  128.00KB	||	   36	||	  1	||	33.33%	||	 50.01 %	||	11ms
  128.00KB	||	   36	||	  2	||	33.33%	||	 50.01 %	||	12ms
  128.00KB	||	   36	||	  3	||	33.33%	||	 50.01 %	||	13ms
  128.00KB	||	   36	||	  4	||	33.33%	||	 50.01 %	||	12ms
  128.00KB	||	   36	||	  5	||	33.33%	||	 50.01 %	||	12ms
  128.00KB	||	   40	||	  1	||	20.00%	||	 50.01 %	||	13ms
  128.00KB	||	   40	||	  2	||	20.00%	||	 50.01 %	||	12ms
  128.00KB	||	   40	||	  3	||	20.00%	||	 50.01 %	||	13ms
  128.00KB	||	   40	||	  4	||	20.00%	||	 50.01 %	||	12ms
  128.00KB	||	   40	||	  5	||	20.00%	||	 50.01 %	||	12ms
  128.00KB	||	   44	||	  1	||	 9.09%	||	 50.01 %	||	13ms
  128.00KB	||	   44	||	  2	||	 9.09%	||	 50.01 %	||	12ms
  128.00KB	||	   44	||	  3	||	 9.09%	||	 50.01 %	||	13ms
  128.00KB	||	   44	||	  4	||	 9.09%	||	 50.01 %	||	12ms
  128.00KB	||	   44	||	  5	||	 9.09%	||	 50.01 %	||	12ms
  128.00KB	||	   48	||	  1	||	 0.00%	||	 50.01 %	||	13ms
  128.00KB	||	   48	||	  2	||	 0.00%	||	 50.01 %	||	12ms
  128.00KB	||	   48	||	  3	||	 0.00%	||	 50.01 %	||	12ms
  128.00KB	||	   48	||	  4	||	 0.00%	||	 50.01 %	||	13ms
  128.00KB	||	   48	||	  5	||	 0.00%	||	 50.01 %	||	12ms
  128.00KB	||	   52	||	  1	||	23.08%	||	 33.35 %	||	11ms
  128.00KB	||	   52	||	  2	||	23.08%	||	 33.35 %	||	10ms
  128.00KB	||	   52	||	  3	||	23.08%	||	 33.35 %	||	10ms
  128.00KB	||	   52	||	  4	||	23.08%	||	 33.35 %	||	10ms
  128.00KB	||	   52	||	  5	||	23.08%	||	 33.35 %	||	10ms
  128.00KB	||	   56	||	  1	||	14.29%	||	 33.35 %	||	10ms
  128.00KB	||	   56	||	  2	||	14.29%	||	 33.35 %	||	10ms
  128.00KB	||	   56	||	  3	||	14.29%	||	 33.35 %	||	10ms
  128.00KB	||	   56	||	  4	||	14.29%	||	 33.35 %	||	10ms
  128.00KB	||	   56	||	  5	||	14.29%	||	 33.35 %	||	10ms
  128.00KB	||	   60	||	  1	||	 6.67%	||	 33.35 %	||	10ms
  128.00KB	||	   60	||	  2	||	 6.67%	||	 33.35 %	||	10ms
  128.00KB	||	   60	||	  3	||	 6.67%	||	 33.35 %	||	9ms
  128.00KB	||	   60	||	  4	||	 6.67%	||	 33.35 %	||	10ms
  128.00KB	||	   60	||	  5	||	 6.67%	||	 33.35 %	||	10ms
  128.00KB	||	   64	||	  1	||	 0.00%	||	 33.35 %	||	10ms
  128.00KB	||	   64	||	  2	||	 0.00%	||	 33.35 %	||	10ms
  128.00KB	||	   64	||	  3	||	 0.00%	||	 33.35 %	||	10ms
  128.00KB	||	   64	||	  4	||	 0.00%	||	 33.35 %	||	10ms
  128.00KB	||	   64	||	  5	||	 0.00%	||	 33.35 %	||	10ms
  256.00KB	||	   24	||	  1	||	 0.00%	||	 50.00 %	||	179ms
  256.00KB	||	   24	||	  2	||	 0.00%	||	 50.00 %	||	177ms
  256.00KB	||	   24	||	  3	||	 0.00%	||	 50.00 %	||	177ms
  256.00KB	||	   24	||	  4	||	 0.00%	||	 50.00 %	||	175ms
  256.00KB	||	   24	||	  5	||	 0.00%	||	 50.00 %	||	176ms
  256.00KB	||	   28	||	  1	||	14.29%	||	 33.34 %	||	148ms
  256.00KB	||	   28	||	  2	||	14.29%	||	 33.34 %	||	148ms
  256.00KB	||	   28	||	  3	||	14.29%	||	 33.34 %	||	145ms
  256.00KB	||	   28	||	  4	||	14.29%	||	 33.34 %	||	144ms
  256.00KB	||	   28	||	  5	||	14.29%	||	 33.34 %	||	146ms
  256.00KB	||	   32	||	  1	||	 0.00%	||	 33.34 %	||	146ms
  256.00KB	||	   32	||	  2	||	 0.00%	||	 33.34 %	||	145ms
  256.00KB	||	   32	||	  3	||	 0.00%	||	 33.34 %	||	146ms
  256.00KB	||	   32	||	  4	||	 0.00%	||	 33.34 %	||	148ms
  256.00KB	||	   32	||	  5	||	 0.00%	||	 33.34 %	||	147ms
  256.00KB	||	   36	||	  1	||	33.33%	||	 49.99 %	||	44ms
  256.00KB	||	   36	||	  2	||	33.33%	||	 49.99 %	||	43ms
  256.00KB	||	   36	||	  3	||	33.33%	||	 49.99 %	||	44ms
  256.00KB	||	   36	||	  4	||	33.33%	||	 49.99 %	||	43ms
  256.00KB	||	   36	||	  5	||	33.33%	||	 49.99 %	||	43ms
  256.00KB	||	   40	||	  1	||	20.00%	||	 49.99 %	||	43ms
  256.00KB	||	   40	||	  2	||	20.00%	||	 49.99 %	||	44ms
  256.00KB	||	   40	||	  3	||	20.00%	||	 49.99 %	||	43ms
  256.00KB	||	   40	||	  4	||	20.00%	||	 49.99 %	||	43ms
  256.00KB	||	   40	||	  5	||	20.00%	||	 49.99 %	||	44ms
  256.00KB	||	   44	||	  1	||	 9.09%	||	 49.99 %	||	44ms
  256.00KB	||	   44	||	  2	||	 9.09%	||	 49.99 %	||	43ms
  256.00KB	||	   44	||	  3	||	 9.09%	||	 49.99 %	||	43ms
  256.00KB	||	   44	||	  4	||	 9.09%	||	 49.99 %	||	43ms
  256.00KB	||	   44	||	  5	||	 9.09%	||	 49.99 %	||	43ms
  256.00KB	||	   48	||	  1	||	 0.00%	||	 49.99 %	||	44ms
  256.00KB	||	   48	||	  2	||	 0.00%	||	 49.99 %	||	43ms
  256.00KB	||	   48	||	  3	||	 0.00%	||	 49.99 %	||	44ms
  256.00KB	||	   48	||	  4	||	 0.00%	||	 49.99 %	||	47ms
  256.00KB	||	   48	||	  5	||	 0.00%	||	 49.99 %	||	43ms
  256.00KB	||	   52	||	  1	||	23.08%	||	 33.33 %	||	36ms
  256.00KB	||	   52	||	  2	||	23.08%	||	 33.33 %	||	34ms
  256.00KB	||	   52	||	  3	||	23.08%	||	 33.33 %	||	35ms
  256.00KB	||	   52	||	  4	||	23.08%	||	 33.33 %	||	35ms
  256.00KB	||	   52	||	  5	||	23.08%	||	 33.33 %	||	34ms
  256.00KB	||	   56	||	  1	||	14.29%	||	 33.33 %	||	35ms
  256.00KB	||	   56	||	  2	||	14.29%	||	 33.33 %	||	36ms
  256.00KB	||	   56	||	  3	||	14.29%	||	 33.33 %	||	36ms
  256.00KB	||	   56	||	  4	||	14.29%	||	 33.33 %	||	36ms
  256.00KB	||	   56	||	  5	||	14.29%	||	 33.33 %	||	35ms
  256.00KB	||	   60	||	  1	||	 6.67%	||	 33.33 %	||	36ms
  256.00KB	||	   60	||	  2	||	 6.67%	||	 33.33 %	||	36ms
  256.00KB	||	   60	||	  3	||	 6.67%	||	 33.33 %	||	35ms
  256.00KB	||	   60	||	  4	||	 6.67%	||	 33.33 %	||	36ms
  256.00KB	||	   60	||	  5	||	 6.67%	||	 33.33 %	||	35ms
  256.00KB	||	   64	||	  1	||	 0.00%	||	 33.33 %	||	35ms
  256.00KB	||	   64	||	  2	||	 0.00%	||	 33.33 %	||	36ms
  256.00KB	||	   64	||	  3	||	 0.00%	||	 33.33 %	||	36ms
  256.00KB	||	   64	||	  4	||	 0.00%	||	 33.33 %	||	35ms
  256.00KB	||	   64	||	  5	||	 0.00%	||	 33.33 %	||	35ms
  512.00KB	||	   24	||	  1	||	 0.00%	||	 50.00 %	||	703ms
  512.00KB	||	   24	||	  2	||	 0.00%	||	 50.00 %	||	682ms
  512.00KB	||	   24	||	  3	||	 0.00%	||	 50.00 %	||	675ms
  512.00KB	||	   24	||	  4	||	 0.00%	||	 50.00 %	||	683ms
  512.00KB	||	   24	||	  5	||	 0.00%	||	 50.00 %	||	683ms
  512.00KB	||	   28	||	  1	||	14.29%	||	 33.33 %	||	571ms
  512.00KB	||	   28	||	  2	||	14.29%	||	 33.33 %	||	655ms
  512.00KB	||	   28	||	  3	||	14.29%	||	 33.33 %	||	588ms
  512.00KB	||	   28	||	  4	||	14.29%	||	 33.33 %	||	579ms
  512.00KB	||	   28	||	  5	||	14.29%	||	 33.33 %	||	582ms
  512.00KB	||	   32	||	  1	||	 0.00%	||	 33.33 %	||	584ms
  512.00KB	||	   32	||	  2	||	 0.00%	||	 33.33 %	||	586ms
  512.00KB	||	   32	||	  3	||	 0.00%	||	 33.33 %	||	574ms
  512.00KB	||	   32	||	  4	||	 0.00%	||	 33.33 %	||	572ms
  512.00KB	||	   32	||	  5	||	 0.00%	||	 33.33 %	||	575ms
  512.00KB	||	   36	||	  1	||	33.33%	||	 50.00 %	||	174ms
  512.00KB	||	   36	||	  2	||	33.33%	||	 50.00 %	||	179ms
  512.00KB	||	   36	||	  3	||	33.33%	||	 50.00 %	||	180ms
  512.00KB	||	   36	||	  4	||	33.33%	||	 50.00 %	||	180ms
  512.00KB	||	   36	||	  5	||	33.33%	||	 50.00 %	||	177ms
  512.00KB	||	   40	||	  1	||	20.00%	||	 50.00 %	||	178ms
  512.00KB	||	   40	||	  2	||	20.00%	||	 50.00 %	||	177ms
  512.00KB	||	   40	||	  3	||	20.00%	||	 50.00 %	||	176ms
  512.00KB	||	   40	||	  4	||	20.00%	||	 50.00 %	||	177ms
  512.00KB	||	   40	||	  5	||	20.00%	||	 50.00 %	||	176ms
  512.00KB	||	   44	||	  1	||	 9.09%	||	 50.00 %	||	178ms
  512.00KB	||	   44	||	  2	||	 9.09%	||	 50.00 %	||	176ms
  512.00KB	||	   44	||	  3	||	 9.09%	||	 50.00 %	||	176ms
  512.00KB	||	   44	||	  4	||	 9.09%	||	 50.00 %	||	176ms
  512.00KB	||	   44	||	  5	||	 9.09%	||	 50.00 %	||	177ms
  512.00KB	||	   48	||	  1	||	 0.00%	||	 50.00 %	||	176ms
  512.00KB	||	   48	||	  2	||	 0.00%	||	 50.00 %	||	180ms
  512.00KB	||	   48	||	  3	||	 0.00%	||	 50.00 %	||	178ms
  512.00KB	||	   48	||	  4	||	 0.00%	||	 50.00 %	||	179ms
  512.00KB	||	   48	||	  5	||	 0.00%	||	 50.00 %	||	176ms
  512.00KB	||	   52	||	  1	||	23.08%	||	 33.34 %	||	146ms
  512.00KB	||	   52	||	  2	||	23.08%	||	 33.34 %	||	148ms
  512.00KB	||	   52	||	  3	||	23.08%	||	 33.34 %	||	148ms
  512.00KB	||	   52	||	  4	||	23.08%	||	 33.34 %	||	145ms
  512.00KB	||	   52	||	  5	||	23.08%	||	 33.34 %	||	146ms
  512.00KB	||	   56	||	  1	||	14.29%	||	 33.34 %	||	144ms
  512.00KB	||	   56	||	  2	||	14.29%	||	 33.34 %	||	146ms
  512.00KB	||	   56	||	  3	||	14.29%	||	 33.34 %	||	144ms
  512.00KB	||	   56	||	  4	||	14.29%	||	 33.34 %	||	145ms
  512.00KB	||	   56	||	  5	||	14.29%	||	 33.34 %	||	149ms
  512.00KB	||	   60	||	  1	||	 6.67%	||	 33.34 %	||	143ms
  512.00KB	||	   60	||	  2	||	 6.67%	||	 33.34 %	||	146ms
  512.00KB	||	   60	||	  3	||	 6.67%	||	 33.34 %	||	146ms
  512.00KB	||	   60	||	  4	||	 6.67%	||	 33.34 %	||	147ms
  512.00KB	||	   60	||	  5	||	 6.67%	||	 33.34 %	||	147ms
  512.00KB	||	   64	||	  1	||	 0.00%	||	 33.34 %	||	146ms
  512.00KB	||	   64	||	  2	||	 0.00%	||	 33.34 %	||	150ms
  512.00KB	||	   64	||	  3	||	 0.00%	||	 33.34 %	||	147ms
  512.00KB	||	   64	||	  4	||	 0.00%	||	 33.34 %	||	147ms
  512.00KB	||	   64	||	  5	||	 0.00%	||	 33.34 %	||	148ms
 1024.00KB	||	   24	||	  1	||	 0.00%	||	 50.00 %	||	2636ms
 1024.00KB	||	   24	||	  2	||	 0.00%	||	 50.00 %	||	2622ms
 1024.00KB	||	   24	||	  3	||	 0.00%	||	 50.00 %	||	2631ms
 1024.00KB	||	   24	||	  4	||	 0.00%	||	 50.00 %	||	2610ms
 1024.00KB	||	   24	||	  5	||	 0.00%	||	 50.00 %	||	2652ms
 1024.00KB	||	   28	||	  1	||	14.29%	||	 33.33 %	||	2276ms
 1024.00KB	||	   28	||	  2	||	14.29%	||	 33.33 %	||	2312ms
 1024.00KB	||	   28	||	  3	||	14.29%	||	 33.33 %	||	2259ms
 1024.00KB	||	   28	||	  4	||	14.29%	||	 33.33 %	||	2261ms
 1024.00KB	||	   28	||	  5	||	14.29%	||	 33.33 %	||	2257ms
 1024.00KB	||	   32	||	  1	||	 0.00%	||	 33.33 %	||	2275ms
 1024.00KB	||	   32	||	  2	||	 0.00%	||	 33.33 %	||	2300ms
 1024.00KB	||	   32	||	  3	||	 0.00%	||	 33.33 %	||	2315ms
 1024.00KB	||	   32	||	  4	||	 0.00%	||	 33.33 %	||	2311ms
 1024.00KB	||	   32	||	  5	||	 0.00%	||	 33.33 %	||	2306ms
 1024.00KB	||	   36	||	  1	||	33.33%	||	 50.00 %	||	691ms
 1024.00KB	||	   36	||	  2	||	33.33%	||	 50.00 %	||	687ms
 1024.00KB	||	   36	||	  3	||	33.33%	||	 50.00 %	||	692ms
 1024.00KB	||	   36	||	  4	||	33.33%	||	 50.00 %	||	680ms
 1024.00KB	||	   36	||	  5	||	33.33%	||	 50.00 %	||	683ms
 1024.00KB	||	   40	||	  1	||	20.00%	||	 50.00 %	||	677ms
 1024.00KB	||	   40	||	  2	||	20.00%	||	 50.00 %	||	678ms
 1024.00KB	||	   40	||	  3	||	20.00%	||	 50.00 %	||	674ms
 1024.00KB	||	   40	||	  4	||	20.00%	||	 50.00 %	||	683ms
 1024.00KB	||	   40	||	  5	||	20.00%	||	 50.00 %	||	681ms
 1024.00KB	||	   44	||	  1	||	 9.09%	||	 50.00 %	||	676ms
 1024.00KB	||	   44	||	  2	||	 9.09%	||	 50.00 %	||	671ms
 1024.00KB	||	   44	||	  3	||	 9.09%	||	 50.00 %	||	685ms
 1024.00KB	||	   44	||	  4	||	 9.09%	||	 50.00 %	||	684ms
 1024.00KB	||	   44	||	  5	||	 9.09%	||	 50.00 %	||	680ms
 1024.00KB	||	   48	||	  1	||	 0.00%	||	 50.00 %	||	674ms
 1024.00KB	||	   48	||	  2	||	 0.00%	||	 50.00 %	||	681ms
 1024.00KB	||	   48	||	  3	||	 0.00%	||	 50.00 %	||	680ms
 1024.00KB	||	   48	||	  4	||	 0.00%	||	 50.00 %	||	737ms
 1024.00KB	||	   48	||	  5	||	 0.00%	||	 50.00 %	||	689ms
 1024.00KB	||	   52	||	  1	||	23.08%	||	 33.33 %	||	587ms
 1024.00KB	||	   52	||	  2	||	23.08%	||	 33.33 %	||	581ms
 1024.00KB	||	   52	||	  3	||	23.08%	||	 33.33 %	||	586ms
 1024.00KB	||	   52	||	  4	||	23.08%	||	 33.33 %	||	594ms
 1024.00KB	||	   52	||	  5	||	23.08%	||	 33.33 %	||	581ms
 1024.00KB	||	   56	||	  1	||	14.29%	||	 33.33 %	||	577ms
 1024.00KB	||	   56	||	  2	||	14.29%	||	 33.33 %	||	583ms
 1024.00KB	||	   56	||	  3	||	14.29%	||	 33.33 %	||	575ms
 1024.00KB	||	   56	||	  4	||	14.29%	||	 33.33 %	||	576ms
 1024.00KB	||	   56	||	  5	||	14.29%	||	 33.33 %	||	586ms
 1024.00KB	||	   60	||	  1	||	 6.67%	||	 33.33 %	||	591ms
 1024.00KB	||	   60	||	  2	||	 6.67%	||	 33.33 %	||	592ms
 1024.00KB	||	   60	||	  3	||	 6.67%	||	 33.33 %	||	583ms
 1024.00KB	||	   60	||	  4	||	 6.67%	||	 33.33 %	||	588ms
 1024.00KB	||	   60	||	  5	||	 6.67%	||	 33.33 %	||	589ms
 1024.00KB	||	   64	||	  1	||	 0.00%	||	 33.33 %	||	583ms
 1024.00KB	||	   64	||	  2	||	 0.00%	||	 33.33 %	||	585ms
 1024.00KB	||	   64	||	  3	||	 0.00%	||	 33.33 %	||	581ms
 1024.00KB	||	   64	||	  4	||	 0.00%	||	 33.33 %	||	589ms
 1024.00KB	||	   64	||	  5	||	 0.00%	||	 33.33 %	||	581ms
    2.00MB	||	   48	||	  1	||	 0.00%	||	 50.00 %	||	2660ms
    2.00MB	||	   48	||	  2	||	 0.00%	||	 50.00 %	||	2638ms
    2.00MB	||	   48	||	  3	||	 0.00%	||	 50.00 %	||	2688ms
    2.00MB	||	   48	||	  4	||	 0.00%	||	 50.00 %	||	2650ms
    2.00MB	||	   48	||	  5	||	 0.00%	||	 50.00 %	||	2672ms
    2.00MB	||	   56	||	  1	||	14.29%	||	 33.33 %	||	2299ms
    2.00MB	||	   56	||	  2	||	14.29%	||	 33.33 %	||	2258ms
    2.00MB	||	   56	||	  3	||	14.29%	||	 33.33 %	||	2371ms
    2.00MB	||	   56	||	  4	||	14.29%	||	 33.33 %	||	2319ms
    2.00MB	||	   56	||	  5	||	14.29%	||	 33.33 %	||	2338ms
    2.00MB	||	   64	||	  1	||	 0.00%	||	 33.33 %	||	2280ms
    2.00MB	||	   64	||	  2	||	 0.00%	||	 33.33 %	||	2294ms
    2.00MB	||	   64	||	  3	||	 0.00%	||	 33.33 %	||	2282ms
    2.00MB	||	   64	||	  4	||	 0.00%	||	 33.33 %	||	2266ms
    2.00MB	||	   64	||	  5	||	 0.00%	||	 33.33 %	||	2302ms
    2.00MB	||	   72	||	  1	||	33.33%	||	 50.00 %	||	673ms
    2.00MB	||	   72	||	  2	||	33.33%	||	 50.00 %	||	675ms
    2.00MB	||	   72	||	  3	||	33.33%	||	 50.00 %	||	679ms
    2.00MB	||	   72	||	  4	||	33.33%	||	 50.00 %	||	679ms
    2.00MB	||	   72	||	  5	||	33.33%	||	 50.00 %	||	682ms
    2.00MB	||	   80	||	  1	||	20.00%	||	 50.00 %	||	692ms
    2.00MB	||	   80	||	  2	||	20.00%	||	 50.00 %	||	686ms
    2.00MB	||	   80	||	  3	||	20.00%	||	 50.00 %	||	683ms
    2.00MB	||	   80	||	  4	||	20.00%	||	 50.00 %	||	695ms
    2.00MB	||	   80	||	  5	||	20.00%	||	 50.00 %	||	686ms
    2.00MB	||	   88	||	  1	||	 9.09%	||	 50.00 %	||	686ms
    2.00MB	||	   88	||	  2	||	 9.09%	||	 50.00 %	||	673ms
    2.00MB	||	   88	||	  3	||	 9.09%	||	 50.00 %	||	680ms
    2.00MB	||	   88	||	  4	||	 9.09%	||	 50.00 %	||	682ms
    2.00MB	||	   88	||	  5	||	 9.09%	||	 50.00 %	||	690ms
    2.00MB	||	   96	||	  1	||	 0.00%	||	 50.00 %	||	747ms
    2.00MB	||	   96	||	  2	||	 0.00%	||	 50.00 %	||	683ms
    2.00MB	||	   96	||	  3	||	 0.00%	||	 50.00 %	||	682ms
    2.00MB	||	   96	||	  4	||	 0.00%	||	 50.00 %	||	685ms
    2.00MB	||	   96	||	  5	||	 0.00%	||	 50.00 %	||	702ms
    2.00MB	||	  104	||	  1	||	23.08%	||	 33.33 %	||	585ms
    2.00MB	||	  104	||	  2	||	23.08%	||	 33.33 %	||	586ms
    2.00MB	||	  104	||	  3	||	23.08%	||	 33.33 %	||	584ms
    2.00MB	||	  104	||	  4	||	23.08%	||	 33.33 %	||	589ms
    2.00MB	||	  104	||	  5	||	23.08%	||	 33.33 %	||	583ms
    2.00MB	||	  112	||	  1	||	14.29%	||	 33.33 %	||	583ms
    2.00MB	||	  112	||	  2	||	14.29%	||	 33.33 %	||	586ms
    2.00MB	||	  112	||	  3	||	14.29%	||	 33.33 %	||	581ms
    2.00MB	||	  112	||	  4	||	14.29%	||	 33.33 %	||	584ms
    2.00MB	||	  112	||	  5	||	14.29%	||	 33.33 %	||	589ms
    2.00MB	||	  120	||	  1	||	 6.67%	||	 33.33 %	||	585ms
    2.00MB	||	  120	||	  2	||	 6.67%	||	 33.33 %	||	590ms
    2.00MB	||	  120	||	  3	||	 6.67%	||	 33.33 %	||	572ms
    2.00MB	||	  120	||	  4	||	 6.67%	||	 33.33 %	||	579ms
    2.00MB	||	  120	||	  5	||	 6.67%	||	 33.33 %	||	579ms
    2.00MB	||	  128	||	  1	||	 0.00%	||	 33.33 %	||	578ms
    2.00MB	||	  128	||	  2	||	 0.00%	||	 33.33 %	||	587ms
    2.00MB	||	  128	||	  3	||	 0.00%	||	 33.33 %	||	586ms
    2.00MB	||	  128	||	  4	||	 0.00%	||	 33.33 %	||	584ms
    2.00MB	||	  128	||	  5	||	 0.00%	||	 33.33 %	||	584ms
    4.00MB	||	   96	||	  1	||	 0.00%	||	 50.00 %	||	2654ms
    4.00MB	||	   96	||	  2	||	 0.00%	||	 50.00 %	||	2646ms
    4.00MB	||	   96	||	  3	||	 0.00%	||	 50.00 %	||	2663ms
    4.00MB	||	   96	||	  4	||	 0.00%	||	 50.00 %	||	2639ms
    4.00MB	||	   96	||	  5	||	 0.00%	||	 50.00 %	||	2653ms
    4.00MB	||	  112	||	  1	||	14.29%	||	 33.33 %	||	2258ms
    4.00MB	||	  112	||	  2	||	14.29%	||	 33.33 %	||	2281ms
    4.00MB	||	  112	||	  3	||	14.29%	||	 33.33 %	||	2282ms
    4.00MB	||	  112	||	  4	||	14.29%	||	 33.33 %	||	2275ms
    4.00MB	||	  112	||	  5	||	14.29%	||	 33.33 %	||	2261ms
    4.00MB	||	  128	||	  1	||	 0.00%	||	 33.33 %	||	2264ms
    4.00MB	||	  128	||	  2	||	 0.00%	||	 33.33 %	||	2238ms
    4.00MB	||	  128	||	  3	||	 0.00%	||	 33.33 %	||	2281ms
    4.00MB	||	  128	||	  4	||	 0.00%	||	 33.33 %	||	2269ms
    4.00MB	||	  128	||	  5	||	 0.00%	||	 33.33 %	||	2286ms
    4.00MB	||	  144	||	  1	||	33.33%	||	 50.00 %	||	675ms
    4.00MB	||	  144	||	  2	||	33.33%	||	 50.00 %	||	674ms
    4.00MB	||	  144	||	  3	||	33.33%	||	 50.00 %	||	680ms
    4.00MB	||	  144	||	  4	||	33.33%	||	 50.00 %	||	688ms
    4.00MB	||	  144	||	  5	||	33.33%	||	 50.00 %	||	690ms
    4.00MB	||	  160	||	  1	||	20.00%	||	 50.00 %	||	686ms
    4.00MB	||	  160	||	  2	||	20.00%	||	 50.00 %	||	680ms
    4.00MB	||	  160	||	  3	||	20.00%	||	 50.00 %	||	673ms
    4.00MB	||	  160	||	  4	||	20.00%	||	 50.00 %	||	677ms
    4.00MB	||	  160	||	  5	||	20.00%	||	 50.00 %	||	687ms
    4.00MB	||	  176	||	  1	||	 9.09%	||	 50.00 %	||	691ms
    4.00MB	||	  176	||	  2	||	 9.09%	||	 50.00 %	||	687ms
    4.00MB	||	  176	||	  3	||	 9.09%	||	 50.00 %	||	688ms
    4.00MB	||	  176	||	  4	||	 9.09%	||	 50.00 %	||	870ms
    4.00MB	||	  176	||	  5	||	 9.09%	||	 50.00 %	||	722ms
    4.00MB	||	  192	||	  1	||	 0.00%	||	 50.00 %	||	710ms
    4.00MB	||	  192	||	  2	||	 0.00%	||	 50.00 %	||	691ms
    4.00MB	||	  192	||	  3	||	 0.00%	||	 50.00 %	||	684ms
    4.00MB	||	  192	||	  4	||	 0.00%	||	 50.00 %	||	706ms
    4.00MB	||	  192	||	  5	||	 0.00%	||	 50.00 %	||	715ms
    4.00MB	||	  208	||	  1	||	23.08%	||	 33.33 %	||	599ms
    4.00MB	||	  208	||	  2	||	23.08%	||	 33.33 %	||	586ms
    4.00MB	||	  208	||	  3	||	23.08%	||	 33.33 %	||	586ms
    4.00MB	||	  208	||	  4	||	23.08%	||	 33.33 %	||	588ms
    4.00MB	||	  208	||	  5	||	23.08%	||	 33.33 %	||	586ms
    4.00MB	||	  224	||	  1	||	14.29%	||	 33.33 %	||	583ms
    4.00MB	||	  224	||	  2	||	14.29%	||	 33.33 %	||	577ms
    4.00MB	||	  224	||	  3	||	14.29%	||	 33.33 %	||	583ms
    4.00MB	||	  224	||	  4	||	14.29%	||	 33.33 %	||	581ms
    4.00MB	||	  224	||	  5	||	14.29%	||	 33.33 %	||	581ms
    4.00MB	||	  240	||	  1	||	 6.67%	||	 33.33 %	||	585ms
    4.00MB	||	  240	||	  2	||	 6.67%	||	 33.33 %	||	582ms
    4.00MB	||	  240	||	  3	||	 6.67%	||	 33.33 %	||	592ms
    4.00MB	||	  240	||	  4	||	 6.67%	||	 33.33 %	||	578ms
    4.00MB	||	  240	||	  5	||	 6.67%	||	 33.33 %	||	591ms
    4.00MB	||	  256	||	  1	||	 0.00%	||	 33.33 %	||	593ms
    4.00MB	||	  256	||	  2	||	 0.00%	||	 33.33 %	||	576ms
    4.00MB	||	  256	||	  3	||	 0.00%	||	 33.33 %	||	584ms
    4.00MB	||	  256	||	  4	||	 0.00%	||	 33.33 %	||	588ms
    4.00MB	||	  256	||	  5	||	 0.00%	||	 33.33 %	||	584ms
    8.00MB	||	  192	||	  1	||	 0.00%	||	 50.00 %	||	2666ms
    8.00MB	||	  192	||	  2	||	 0.00%	||	 50.00 %	||	2717ms
    8.00MB	||	  192	||	  3	||	 0.00%	||	 50.00 %	||	2662ms
    8.00MB	||	  192	||	  4	||	 0.00%	||	 50.00 %	||	2671ms
    8.00MB	||	  192	||	  5	||	 0.00%	||	 50.00 %	||	2714ms
    8.00MB	||	  224	||	  1	||	14.29%	||	 33.33 %	||	2283ms
    8.00MB	||	  224	||	  2	||	14.29%	||	 33.33 %	||	2281ms
    8.00MB	||	  224	||	  3	||	14.29%	||	 33.33 %	||	2290ms
    8.00MB	||	  224	||	  4	||	14.29%	||	 33.33 %	||	2306ms
    8.00MB	||	  224	||	  5	||	14.29%	||	 33.33 %	||	2298ms
    8.00MB	||	  256	||	  1	||	 0.00%	||	 33.33 %	||	2289ms
    8.00MB	||	  256	||	  2	||	 0.00%	||	 33.33 %	||	2280ms
    8.00MB	||	  256	||	  3	||	 0.00%	||	 33.33 %	||	2291ms
    8.00MB	||	  256	||	  4	||	 0.00%	||	 33.33 %	||	2296ms
    8.00MB	||	  256	||	  5	||	 0.00%	||	 33.33 %	||	2309ms
    8.00MB	||	  288	||	  1	||	33.33%	||	 50.00 %	||	686ms
    8.00MB	||	  288	||	  2	||	33.33%	||	 50.00 %	||	681ms
    8.00MB	||	  288	||	  3	||	33.33%	||	 50.00 %	||	680ms
    8.00MB	||	  288	||	  4	||	33.33%	||	 50.00 %	||	697ms
    8.00MB	||	  288	||	  5	||	33.33%	||	 50.00 %	||	694ms
    8.00MB	||	  320	||	  1	||	20.00%	||	 50.00 %	||	695ms
    8.00MB	||	  320	||	  2	||	20.00%	||	 50.00 %	||	689ms
    8.00MB	||	  320	||	  3	||	20.00%	||	 50.00 %	||	692ms
    8.00MB	||	  320	||	  4	||	20.00%	||	 50.00 %	||	688ms
    8.00MB	||	  320	||	  5	||	20.00%	||	 50.00 %	||	686ms
    8.00MB	||	  352	||	  1	||	 9.09%	||	 50.00 %	||	769ms
    8.00MB	||	  352	||	  2	||	 9.09%	||	 50.00 %	||	693ms
    8.00MB	||	  352	||	  3	||	 9.09%	||	 50.00 %	||	679ms
    8.00MB	||	  352	||	  4	||	 9.09%	||	 50.00 %	||	687ms
    8.00MB	||	  352	||	  5	||	 9.09%	||	 50.00 %	||	688ms
    8.00MB	||	  384	||	  1	||	 0.00%	||	 50.00 %	||	683ms
    8.00MB	||	  384	||	  2	||	 0.00%	||	 50.00 %	||	685ms
    8.00MB	||	  384	||	  3	||	 0.00%	||	 50.00 %	||	684ms
    8.00MB	||	  384	||	  4	||	 0.00%	||	 50.00 %	||	702ms
    8.00MB	||	  384	||	  5	||	 0.00%	||	 50.00 %	||	697ms
    8.00MB	||	  416	||	  1	||	23.08%	||	 33.33 %	||	594ms
    8.00MB	||	  416	||	  2	||	23.08%	||	 33.33 %	||	581ms
    8.00MB	||	  416	||	  3	||	23.08%	||	 33.33 %	||	585ms
    8.00MB	||	  416	||	  4	||	23.08%	||	 33.33 %	||	586ms
    8.00MB	||	  416	||	  5	||	23.08%	||	 33.33 %	||	587ms
    8.00MB	||	  448	||	  1	||	14.29%	||	 33.33 %	||	591ms
    8.00MB	||	  448	||	  2	||	14.29%	||	 33.33 %	||	587ms
    8.00MB	||	  448	||	  3	||	14.29%	||	 33.33 %	||	586ms
    8.00MB	||	  448	||	  4	||	14.29%	||	 33.33 %	||	588ms
    8.00MB	||	  448	||	  5	||	14.29%	||	 33.33 %	||	590ms
    8.00MB	||	  480	||	  1	||	 6.67%	||	 33.33 %	||	584ms
    8.00MB	||	  480	||	  2	||	 6.67%	||	 33.33 %	||	587ms
    8.00MB	||	  480	||	  3	||	 6.67%	||	 33.33 %	||	589ms
    8.00MB	||	  480	||	  4	||	 6.67%	||	 33.33 %	||	590ms
    8.00MB	||	  480	||	  5	||	 6.67%	||	 33.33 %	||	586ms
    8.00MB	||	  512	||	  1	||	 0.00%	||	 33.33 %	||	592ms
    8.00MB	||	  512	||	  2	||	 0.00%	||	 33.33 %	||	584ms
    8.00MB	||	  512	||	  3	||	 0.00%	||	 33.33 %	||	580ms
    8.00MB	||	  512	||	  4	||	 0.00%	||	 33.33 %	||	580ms
    8.00MB	||	  512	||	  5	||	 0.00%	||	 33.33 %	||	585ms
   16.00MB	||	  384	||	  1	||	 0.00%	||	 50.00 %	||	2659ms
   16.00MB	||	  384	||	  2	||	 0.00%	||	 50.00 %	||	2624ms
   16.00MB	||	  384	||	  3	||	 0.00%	||	 50.00 %	||	2647ms
   16.00MB	||	  384	||	  4	||	 0.00%	||	 50.00 %	||	2682ms
   16.00MB	||	  384	||	  5	||	 0.00%	||	 50.00 %	||	2695ms
   16.00MB	||	  448	||	  1	||	14.29%	||	 33.33 %	||	2286ms
   16.00MB	||	  448	||	  2	||	14.29%	||	 33.33 %	||	2315ms
   16.00MB	||	  448	||	  3	||	14.29%	||	 33.33 %	||	2309ms
   16.00MB	||	  448	||	  4	||	14.29%	||	 33.33 %	||	2298ms
   16.00MB	||	  448	||	  5	||	14.29%	||	 33.33 %	||	2296ms
   16.00MB	||	  512	||	  1	||	 0.00%	||	 33.33 %	||	2296ms
   16.00MB	||	  512	||	  2	||	 0.00%	||	 33.33 %	||	2297ms
   16.00MB	||	  512	||	  3	||	 0.00%	||	 33.33 %	||	2278ms
   16.00MB	||	  512	||	  4	||	 0.00%	||	 33.33 %	||	2319ms
   16.00MB	||	  512	||	  5	||	 0.00%	||	 33.33 %	||	2297ms
   16.00MB	||	  576	||	  1	||	33.33%	||	 50.00 %	||	691ms
   16.00MB	||	  576	||	  2	||	33.33%	||	 50.00 %	||	691ms
   16.00MB	||	  576	||	  3	||	33.33%	||	 50.00 %	||	719ms
   16.00MB	||	  576	||	  4	||	33.33%	||	 50.00 %	||	699ms
   16.00MB	||	  576	||	  5	||	33.33%	||	 50.00 %	||	695ms
   16.00MB	||	  640	||	  1	||	20.00%	||	 50.00 %	||	693ms
   16.00MB	||	  640	||	  2	||	20.00%	||	 50.00 %	||	696ms
   16.00MB	||	  640	||	  3	||	20.00%	||	 50.00 %	||	760ms
   16.00MB	||	  640	||	  4	||	20.00%	||	 50.00 %	||	715ms
   16.00MB	||	  640	||	  5	||	20.00%	||	 50.00 %	||	693ms
   16.00MB	||	  704	||	  1	||	 9.09%	||	 50.00 %	||	692ms
   16.00MB	||	  704	||	  2	||	 9.09%	||	 50.00 %	||	697ms
   16.00MB	||	  704	||	  3	||	 9.09%	||	 50.00 %	||	697ms
   16.00MB	||	  704	||	  4	||	 9.09%	||	 50.00 %	||	697ms
   16.00MB	||	  704	||	  5	||	 9.09%	||	 50.00 %	||	688ms
   16.00MB	||	  768	||	  1	||	 0.00%	||	 50.00 %	||	691ms
   16.00MB	||	  768	||	  2	||	 0.00%	||	 50.00 %	||	693ms
   16.00MB	||	  768	||	  3	||	 0.00%	||	 50.00 %	||	694ms
   16.00MB	||	  768	||	  4	||	 0.00%	||	 50.00 %	||	687ms
   16.00MB	||	  768	||	  5	||	 0.00%	||	 50.00 %	||	681ms
   16.00MB	||	  832	||	  1	||	23.08%	||	 33.33 %	||	589ms
   16.00MB	||	  832	||	  2	||	23.08%	||	 33.33 %	||	585ms
   16.00MB	||	  832	||	  3	||	23.08%	||	 33.33 %	||	586ms
   16.00MB	||	  832	||	  4	||	23.08%	||	 33.33 %	||	592ms
   16.00MB	||	  832	||	  5	||	23.08%	||	 33.33 %	||	591ms
   16.00MB	||	  896	||	  1	||	14.29%	||	 33.33 %	||	594ms
   16.00MB	||	  896	||	  2	||	14.29%	||	 33.33 %	||	580ms
   16.00MB	||	  896	||	  3	||	14.29%	||	 33.33 %	||	586ms
   16.00MB	||	  896	||	  4	||	14.29%	||	 33.33 %	||	588ms
   16.00MB	||	  896	||	  5	||	14.29%	||	 33.33 %	||	592ms
   16.00MB	||	  960	||	  1	||	 6.67%	||	 33.33 %	||	586ms
   16.00MB	||	  960	||	  2	||	 6.67%	||	 33.33 %	||	597ms
   16.00MB	||	  960	||	  3	||	 6.67%	||	 33.33 %	||	588ms
   16.00MB	||	  960	||	  4	||	 6.67%	||	 33.33 %	||	585ms
   16.00MB	||	  960	||	  5	||	 6.67%	||	 33.33 %	||	583ms
   16.00MB	||	 1024	||	  1	||	 0.00%	||	 33.33 %	||	582ms
   16.00MB	||	 1024	||	  2	||	 0.00%	||	 33.33 %	||	582ms
   16.00MB	||	 1024	||	  3	||	 0.00%	||	 33.33 %	||	590ms
   16.00MB	||	 1024	||	  4	||	 0.00%	||	 33.33 %	||	587ms
   16.00MB	||	 1024	||	  5	||	 0.00%	||	 33.33 %	||	582ms
   32.00MB	||	  768	||	  1	||	 0.00%	||	 50.00 %	||	2672ms
   32.00MB	||	  768	||	  2	||	 0.00%	||	 50.00 %	||	2671ms
   32.00MB	||	  768	||	  3	||	 0.00%	||	 50.00 %	||	2673ms
   32.00MB	||	  768	||	  4	||	 0.00%	||	 50.00 %	||	2671ms
   32.00MB	||	  768	||	  5	||	 0.00%	||	 50.00 %	||	2666ms
   32.00MB	||	  896	||	  1	||	14.29%	||	 33.33 %	||	2293ms
   32.00MB	||	  896	||	  2	||	14.29%	||	 33.33 %	||	2280ms
   32.00MB	||	  896	||	  3	||	14.29%	||	 33.33 %	||	2297ms
   32.00MB	||	  896	||	  4	||	14.29%	||	 33.33 %	||	2275ms
   32.00MB	||	  896	||	  5	||	14.29%	||	 33.33 %	||	2295ms
   32.00MB	||	 1024	||	  1	||	 0.00%	||	 33.33 %	||	2303ms
   32.00MB	||	 1024	||	  2	||	 0.00%	||	 33.33 %	||	2256ms
   32.00MB	||	 1024	||	  3	||	 0.00%	||	 33.33 %	||	2295ms
   32.00MB	||	 1024	||	  4	||	 0.00%	||	 33.33 %	||	2286ms
   32.00MB	||	 1024	||	  5	||	 0.00%	||	 33.33 %	||	2264ms
   32.00MB	||	 1152	||	  1	||	33.33%	||	 50.00 %	||	727ms
   32.00MB	||	 1152	||	  2	||	33.33%	||	 50.00 %	||	692ms
   32.00MB	||	 1152	||	  3	||	33.33%	||	 50.00 %	||	692ms
   32.00MB	||	 1152	||	  4	||	33.33%	||	 50.00 %	||	692ms
   32.00MB	||	 1152	||	  5	||	33.33%	||	 50.00 %	||	713ms
   32.00MB	||	 1280	||	  1	||	20.00%	||	 50.00 %	||	731ms
   32.00MB	||	 1280	||	  2	||	20.00%	||	 50.00 %	||	698ms
   32.00MB	||	 1280	||	  3	||	20.00%	||	 50.00 %	||	699ms
   32.00MB	||	 1280	||	  4	||	20.00%	||	 50.00 %	||	699ms
   32.00MB	||	 1280	||	  5	||	20.00%	||	 50.00 %	||	694ms
   32.00MB	||	 1408	||	  1	||	 9.09%	||	 50.00 %	||	690ms
   32.00MB	||	 1408	||	  2	||	 9.09%	||	 50.00 %	||	692ms
   32.00MB	||	 1408	||	  3	||	 9.09%	||	 50.00 %	||	696ms
   32.00MB	||	 1408	||	  4	||	 9.09%	||	 50.00 %	||	697ms
   32.00MB	||	 1408	||	  5	||	 9.09%	||	 50.00 %	||	684ms
   32.00MB	||	 1536	||	  1	||	 0.00%	||	 50.00 %	||	698ms
   32.00MB	||	 1536	||	  2	||	 0.00%	||	 50.00 %	||	696ms
   32.00MB	||	 1536	||	  3	||	 0.00%	||	 50.00 %	||	698ms
   32.00MB	||	 1536	||	  4	||	 0.00%	||	 50.00 %	||	696ms
   32.00MB	||	 1536	||	  5	||	 0.00%	||	 50.00 %	||	696ms
   32.00MB	||	 1664	||	  1	||	23.08%	||	 33.33 %	||	596ms
   32.00MB	||	 1664	||	  2	||	23.08%	||	 33.33 %	||	588ms
   32.00MB	||	 1664	||	  3	||	23.08%	||	 33.33 %	||	590ms
   32.00MB	||	 1664	||	  4	||	23.08%	||	 33.33 %	||	588ms
   32.00MB	||	 1664	||	  5	||	23.08%	||	 33.33 %	||	591ms
   32.00MB	||	 1792	||	  1	||	14.29%	||	 33.33 %	||	586ms
   32.00MB	||	 1792	||	  2	||	14.29%	||	 33.33 %	||	598ms
   32.00MB	||	 1792	||	  3	||	14.29%	||	 33.33 %	||	587ms
   32.00MB	||	 1792	||	  4	||	14.29%	||	 33.33 %	||	599ms
   32.00MB	||	 1792	||	  5	||	14.29%	||	 33.33 %	||	591ms
   32.00MB	||	 1920	||	  1	||	 6.67%	||	 33.33 %	||	586ms
   32.00MB	||	 1920	||	  2	||	 6.67%	||	 33.33 %	||	582ms
   32.00MB	||	 1920	||	  3	||	 6.67%	||	 33.33 %	||	589ms
   32.00MB	||	 1920	||	  4	||	 6.67%	||	 33.33 %	||	599ms
   32.00MB	||	 1920	||	  5	||	 6.67%	||	 33.33 %	||	594ms
   32.00MB	||	 2048	||	  1	||	 0.00%	||	 33.33 %	||	588ms
   32.00MB	||	 2048	||	  2	||	 0.00%	||	 33.33 %	||	595ms
   32.00MB	||	 2048	||	  3	||	 0.00%	||	 33.33 %	||	592ms
   32.00MB	||	 2048	||	  4	||	 0.00%	||	 33.33 %	||	587ms
   32.00MB	||	 2048	||	  5	||	 0.00%	||	 33.33 %	||	593ms
   64.00MB	||	 1536	||	  1	||	 0.00%	||	 50.00 %	||	2677ms
   64.00MB	||	 1536	||	  2	||	 0.00%	||	 50.00 %	||	2683ms
   64.00MB	||	 1536	||	  3	||	 0.00%	||	 50.00 %	||	2649ms
   64.00MB	||	 1536	||	  4	||	 0.00%	||	 50.00 %	||	2672ms
   64.00MB	||	 1536	||	  5	||	 0.00%	||	 50.00 %	||	2657ms
   64.00MB	||	 1792	||	  1	||	14.29%	||	 33.33 %	||	2270ms
   64.00MB	||	 1792	||	  2	||	14.29%	||	 33.33 %	||	2305ms
   64.00MB	||	 1792	||	  3	||	14.29%	||	 33.33 %	||	2318ms
   64.00MB	||	 1792	||	  4	||	14.29%	||	 33.33 %	||	2314ms
   64.00MB	||	 1792	||	  5	||	14.29%	||	 33.33 %	||	2312ms
   64.00MB	||	 2048	||	  1	||	 0.00%	||	 33.33 %	||	2300ms
   64.00MB	||	 2048	||	  2	||	 0.00%	||	 33.33 %	||	2280ms
   64.00MB	||	 2048	||	  3	||	 0.00%	||	 33.33 %	||	2277ms
   64.00MB	||	 2048	||	  4	||	 0.00%	||	 33.33 %	||	2287ms
   64.00MB	||	 2048	||	  5	||	 0.00%	||	 33.33 %	||	2309ms
   64.00MB	||	 2304	||	  1	||	33.33%	||	 50.00 %	||	701ms
   64.00MB	||	 2304	||	  2	||	33.33%	||	 50.00 %	||	741ms
   64.00MB	||	 2304	||	  3	||	33.33%	||	 50.00 %	||	718ms
   64.00MB	||	 2304	||	  4	||	33.33%	||	 50.00 %	||	702ms
   64.00MB	||	 2304	||	  5	||	33.33%	||	 50.00 %	||	701ms
   64.00MB	||	 2560	||	  1	||	20.00%	||	 50.00 %	||	690ms
   64.00MB	||	 2560	||	  2	||	20.00%	||	 50.00 %	||	694ms
   64.00MB	||	 2560	||	  3	||	20.00%	||	 50.00 %	||	697ms
   64.00MB	||	 2560	||	  4	||	20.00%	||	 50.00 %	||	699ms
   64.00MB	||	 2560	||	  5	||	20.00%	||	 50.00 %	||	703ms
   64.00MB	||	 2816	||	  1	||	 9.09%	||	 50.00 %	||	701ms
   64.00MB	||	 2816	||	  2	||	 9.09%	||	 50.00 %	||	695ms
   64.00MB	||	 2816	||	  3	||	 9.09%	||	 50.00 %	||	702ms
   64.00MB	||	 2816	||	  4	||	 9.09%	||	 50.00 %	||	700ms
   64.00MB	||	 2816	||	  5	||	 9.09%	||	 50.00 %	||	701ms
   64.00MB	||	 3072	||	  1	||	 0.00%	||	 50.00 %	||	689ms
   64.00MB	||	 3072	||	  2	||	 0.00%	||	 50.00 %	||	695ms
   64.00MB	||	 3072	||	  3	||	 0.00%	||	 50.00 %	||	701ms
   64.00MB	||	 3072	||	  4	||	 0.00%	||	 50.00 %	||	701ms
   64.00MB	||	 3072	||	  5	||	 0.00%	||	 50.00 %	||	696ms
   64.00MB	||	 3328	||	  1	||	23.08%	||	 33.33 %	||	597ms
   64.00MB	||	 3328	||	  2	||	23.08%	||	 33.33 %	||	602ms
   64.00MB	||	 3328	||	  3	||	23.08%	||	 33.33 %	||	593ms
   64.00MB	||	 3328	||	  4	||	23.08%	||	 33.33 %	||	593ms
   64.00MB	||	 3328	||	  5	||	23.08%	||	 33.33 %	||	604ms
   64.00MB	||	 3584	||	  1	||	14.29%	||	 33.33 %	||	594ms
   64.00MB	||	 3584	||	  2	||	14.29%	||	 33.33 %	||	590ms
   64.00MB	||	 3584	||	  3	||	14.29%	||	 33.33 %	||	597ms
   64.00MB	||	 3584	||	  4	||	14.29%	||	 33.33 %	||	599ms
   64.00MB	||	 3584	||	  5	||	14.29%	||	 33.33 %	||	606ms
   64.00MB	||	 3840	||	  1	||	 6.67%	||	 33.33 %	||	602ms
   64.00MB	||	 3840	||	  2	||	 6.67%	||	 33.33 %	||	599ms
   64.00MB	||	 3840	||	  3	||	 6.67%	||	 33.33 %	||	594ms
   64.00MB	||	 3840	||	  4	||	 6.67%	||	 33.33 %	||	589ms
   64.00MB	||	 3840	||	  5	||	 6.67%	||	 33.33 %	||	603ms
   64.00MB	||	 4096	||	  1	||	 0.00%	||	 33.33 %	||	606ms
   64.00MB	||	 4096	||	  2	||	 0.00%	||	 33.33 %	||	597ms
   64.00MB	||	 4096	||	  3	||	 0.00%	||	 33.33 %	||	599ms
   64.00MB	||	 4096	||	  4	||	 0.00%	||	 33.33 %	||	593ms
   64.00MB	||	 4096	||	  5	||	 0.00%	||	 33.33 %	||	605ms
  128.00MB	||	 3072	||	  1	||	 0.00%	||	 50.00 %	||	2700ms
  128.00MB	||	 3072	||	  2	||	 0.00%	||	 50.00 %	||	2712ms
  128.00MB	||	 3072	||	  3	||	 0.00%	||	 50.00 %	||	2680ms
  128.00MB	||	 3072	||	  4	||	 0.00%	||	 50.00 %	||	2673ms
  128.00MB	||	 3072	||	  5	||	 0.00%	||	 50.00 %	||	2668ms
  128.00MB	||	 3584	||	  1	||	14.29%	||	 33.33 %	||	2323ms
  128.00MB	||	 3584	||	  2	||	14.29%	||	 33.33 %	||	2300ms
  128.00MB	||	 3584	||	  3	||	14.29%	||	 33.33 %	||	2307ms
  128.00MB	||	 3584	||	  4	||	14.29%	||	 33.33 %	||	2322ms
  128.00MB	||	 3584	||	  5	||	14.29%	||	 33.33 %	||	2294ms
  128.00MB	||	 4096	||	  1	||	 0.00%	||	 33.33 %	||	2311ms
  128.00MB	||	 4096	||	  2	||	 0.00%	||	 33.33 %	||	2345ms
  128.00MB	||	 4096	||	  3	||	 0.00%	||	 33.33 %	||	2300ms
  128.00MB	||	 4096	||	  4	||	 0.00%	||	 33.33 %	||	2305ms
  128.00MB	||	 4096	||	  5	||	 0.00%	||	 33.33 %	||	2452ms
  128.00MB	||	 4608	||	  1	||	33.33%	||	 50.00 %	||	702ms
  128.00MB	||	 4608	||	  2	||	33.33%	||	 50.00 %	||	700ms
  128.00MB	||	 4608	||	  3	||	33.33%	||	 50.00 %	||	697ms
  128.00MB	||	 4608	||	  4	||	33.33%	||	 50.00 %	||	705ms
  128.00MB	||	 4608	||	  5	||	33.33%	||	 50.00 %	||	713ms
  128.00MB	||	 5120	||	  1	||	20.00%	||	 50.00 %	||	704ms
  128.00MB	||	 5120	||	  2	||	20.00%	||	 50.00 %	||	707ms
  128.00MB	||	 5120	||	  3	||	20.00%	||	 50.00 %	||	704ms
  128.00MB	||	 5120	||	  4	||	20.00%	||	 50.00 %	||	706ms
  128.00MB	||	 5120	||	  5	||	20.00%	||	 50.00 %	||	704ms
  128.00MB	||	 5632	||	  1	||	 9.09%	||	 50.00 %	||	712ms
  128.00MB	||	 5632	||	  2	||	 9.09%	||	 50.00 %	||	705ms
  128.00MB	||	 5632	||	  3	||	 9.09%	||	 50.00 %	||	708ms
  128.00MB	||	 5632	||	  4	||	 9.09%	||	 50.00 %	||	704ms
  128.00MB	||	 5632	||	  5	||	 9.09%	||	 50.00 %	||	708ms
  128.00MB	||	 6144	||	  1	||	 0.00%	||	 50.00 %	||	701ms
  128.00MB	||	 6144	||	  2	||	 0.00%	||	 50.00 %	||	703ms
  128.00MB	||	 6144	||	  3	||	 0.00%	||	 50.00 %	||	704ms
  128.00MB	||	 6144	||	  4	||	 0.00%	||	 50.00 %	||	705ms
  128.00MB	||	 6144	||	  5	||	 0.00%	||	 50.00 %	||	707ms
  128.00MB	||	 6656	||	  1	||	23.08%	||	 33.33 %	||	611ms
  128.00MB	||	 6656	||	  2	||	23.08%	||	 33.33 %	||	605ms
  128.00MB	||	 6656	||	  3	||	23.08%	||	 33.33 %	||	600ms
  128.00MB	||	 6656	||	  4	||	23.08%	||	 33.33 %	||	605ms
  128.00MB	||	 6656	||	  5	||	23.08%	||	 33.33 %	||	596ms
  128.00MB	||	 7168	||	  1	||	14.29%	||	 33.33 %	||	596ms
  128.00MB	||	 7168	||	  2	||	14.29%	||	 33.33 %	||	598ms
  128.00MB	||	 7168	||	  3	||	14.29%	||	 33.33 %	||	604ms
  128.00MB	||	 7168	||	  4	||	14.29%	||	 33.33 %	||	602ms
  128.00MB	||	 7168	||	  5	||	14.29%	||	 33.33 %	||	602ms
  128.00MB	||	 7680	||	  1	||	 6.67%	||	 33.33 %	||	601ms
  128.00MB	||	 7680	||	  2	||	 6.67%	||	 33.33 %	||	607ms
  128.00MB	||	 7680	||	  3	||	 6.67%	||	 33.33 %	||	600ms
  128.00MB	||	 7680	||	  4	||	 6.67%	||	 33.33 %	||	602ms
  128.00MB	||	 7680	||	  5	||	 6.67%	||	 33.33 %	||	603ms
  128.00MB	||	 8192	||	  1	||	 0.00%	||	 33.33 %	||	600ms
  128.00MB	||	 8192	||	  2	||	 0.00%	||	 33.33 %	||	594ms
  128.00MB	||	 8192	||	  3	||	 0.00%	||	 33.33 %	||	593ms
  128.00MB	||	 8192	||	  4	||	 0.00%	||	 33.33 %	||	596ms
  128.00MB	||	 8192	||	  5	||	 0.00%	||	 33.33 %	||	598ms
  256.00MB	||	 6144	||	  1	||	 0.00%	||	 50.00 %	||	2672ms
  256.00MB	||	 6144	||	  2	||	 0.00%	||	 50.00 %	||	2669ms
  256.00MB	||	 6144	||	  3	||	 0.00%	||	 50.00 %	||	2657ms
  256.00MB	||	 6144	||	  4	||	 0.00%	||	 50.00 %	||	2682ms
  256.00MB	||	 6144	||	  5	||	 0.00%	||	 50.00 %	||	2710ms
  256.00MB	||	 7168	||	  1	||	14.29%	||	 33.33 %	||	2307ms
  256.00MB	||	 7168	||	  2	||	14.29%	||	 33.33 %	||	2318ms
  256.00MB	||	 7168	||	  3	||	14.29%	||	 33.33 %	||	2305ms
  256.00MB	||	 7168	||	  4	||	14.29%	||	 33.33 %	||	2297ms
  256.00MB	||	 7168	||	  5	||	14.29%	||	 33.33 %	||	2303ms
  256.00MB	||	 8192	||	  1	||	 0.00%	||	 33.33 %	||	2318ms
  256.00MB	||	 8192	||	  2	||	 0.00%	||	 33.33 %	||	2336ms
  256.00MB	||	 8192	||	  3	||	 0.00%	||	 33.33 %	||	2323ms
  256.00MB	||	 8192	||	  4	||	 0.00%	||	 33.33 %	||	2447ms
  256.00MB	||	 8192	||	  5	||	 0.00%	||	 33.33 %	||	2313ms
  256.00MB	||	 9216	||	  1	||	33.33%	||	 50.00 %	||	707ms
  256.00MB	||	 9216	||	  2	||	33.33%	||	 50.00 %	||	712ms
  256.00MB	||	 9216	||	  3	||	33.33%	||	 50.00 %	||	710ms
  256.00MB	||	 9216	||	  4	||	33.33%	||	 50.00 %	||	718ms
  256.00MB	||	 9216	||	  5	||	33.33%	||	 50.00 %	||	713ms
  256.00MB	||	10240	||	  1	||	20.00%	||	 50.00 %	||	714ms
  256.00MB	||	10240	||	  2	||	20.00%	||	 50.00 %	||	713ms
  256.00MB	||	10240	||	  3	||	20.00%	||	 50.00 %	||	703ms
  256.00MB	||	10240	||	  4	||	20.00%	||	 50.00 %	||	706ms
  256.00MB	||	10240	||	  5	||	20.00%	||	 50.00 %	||	711ms
  256.00MB	||	11264	||	  1	||	 9.09%	||	 50.00 %	||	699ms
  256.00MB	||	11264	||	  2	||	 9.09%	||	 50.00 %	||	699ms
  256.00MB	||	11264	||	  3	||	 9.09%	||	 50.00 %	||	698ms
  256.00MB	||	11264	||	  4	||	 9.09%	||	 50.00 %	||	702ms
  256.00MB	||	11264	||	  5	||	 9.09%	||	 50.00 %	||	706ms
  256.00MB	||	12288	||	  1	||	 0.00%	||	 50.00 %	||	704ms
  256.00MB	||	12288	||	  2	||	 0.00%	||	 50.00 %	||	713ms
  256.00MB	||	12288	||	  3	||	 0.00%	||	 50.00 %	||	709ms
  256.00MB	||	12288	||	  4	||	 0.00%	||	 50.00 %	||	712ms
  256.00MB	||	12288	||	  5	||	 0.00%	||	 50.00 %	||	697ms
  256.00MB	||	13312	||	  1	||	23.08%	||	 33.33 %	||	599ms
  256.00MB	||	13312	||	  2	||	23.08%	||	 33.33 %	||	598ms
  256.00MB	||	13312	||	  3	||	23.08%	||	 33.33 %	||	594ms
  256.00MB	||	13312	||	  4	||	23.08%	||	 33.33 %	||	601ms
  256.00MB	||	13312	||	  5	||	23.08%	||	 33.33 %	||	593ms
  256.00MB	||	14336	||	  1	||	14.29%	||	 33.33 %	||	599ms
  256.00MB	||	14336	||	  2	||	14.29%	||	 33.33 %	||	602ms
  256.00MB	||	14336	||	  3	||	14.29%	||	 33.33 %	||	600ms
  256.00MB	||	14336	||	  4	||	14.29%	||	 33.33 %	||	602ms
  256.00MB	||	14336	||	  5	||	14.29%	||	 33.33 %	||	594ms
  256.00MB	||	15360	||	  1	||	 6.67%	||	 33.33 %	||	597ms
  256.00MB	||	15360	||	  2	||	 6.67%	||	 33.33 %	||	596ms
  256.00MB	||	15360	||	  3	||	 6.67%	||	 33.33 %	||	596ms
  256.00MB	||	15360	||	  4	||	 6.67%	||	 33.33 %	||	599ms
  256.00MB	||	15360	||	  5	||	 6.67%	||	 33.33 %	||	597ms
  256.00MB	||	16384	||	  1	||	 0.00%	||	 33.33 %	||	602ms
  256.00MB	||	16384	||	  2	||	 0.00%	||	 33.33 %	||	607ms
  256.00MB	||	16384	||	  3	||	 0.00%	||	 33.33 %	||	613ms
  256.00MB	||	16384	||	  4	||	 0.00%	||	 33.33 %	||	604ms
  256.00MB	||	16384	||	  5	||	 0.00%	||	 33.33 %	||	600ms
The Experiment Statistics are as follows
The Average Internal Fragmentation was  10.43%
The Average External Fragmentation was  43.85%
The Average Time Taken in ms. per MB was 240.26
